"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[6447],{26447:(e,t,i)=>{i.r(t),i.d(t,{ElevationProfileView2D:()=>c});var o=i(44584),s=i(61681),n=i(76868),h=i(89815),r=i(55109),a=i(67979),d=i(78668),l=i(42780);class p{constructor(e){this._params=e,this._highlightTask=null,this._highlightHandle=null}destroy(){this.remove()}remove(){this._highlightTask=(0,s.IM)(this._highlightTask),this._highlightHandle=(0,s.hw)(this._highlightHandle)}update(e){if(this.remove(),(0,s.Wi)(e)||(t=e,!(0,s.pC)(t.geometry)||"polyline"!==t.geometry.type))return;var t;const i=e.layer;this._highlightTask=(0,a.vr)((async t=>{const o=await this._params.view.whenLayerView(i);(0,d.k_)(t);const s=(0,l.tl)(o)?o:null;s&&(this._highlightHandle=s.highlight(e))}))}}class c{constructor(e,t){this._handles=new o.Z,this._inputRepresentation=new p({view:e}),this._hoveredPoints=new r.l({view:e}),this._handles.add([(0,n.YP)((()=>t.viewModel.hoveredPoints),(e=>this._hoveredPoints.update(e)),n.tX),(0,n.YP)((()=>{const{state:e,highlightEnabled:i,viewModel:o}=t;return{input:o.input,state:e,highlightEnabled:i}}),(e=>this._updateInputRepresentation(e)),n.tX)])}destroy(){this._handles=(0,s.SC)(this._handles),this._inputRepresentation=(0,s.SC)(this._inputRepresentation),this._hoveredPoints=(0,s.SC)(this._hoveredPoints)}_updateInputRepresentation({input:e,state:t,highlightEnabled:i}){t===h.dd.Selected&&i?this._inputRepresentation.update(e):this._inputRepresentation.remove()}}},55109:(e,t,i)=>{i.d(t,{l:()=>c});var o=i(36663),s=i(53443),n=i(41831),h=i(61681),r=i(76868),a=i(81977),d=(i(7283),i(7753),i(40266)),l=i(89815),p=i(83097);let c=class extends s.Z{constructor(e){super(e),this._hoveredPoints=new n.Z}initialize(){this.addHandles((0,r.YP)((()=>this._hoveredPoints.toArray().map((({anchor:e,element:t})=>({screenLocation:e.screenLocation,element:t})))),(e=>{for(const{screenLocation:t,element:i}of e)(0,h.yw)(t,(({x:e,y:t})=>{i.style.transform=`translate(${e}px, ${t}px)`}))}),r.tX))}destroy(){this._hoveredPoints.drain((e=>this._destroyHoveredPoint(e)))}update(e){const t=this.view,i=this._hoveredPoints,o=e.length;for(;this._hoveredPoints.length>o;)this._destroyHoveredPoint(this._hoveredPoints.pop());for(;this._hoveredPoints.length<o;){const e=this._makeHoveredPoint();i.push(e),t.surface?.appendChild(e.element)}for(let t=0;t<o;++t){const s=i.getItemAt(o-1-t),n=e[t];this._updateHoveredPoint(s,n)}}_makeHoveredPoint(){const{size:e,borderStyle:t,borderColor:i,borderWidth:o,boxShadow:s}=(0,l.iE)().hoveredPointsStyle,n=this.view,h=new p.Z({view:n,screenLocationEnabled:!0}),r=document.createElement("div"),a=r.style;return a.position="absolute",a.top="0",a.left="0",a.contain="strict",a.boxSizing="border-box",a.width=`${e}px`,a.height=`${e}px`,a.marginTop=`-${e/2}px`,a.marginLeft=`-${e/2}px`,a.border=`${t} ${o}px ${i}`,a.borderRadius=`${e}px`,a.boxShadow=s,{anchor:h,element:r}}_updateHoveredPoint({anchor:e,element:t},i){e.screenLocationEnabled=!0,e.location=i.hoveredPoint;const o=t.style;o.display="block",o.background=i.color.toCss()}_destroyHoveredPoint({anchor:e,element:t}){e.destroy(),this.view.surface?.removeChild(t)}};(0,o._)([(0,a.Cb)()],c.prototype,"view",void 0),(0,o._)([(0,a.Cb)()],c.prototype,"_hoveredPoints",void 0),c=(0,o._)([(0,d.j)("esri.widgets.ElevationProfile.support.HoveredPoints")],c)}}]);