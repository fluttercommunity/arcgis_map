"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[5400],{75400:(t,e,n)=>{n.r(e),n.d(e,{default:()=>l});var s=n(36663),i=n(61681),o=n(78668),d=(n(13802),n(7283),n(7753),n(70375),n(39994),n(40266)),c=n(6766),a=n(8909),r=n(56215),h=n(91917),u=n(17519),p=n(20766),g=n(76386);function _(t,e,n){const s=(0,h.c)(),i=(0,h.g)(s);return(0,c.z)(i,i,t,.5),(0,c.z)(i,i,e,.5),s[3]=(0,c.i)(i,t),(0,c.a)(i,i,n),s}let m=class{constructor(){this._idToComponent=new Map,this._components=new p.Z((t=>t.bounds)),this._edges=new p.Z((t=>t.bounds)),this._tmpLineSegment=(0,r.Ue)(),this._tmpP1=(0,a.c)(),this._tmpP2=(0,a.c)(),this._tmpP3=(0,a.c)(),this.remoteClient=null}async fetchCandidates(t,e){await Promise.resolve(),(0,o.k_)(e),await this._ensureEdgeLocations(t,e);const n=[];return this._edges.forEachNeighbor((e=>(this._addCandidates(t,e,n),n.length<1e3)),t.bounds),{result:{candidates:n}}}async _ensureEdgeLocations(t,e){const n=[];if(this._components.forEachNeighbor((t=>{if((0,i.Wi)(t.info)){const{id:e,uid:s}=t;n.push({id:e,uid:s})}return!0}),t.bounds),!n.length)return;const s={components:n},o=await this.remoteClient.invoke("fetchAllEdgeLocations",s,(0,i.Pt)(e,{}));for(const t of o.components)this._setFetchEdgeLocations(t)}async add(t){const e=new b(t.id,t.bounds);return this._idToComponent.set(e.id,e),this._components.add([e]),{result:{}}}async remove(t){const e=this._idToComponent.get(t.id);if(e){const t=[];this._edges.forEachNeighbor((n=>(n.component===e&&t.push(n),!0)),e.bounds),this._edges.remove(t),this._components.remove([e]),this._idToComponent.delete(e.id)}return{result:{}}}_setFetchEdgeLocations(t){const e=this._idToComponent.get(t.id);if((0,i.Wi)(e)||t.uid!==e.uid)return;const n=g.n_.createView(t.locations),s=new Array(n.count),o=(0,a.c)(),d=(0,a.c)();for(let i=0;i<n.count;i++){n.position0.getVec(i,o),n.position1.getVec(i,d);const c=_(o,d,t.origin),a=new f(e,i,c);s[i]=a}this._edges.add(s);const{objectIds:c,origin:r}=t;e.info={locations:n,objectIds:c,origin:r}}_addCandidates(t,e,n){const{info:s}=e.component,{origin:i,objectIds:o}=s,d=s.locations,a=d.position0.getVec(e.index,this._tmpP1),r=d.position1.getVec(e.index,this._tmpP2);(0,c.a)(a,a,i),(0,c.a)(r,r,i);const h=o[d.componentIndex.get(e.index)];this._addEdgeCandidate(t,h,a,r,n),this._addVertexCandidate(t,h,a,n),this._addVertexCandidate(t,h,r,n)}_addEdgeCandidate(t,e,n,s,i){if(!(t.types&u.r.EDGE))return;const o=(0,h.g)(t.bounds),d=(0,r.zk)(n,s,this._tmpLineSegment),p=(0,r.nF)(d,o,this._tmpP3);(0,h.m)(t.bounds,p)&&i.push({type:"edge",objectId:e,target:(0,a.a)(p),distance:(0,c.i)(o,p),start:(0,a.a)(n),end:(0,a.a)(s)})}_addVertexCandidate(t,e,n,s){if(!(t.types&u.r.VERTEX))return;const i=(0,h.g)(t.bounds);(0,h.m)(t.bounds,n)&&s.push({type:"vertex",objectId:e,target:(0,a.a)(n),distance:(0,c.i)(i,n)})}};m=(0,s._)([(0,d.j)("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],m);const l=m;class b{constructor(t,e){this.id=t,this.bounds=e,this.info=null,this.uid=++b.uid}}b.uid=0;class f{constructor(t,e,n){this.component=t,this.index=e,this.bounds=n}}}}]);