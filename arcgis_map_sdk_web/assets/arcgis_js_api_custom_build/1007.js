"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[1007],{71007:(e,t,o)=>{o.r(t),o.d(t,{executeRelationshipQuery:()=>i,executeRelationshipQueryForCount:()=>l});var r=o(84238),n=o(66341),a=o(27707);function c(e,t){const o=e.toJSON();return o.objectIds&&(o.objectIds=o.objectIds.join(",")),o.orderByFields&&(o.orderByFields=o.orderByFields.join(",")),o.outFields&&!t?.returnCountOnly?o.outFields.includes("*")?o.outFields="*":o.outFields=o.outFields.join(","):delete o.outFields,o.outSpatialReference&&(o.outSR=o.outSR.wkid||JSON.stringify(o.outSR.toJSON()),delete o.outSpatialReference),o.dynamicDataSource&&(o.layer=JSON.stringify({source:o.dynamicDataSource}),delete o.dynamicDataSource),o}async function s(e,t,o={},r){const s=(0,a.A)({...e.query,f:"json",...r,...c(t,r)});return(0,n.default)(e.path+"/queryRelatedRecords",{...o,query:{...o.query,...s}})}var u=o(51211),d=o(8284);async function i(e,t,o){t=d.default.from(t);return async function(e,t,o){const r=await s(e,t,o),n=r.data,a=n.geometryType,c=n.spatialReference,u={};for(const e of n.relatedRecordGroups){const t={fields:void 0,objectIdFieldName:void 0,geometryType:a,spatialReference:c,hasZ:!!n.hasZ,hasM:!!n.hasM,features:e.relatedRecords};if(null!=e.objectId)u[e.objectId]=t;else for(const o in e)e.hasOwnProperty(o)&&"relatedRecords"!==o&&(u[e[o]]=t)}return{...r,data:u}}((0,r.en)(e),t,o).then((e=>{const t=e.data,o={};return Object.keys(t).forEach((e=>o[e]=u.Z.fromJSON(t[e]))),o}))}async function l(e,t,o){t=d.default.from(t);return async function(e,t,o){const r=await s(e,t,o,{returnCountOnly:!0}),n=r.data,a={};for(const e of n.relatedRecordGroups)null!=e.objectId&&(a[e.objectId]=e.count);return{...r,data:a}}((0,r.en)(e),t,{...o}).then((e=>e.data))}}}]);