"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[5875],{15875:(t,e,r)=>{r.d(e,{mR:()=>Y,C$:()=>v,e2:()=>G,Jq:()=>pt,wO:()=>Z,Mk:()=>V,cM:()=>Q,Z_:()=>tt,ws:()=>X,xV:()=>H,Ub:()=>_t,UK:()=>K,Yw:()=>$,$_:()=>D,Gr:()=>it,nU:()=>z,Ll:()=>ct,$K:()=>B,DQ:()=>at,HX:()=>rt,yP:()=>dt,hj:()=>W,iw:()=>ot,TB:()=>lt,sG:()=>et,Gg:()=>ut,js:()=>ht,Y8:()=>F});var i=r(70375),n=r(13802),a=(r(19431),r(25609)),s=(r(62173),r(38716)),o=r(34596);class c{constructor(){this.color=[0,0,0,0],this.haloColor=[0,0,0,0],this.haloSize=0,this.size=12,this.angle=0,this.offsetX=0,this.offsetY=0,this.hAnchor=0,this.vAnchor=0}acquire(t,e,r,i,n,a,s,o,c){this.color=t,this.haloColor=e,this.haloSize=r,this.size=i,this.angle=n,this.offsetX=a,this.offsetY=s,this.hAnchor=o,this.vAnchor=c}release(){this.color[0]=this.color[1]=this.color[2]=this.color[3]=0,this.haloColor[0]=this.haloColor[1]=this.haloColor[2]=this.haloColor[3]=0,this.haloSize=0,this.size=0,this.angle=0,this.offsetX=0,this.offsetY=0,this.hAnchor=0,this.vAnchor=0}}c.pool=new o.Z(c);var u=r(91907),l=(r(43487),r(41163));const h=n.Z.getLogger("esri.views.2d.engine.webgl.Utils"),_="geometry",p=[{name:_,strideInBytes:12}],E=[{name:_,strideInBytes:36}],d=[{name:_,strideInBytes:24}],m=[{name:_,strideInBytes:12}],T=[{name:_,strideInBytes:40}],I=[{name:_,strideInBytes:36}],g=[{name:_,strideInBytes:36}];function A(t){const e={};for(const r of t)e[r.name]=r.strideInBytes;return e}const f=A([{name:_,strideInBytes:36}]),L=A(p),M=A(E),w=A(d),S=A(m),N=A(T),x=A(I),R=A(g);function D(t,e){switch(t){case s.LW.MARKER:return e===s.mD.HEATMAP?L:f;case s.LW.FILL:switch(e){case s.mD.DOT_DENSITY:return S;case s.mD.SIMPLE:case s.mD.OUTLINE_FILL_SIMPLE:return w;default:return M}case s.LW.LINE:return N;case s.LW.TEXT:return x;case s.LW.LABEL:return R}}const U=[_],P=[_],y=[_],O=[_],b=[_];function C(t){switch(t){case s.LW.MARKER:return U;case s.LW.FILL:return P;case s.LW.LINE:return y;case s.LW.TEXT:return O;case s.LW.LABEL:return b}}function F(t){switch(t%4){case 0:case 2:return 4;case 1:case 3:return 1}}function v(t,e){switch(e%4){case 0:case 2:return new Uint32Array(Math.floor(t*e/4));case 1:case 3:return new Uint8Array(t*e)}}function G(t,e){switch(e%4){case 0:case 2:return new Uint32Array(t);case 1:case 3:return new Uint8Array(t)}}function B(t){return null!=t}function W(t){return"number"==typeof t}function X(t){switch(t){case"butt":return a.RL.BUTT;case"round":return a.RL.ROUND;case"square":return a.RL.SQUARE;default:return h.error(new i.Z("mapview-invalid-type",`Cap type ${t} is not a valid option. Defaulting to round`)),a.RL.ROUND}}function H(t){switch(t){case"miter":return a.AH.MITER;case"bevel":return a.AH.BEVEL;case"round":return a.AH.ROUND;default:return h.error(new i.Z("mapview-invalid-type",`Join type ${t} is not a valid option. Defaulting to round`)),a.AH.ROUND}}function z(t){switch(t){case"opacity":return s.pc.OPACITY;case"color":return s.pc.COLOR;case"rotation":return s.pc.ROTATION;case"size":return s.pc.SIZE;default:return h.error(`Cannot interpret unknown vv: ${t}`),null}}function Z(t,e,r,i,n,a,s){for(const e in a){const i=a[e].stride,s=F(i),o=a[e].data,c=r[e].data,u=i*n.vertexCount/s,l=i*t/s,h=i*n.vertexFrom/s;for(let t=0;t<u;++t)c[t+l]=o[t+h]}const o=n.indexCount;for(let r=0;r<o;++r)i[r+e]=s[r+n.indexFrom]-n.vertexFrom+t}const Y={[_]:u.l1.STATIC_DRAW};function V(t,e){const r=[];for(let i=0;i<5;++i){const n=C(i),a={};for(const t of n)a[t]={data:e(i,t)};r.push({data:t(i),buffers:a})}return r}function k(t){switch(t){case u.g.BYTE:case u.g.UNSIGNED_BYTE:return 1;case u.g.SHORT:case u.g.UNSIGNED_SHORT:return 2;case u.g.FLOAT:case u.g.INT:case u.g.UNSIGNED_INT:return 4}}function $(t){switch(t){case u.Br.UNSIGNED_BYTE:return 1;case u.Br.UNSIGNED_SHORT_4_4_4_4:return 2;case u.Br.FLOAT:return 4;default:return void h.error(new i.Z("webgl-utils",`Unable to handle type ${t}`))}}function K(t){switch(t){case u.Br.UNSIGNED_BYTE:return Uint8Array;case u.Br.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case u.Br.FLOAT:return Float32Array;default:return void h.error(new i.Z("webgl-utils",`Unable to handle type ${t}`))}}const q=t=>{const e=new Map;for(const r in t)for(const i of t[r])e.set(i.name,i.location);return e},J=t=>{const e={};for(const r in t){const i=t[r];e[r]=i.length?i[0].stride:0}return e},j=new Map,Q=(t,e)=>{if(!j.has(t)){const r=function(t){const e={};for(const r in t){const i=t[r];let n=0;e[r]=i.map((t=>{const e=new l.G(t.name,t.count,t.type,n,0,t.normalized||!1);return n+=t.count*k(t.type),e})),e[r].forEach((t=>t.stride=n))}return e}(e),i={strides:J(r),bufferLayouts:r,attributes:q(e)};j.set(t,i)}return j.get(t)};function tt(t){t(s.LW.FILL),t(s.LW.LINE),t(s.LW.MARKER),t(s.LW.TEXT),t(s.LW.LABEL)}const et=t=>"path"in t&&Et(t.path),rt=t=>"url"in t&&t.url||"imageData"in t&&t.imageData,it=t=>"imageData"in t&&t.imageData&&"contentType"in t&&t.contentType?`data:${t.contentType};base64,${t.imageData}`:"url"in t?t.url:null,nt=t=>t.startsWith("data:image/gif"),at=t=>"url"in t&&t.url&&(t.url.includes(".gif")||nt(t.url))||"contentType"in t&&"image/gif"===t.contentType||"imageData"in t&&nt(t.imageData),st=t=>t.startsWith("data:image/png"),ot=t=>"url"in t&&t.url&&(t.url.includes(".png")||st(t.url))||"contentType"in t&&"image/png"===t.contentType||"imageData"in t&&st(t.imageData),ct=t=>t.type&&t.type.toLowerCase().includes("3d");function ut(t){switch(t.type){case"line":{const e=t;return"CIMSolidStroke"===e.cim.type&&!e.dashTemplate}case"fill":return"CIMSolidFill"===t.cim.type;case"esriSFS":return"esriSFSSolid"===t.style||"esriSFSNull"===t.style;case"esriSLS":return"esriSLSSolid"===t.style||"esriSLSNull"===t.style;default:return!1}}const lt=t=>t.includes("data:image/svg+xml");function ht(t){switch("cim"in t?t.cim.type:t.type){case"esriSMS":case"esriPMS":case"CIMPointSymbol":return!1;case"CIMVectorMarker":case"CIMCharacterMarker":case"CIMPictureMarker":return dt(t);default:return!0}}function _t(t){const e="maxVVSize"in t&&t.maxVVSize,r="width"in t&&t.width||"size"in t&&t.size||0;return e||r}function pt(t){const e=[];for(let r=0;r<t.length;r++)e.push(t.charCodeAt(r));return e}const Et=t=>!!t&&(t=t.trim(),!!(/^[mzlhvcsqta]\s*[-+.0-9][^mlhvzcsqta]+/i.test(t)&&/[\dz]$/i.test(t)&&t.length>4)),dt=t=>"fill"===t.type&&"CIMMarkerPlacementInsidePolygon"===t?.cim?.markerPlacement?.type},62173:(t,e,r)=>{r.d(e,{Vs:()=>c,aH:()=>o,pr:()=>a,t2:()=>s});var i=r(61681),n=r(8530);function a(t,e=0,r=!1){const i=t[e+3];return t[e+0]*=i,t[e+1]*=i,t[e+2]*=i,r||(t[e+3]*=255),t}function s(t){if(!t)return 0;const{r:e,g:r,b:i,a}=t;return(0,n.Jz)(e*a,r*a,i*a,255*a)}function o(t){if(!t)return 0;const[e,r,i,a]=t;return(0,n.Jz)(e*(a/255),r*(a/255),i*(a/255),a)}function c(t,e,r=0){if((0,i.Wi)(e))return t[r+0]=0,t[r+1]=0,t[r+2]=0,void(t[r+3]=0);const{r:n,g:a,b:s,a:o}=e;t[r+0]=n*o/255,t[r+1]=a*o/255,t[r+2]=s*o/255,t[r+3]=o}},38716:(t,e,r)=>{var i,n,a,s,o,c,u,l;r.d(e,{LW:()=>i,Un:()=>u,X:()=>o,jx:()=>a,mD:()=>l,mf:()=>c,pc:()=>s}),function(t){t[t.FILL=0]="FILL",t[t.LINE=1]="LINE",t[t.MARKER=2]="MARKER",t[t.TEXT=3]="TEXT",t[t.LABEL=4]="LABEL"}(i||(i={})),function(t){t[t.SUCCEEDED=0]="SUCCEEDED",t[t.FAILED_OUT_OF_MEMORY=1]="FAILED_OUT_OF_MEMORY"}(n||(n={})),function(t){t[t.NONE=0]="NONE",t[t.MAP=1]="MAP",t[t.LABEL=2]="LABEL",t[t.LABEL_ALPHA=4]="LABEL_ALPHA",t[t.HITTEST=8]="HITTEST",t[t.HIGHLIGHT=16]="HIGHLIGHT",t[t.CLIP=32]="CLIP",t[t.DEBUG=64]="DEBUG",t[t.NUM_DRAW_PHASES=9]="NUM_DRAW_PHASES"}(a||(a={})),function(t){t[t.SIZE=0]="SIZE",t[t.COLOR=1]="COLOR",t[t.OPACITY=2]="OPACITY",t[t.ROTATION=3]="ROTATION"}(s||(s={})),function(t){t[t.NONE=0]="NONE",t[t.OPACITY=1]="OPACITY",t[t.COLOR=2]="COLOR",t[t.ROTATION=4]="ROTATION",t[t.SIZE_MINMAX_VALUE=8]="SIZE_MINMAX_VALUE",t[t.SIZE_SCALE_STOPS=16]="SIZE_SCALE_STOPS",t[t.SIZE_FIELD_STOPS=32]="SIZE_FIELD_STOPS",t[t.SIZE_UNIT_VALUE=64]="SIZE_UNIT_VALUE"}(o||(o={})),function(t){t[t.MINMAX_TARGETS_OUTLINE=128]="MINMAX_TARGETS_OUTLINE",t[t.SCALE_TARGETS_OUTLINE=256]="SCALE_TARGETS_OUTLINE",t[t.FIELD_TARGETS_OUTLINE=512]="FIELD_TARGETS_OUTLINE",t[t.UNIT_TARGETS_OUTLINE=1024]="UNIT_TARGETS_OUTLINE"}(c||(c={})),function(t){t[t.SPRITE=0]="SPRITE",t[t.GLYPH=1]="GLYPH"}(u||(u={})),function(t){t[t.DEFAULT=0]="DEFAULT",t[t.SIMPLE=1]="SIMPLE",t[t.DOT_DENSITY=2]="DOT_DENSITY",t[t.OUTLINE_FILL=3]="OUTLINE_FILL",t[t.OUTLINE_FILL_SIMPLE=4]="OUTLINE_FILL_SIMPLE",t[t.HEATMAP=5]="HEATMAP",t[t.PIE_CHART=6]="PIE_CHART"}(l||(l={}))},8530:(t,e,r)=>{r.d(e,{Au:()=>n,Jz:()=>s,UJ:()=>a});const i=new Float32Array(1);function n(t){return[255&t,(65280&t)>>>8,(16711680&t)>>>16,(4278190080&t)>>>24]}function a(t,e){return 65535&t|e<<16}function s(t,e,r,i){return 255&t|(255&e)<<8|(255&r)<<16|i<<24}new Uint32Array(i.buffer)},43487:(t,e,r)=>{r.d(e,{x:()=>u}),r(39994);var i=r(19431),n=r(61681),a=r(6174),s=r(36172),o=r(91907),c=r(79193);class u{constructor(t,e,r=null){if(this._context=t,this.type="texture",this._glName=null,this._descriptor=void 0,this._samplingModeDirty=!1,this._wrapModeDirty=!1,this._wasImmutablyAllocated=!1,t.instanceCounter.increment(o._g.Texture,this),this._descriptor={target:o.No.TEXTURE_2D,samplingMode:o.cw.LINEAR,wrapMode:o.e8.REPEAT,flipped:!1,hasMipmap:!1,isOpaque:!1,unpackAlignment:4,preMultiplyAlpha:!1,isImmutable:!1,...e},t.type!==s.zO.WEBGL2&&(this._descriptor.isImmutable&&(this._descriptor.isImmutable=!1),_(this._descriptor.target)))throw new Error("3D and array textures are not supported in WebGL1");this._descriptor.target===o.No.TEXTURE_CUBE_MAP?this._setDataCubeMap(r):this.setData(r)}get glName(){return this._glName}get descriptor(){return this._descriptor}get isDirty(){return this._samplingModeDirty||this._wrapModeDirty}dispose(){this._context.gl&&this._glName&&(this._context.unbindTexture(this),this._context.gl.deleteTexture(this._glName),this._glName=null,this._context.instanceCounter.decrement(o._g.Texture,this))}release(){this.dispose()}resize(t,e){const r=this._descriptor;if(r.width!==t||r.height!==e){if(this._wasImmutablyAllocated)throw new Error("Immutable textures can't be resized!");r.width=t,r.height=e,this._descriptor.target===o.No.TEXTURE_CUBE_MAP?this._setDataCubeMap(null):this.setData(null)}}_setDataCubeMap(t=null){for(let e=o.No.TEXTURE_CUBE_MAP_POSITIVE_X;e<=o.No.TEXTURE_CUBE_MAP_NEGATIVE_Z;e++)this._setData(t,e)}setData(t){this._setData(t)}_setData(t,e){if(!this._context||!this._context.gl)return;const r=this._context.gl;this._glName||(this._glName=r.createTexture()),void 0===t&&(t=null);const i=this._descriptor;e??(e=i.target);const s=_(e);null===t&&(i.width=i.width||4,i.height=i.height||4,s&&(i.depth=i.depth??1));const E=this._context.bindTexture(this,u.TEXTURE_UNIT_FOR_UPDATES);this._context.setActiveTexture(u.TEXTURE_UNIT_FOR_UPDATES),u._validateTexture(this._context,i),this._configurePixelStorage();const d=i.pixelFormat;let m=i.internalFormat?i.internalFormat:this._deriveInternalFormat(d,i.dataType);if(h(t)){let n=t.width,o=t.height;const c=1;t instanceof HTMLVideoElement&&(n=t.videoWidth,o=t.videoHeight),i.width&&i.height,s&&i.depth,i.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(e,m,i.hasMipmap,n,o,c),this._texImage(e,0,m,n,o,c,t),(0,a.zu)(r),i.hasMipmap&&this.generateMipmap(),void 0===i.width&&(i.width=n),void 0===i.height&&(i.height=o),s&&void 0===i.depth&&(i.depth=c)}else{const{width:u,height:h,depth:_}=i;if(null!=u&&null!=h||console.error("Width and height must be specified!"),s&&null==_&&console.error("Depth must be specified!"),i.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(e,m,i.hasMipmap,u,h,_),r.DEPTH24_STENCIL8&&m===r.DEPTH_STENCIL&&(m=r.DEPTH24_STENCIL8),l(t)){const n=t.levels,a=p(e,u,h,_),s=Math.min(a-1,n.length-1);(0,c.Z)(r)?r.texParameteri(i.target,r.TEXTURE_MAX_LEVEL,s):i.hasMipmap=i.hasMipmap&&a===n.length;const l=m;if(!function(t){return t in o.q_}(l))throw new Error("Attempting to use compressed data with an umcompressed format!");this._forEachMipmapLevel(((t,r,i,a)=>{const s=n[Math.min(t,n.length-1)];this._compressedTexImage(e,t,l,r,i,a,s)}),s)}else(0,n.pC)(t)?(this._texImage(e,0,m,u,h,_,t),(0,a.zu)(r),i.hasMipmap&&this.generateMipmap()):this._forEachMipmapLevel(((t,i,n,s)=>{this._texImage(e,t,m,i,n,s,null),(0,a.zu)(r)}))}u._applySamplingMode(r,this._descriptor),u._applyWrapMode(r,this._descriptor),u._applyAnisotropicFilteringParameters(this._context,this._descriptor),(0,a.zu)(r),this._context.bindTexture(E,u.TEXTURE_UNIT_FOR_UPDATES)}updateData(t,e,r,i,n,a){a||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const s=this._context.gl,o=this._descriptor,{pixelFormat:c,internalFormat:_,dataType:p,isImmutable:E,target:d}=o;if(E&&!this._wasImmutablyAllocated)throw new Error("Cannot update immutable texture before allocation!");const m=this._context.bindTexture(this,u.TEXTURE_UNIT_FOR_UPDATES);(e<0||r<0||i>o.width||n>o.height||e+i>o.width||r+n>o.height)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage(),h(a)?s.texSubImage2D(d,t,e,r,c,p,a):l(a)?s.compressedTexSubImage2D(d,t,e,r,i,n,_,a.levels[t]):s.texSubImage2D(d,t,e,r,i,n,c,p,a),this._context.bindTexture(m,u.TEXTURE_UNIT_FOR_UPDATES)}updateData3D(t,e,r,i,n,a,s,o){o||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const h=this._context.gl;if(!(0,c.Z)(h))throw new Error("3D textures are not supported in WebGL1");const p=this._descriptor,{pixelFormat:E,dataType:d,isImmutable:m,target:T,internalFormat:I}=p;if(m&&!this._wasImmutablyAllocated)throw new Error("Cannot update immutable texture before allocation!");_(T)||console.warn("Attempting to set 3D texture data on a non-3D texture");const g=this._context.bindTexture(this,u.TEXTURE_UNIT_FOR_UPDATES);if(this._context.setActiveTexture(u.TEXTURE_UNIT_FOR_UPDATES),(e<0||r<0||i<0||n>p.width||a>p.height||s>p.depth||e+n>p.width||r+a>p.height||i+s>p.depth)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage(),l(o))o=o.levels[t],h.compressedTexSubImage3D(T,t,e,r,i,n,a,s,I,o);else{const c=o;h.texSubImage3D(T,t,e,r,i,n,a,s,E,d,c)}this._context.bindTexture(g,u.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){const t=this._descriptor;if(!t.hasMipmap){if(this._wasImmutablyAllocated)throw new Error("Cannot add mipmaps to immutable texture after allocation");t.hasMipmap=!0,this._samplingModeDirty=!0,u._validateTexture(this._context,t)}t.samplingMode===o.cw.LINEAR?(this._samplingModeDirty=!0,t.samplingMode=o.cw.LINEAR_MIPMAP_NEAREST):t.samplingMode===o.cw.NEAREST&&(this._samplingModeDirty=!0,t.samplingMode=o.cw.NEAREST_MIPMAP_NEAREST);const e=this._context.bindTexture(this,u.TEXTURE_UNIT_FOR_UPDATES);this._context.setActiveTexture(u.TEXTURE_UNIT_FOR_UPDATES),this._context.gl.generateMipmap(t.target),this._context.bindTexture(e,u.TEXTURE_UNIT_FOR_UPDATES)}setSamplingMode(t){t!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=t,this._samplingModeDirty=!0)}setWrapMode(t){t!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=t,u._validateTexture(this._context,this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const t=this._context.gl,e=this._descriptor;this._samplingModeDirty&&(u._applySamplingMode(t,e),this._samplingModeDirty=!1),this._wrapModeDirty&&(u._applyWrapMode(t,e),this._wrapModeDirty=!1)}_deriveInternalFormat(t,e){if(this._context.type===s.zO.WEBGL1)return t;switch(e){case o.Br.FLOAT:switch(t){case o.VI.RGBA:return o.lP.RGBA32F;case o.VI.RGB:return o.lP.RGB32F;default:throw new Error("Unable to derive format")}case o.Br.UNSIGNED_BYTE:switch(t){case o.VI.RGBA:return o.lP.RGBA8;case o.VI.RGB:return o.lP.RGB8}default:return t}}_configurePixelStorage(){const t=this._context.gl,{unpackAlignment:e,flipped:r,preMultiplyAlpha:i}=this._descriptor;t.pixelStorei(t.UNPACK_ALIGNMENT,e),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,r?1:0),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i?1:0)}_texStorage(t,e,r,i,n,a){const s=this._context.gl;if(!(0,c.Z)(s))throw new Error("Immutable textures are not supported in WebGL1");if(!function(t){return t in o.lP}(e))throw new Error("Immutable textures must have a sized internal format");if(!this._descriptor.isImmutable)return;const u=r?p(t,i,n,a):1;_(t)?s.texStorage3D(t,u,e,i,n,a):s.texStorage2D(t,u,e,i,n),this._wasImmutablyAllocated=!0}_texImage(t,e,r,i,a,o,c){const u=this._context.gl;let l=null;const p=this._context.type===s.zO.WEBGL2,E=_(t),{isImmutable:d,pixelFormat:m,dataType:T}=this._descriptor;if(p&&(l=u),p||!h(c))if(d){if((0,n.pC)(c)){const r=c;E?l.texSubImage3D(t,e,0,0,0,i,a,o,m,T,r):u.texSubImage2D(t,e,0,0,i,a,m,T,r)}}else{const s=(0,n.Wg)(c);E?l.texImage3D(t,e,r,i,a,o,0,m,T,s):u.texImage2D(t,e,r,i,a,0,m,T,s)}else u.texImage2D(t,0,r,m,T,c)}_compressedTexImage(t,e,r,i,a,o,c){const u=this._context.gl;let l=null;const h=_(t),p=this._descriptor.isImmutable;if(h){if(this._context.type!==s.zO.WEBGL2)throw new Error("3D textures are not supported in WebGL1");l=u}p?(0,n.pC)(c)&&(h?l.compressedTexSubImage3D(t,e,0,0,0,i,a,o,r,c):u.compressedTexSubImage2D(t,e,0,0,i,a,r,c)):h?l.compressedTexImage3D(t,e,r,i,a,o,0,c):u.compressedTexImage2D(t,e,r,i,a,0,c)}_forEachMipmapLevel(t,e=1/0){let{width:r,height:i,depth:n,hasMipmap:a,target:s}=this._descriptor;const c=s===o.No.TEXTURE_3D;for(let s=0;t(s,r,i,n),a&&(1!==r||1!==i||c&&1!==n)&&!(s>=e);++s)r=Math.max(1,r>>1),i=Math.max(1,i>>1),c&&(n=Math.max(1,n>>1))}static _validateTexture(t,e){(e.width<0||e.height<0||e.depth<0)&&console.error("Negative dimension parameters are not allowed!");const r=(0,c.Z)(t.gl),n=(0,i.wt)(e.width)&&(0,i.wt)(e.height);r||!e.isImmutable&&!_(e.target)||console.error("Immutable and 3D-like textures are not supported in WebGL1!"),r||n||("number"==typeof e.wrapMode?e.wrapMode!==o.e8.CLAMP_TO_EDGE&&console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"):e.wrapMode.s===o.e8.CLAMP_TO_EDGE&&e.wrapMode.t===o.e8.CLAMP_TO_EDGE||console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"),e.hasMipmap&&console.error("Mipmapping requires power-of-two textures!"))}static _applySamplingMode(t,e){let r=e.samplingMode,i=e.samplingMode;r===o.cw.LINEAR_MIPMAP_NEAREST||r===o.cw.LINEAR_MIPMAP_LINEAR?(r=o.cw.LINEAR,e.hasMipmap||(i=o.cw.LINEAR)):r!==o.cw.NEAREST_MIPMAP_NEAREST&&r!==o.cw.NEAREST_MIPMAP_LINEAR||(r=o.cw.NEAREST,e.hasMipmap||(i=o.cw.NEAREST)),t.texParameteri(e.target,t.TEXTURE_MAG_FILTER,r),t.texParameteri(e.target,t.TEXTURE_MIN_FILTER,i)}static _applyWrapMode(t,e){"number"==typeof e.wrapMode?(t.texParameteri(e.target,t.TEXTURE_WRAP_S,e.wrapMode),t.texParameteri(e.target,t.TEXTURE_WRAP_T,e.wrapMode)):(t.texParameteri(e.target,t.TEXTURE_WRAP_S,e.wrapMode.s),t.texParameteri(e.target,t.TEXTURE_WRAP_T,e.wrapMode.t))}static _applyAnisotropicFilteringParameters(t,e){const r=t.capabilities.textureFilterAnisotropic;r&&t.gl.texParameterf(e.target,r.TEXTURE_MAX_ANISOTROPY,e.maxAnisotropy??1)}}function l(t){return(0,n.pC)(t)&&"type"in t&&"compressed"===t.type}function h(t){return(0,n.pC)(t)&&!l(t)&&!function(t){return(0,n.pC)(t)&&"byteLength"in t}(t)}function _(t){return t===o.No.TEXTURE_3D||t===o.No.TEXTURE_2D_ARRAY}function p(t,e,r,i=1){let n=Math.max(e,r);return t===o.No.TEXTURE_3D&&(n=Math.max(n,i)),Math.round(Math.log(n)/Math.LN2)+1}u.TEXTURE_UNIT_FOR_UPDATES=0},79193:(t,e,r)=>{function i(t){return window.WebGL2RenderingContext&&t instanceof window.WebGL2RenderingContext}r.d(e,{Z:()=>i})},6174:(t,e,r)=>{r.d(e,{CG:()=>c,hZ:()=>o,zu:()=>u});var i=r(70375),n=r(39994);const a=r(13802).Z.getLogger("esri/views/webgl"),s=!!(0,n.Z)("enable-feature:webgl-debug");function o(){return s}function c(){return s}function u(t){if(o()){const e=t.getError();if(e){const r=function(t,e){switch(e){case t.INVALID_ENUM:return"Invalid Enum. An unacceptable value has been specified for an enumerated argument.";case t.INVALID_VALUE:return"Invalid Value. A numeric argument is out of range.";case t.INVALID_OPERATION:return"Invalid Operation. The specified command is not allowed for the current state.";case t.INVALID_FRAMEBUFFER_OPERATION:return"Invalid Framebuffer operation. The currently bound framebuffer is not framebuffer complete when trying to render to or to read from it.";case t.OUT_OF_MEMORY:return"Out of memory. Not enough memory is left to execute the command.";case t.CONTEXT_LOST_WEBGL:return"WebGL context has been lost";default:return"Unknown error"}}(t,e),n=(new Error).stack;a.error(new i.Z("webgl-error","WebGL error occured",{message:r,stack:n}))}}}}}]);