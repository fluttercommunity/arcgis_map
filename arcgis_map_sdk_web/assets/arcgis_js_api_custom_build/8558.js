"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[8558],{98558:(e,t,r)=>{r.r(t),r.d(t,{default:()=>S});var i=r(36663),o=r(66341),a=r(70375),s=r(61681),l=r(15842),n=r(78668),p=r(3466),d=r(81977),c=(r(7283),r(7753),r(34248)),h=r(40266),y=r(64307),u=r(38481),v=r(89993),w=r(87232),_=r(43330),g=r(18241),m=r(51599),b=r(31759),f=r(27299);let C=class extends((0,v.Z)((0,w.Y)((0,_.q)((0,g.I)((0,l.R)(u.Z)))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=(0,f.w)()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._lercDecoder=(0,s.RY)(this._lercDecoder)}readVersion(e,t){let r=t.currentVersion;return r||(r=9.3),r}load(e){const t=(0,s.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new a.Z("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(n.r9).then((()=>this._fetchImageService(t)))),Promise.resolve(this)}fetchTile(e,t,r,i){const a=(0,s.pC)((i=i||{signal:null}).signal)?i.signal:i.signal=(new AbortController).signal,l={responseType:"array-buffer",signal:a},n={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,r,i))).then((()=>(0,o.default)(this.getTileUrl(e,t,r),l))).then((e=>this._lercDecoder.decode(e.data,n,a))).then((e=>new b.v(e)))}getTileUrl(e,t,r){const i=!this.tilemapCache&&this.supportsBlankTile,o=(0,p.B7)({...this.parsedUrl.query,blankTile:!i&&null});return`${this.parsedUrl.path}/tile/${e}/${t}/${r}${o?"?"+o:""}`}async queryElevation(e,t){const{ElevationQuery:i}=await Promise.resolve().then(r.bind(r,8184));return(0,n.k_)(t),(new i).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:i}=await Promise.resolve().then(r.bind(r,8184));return(0,n.k_)(t),(new i).createSampler(this,e,t)}_fetchTileAvailability(e,t,r,i){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,r,i):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},r=await(0,o.default)(this.parsedUrl.path,t);r.ssl&&(this.url=this.url?.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};(0,i._)([(0,d.Cb)({json:{read:{source:"copyrightText"}}})],C.prototype,"copyright",void 0),(0,i._)([(0,d.Cb)({readOnly:!0,type:y.Z})],C.prototype,"heightModelInfo",void 0),(0,i._)([(0,d.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],C.prototype,"path",void 0),(0,i._)([(0,d.Cb)({type:["show","hide"]})],C.prototype,"listMode",void 0),(0,i._)([(0,d.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],C.prototype,"minScale",void 0),(0,i._)([(0,d.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],C.prototype,"maxScale",void 0),(0,i._)([(0,d.Cb)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],C.prototype,"opacity",void 0),(0,i._)([(0,d.Cb)({type:["ArcGISTiledElevationServiceLayer"]})],C.prototype,"operationalLayerType",void 0),(0,i._)([(0,d.Cb)()],C.prototype,"sourceJSON",void 0),(0,i._)([(0,d.Cb)({json:{read:!1},value:"elevation",readOnly:!0})],C.prototype,"type",void 0),(0,i._)([(0,d.Cb)(m.HQ)],C.prototype,"url",void 0),(0,i._)([(0,d.Cb)()],C.prototype,"version",void 0),(0,i._)([(0,c.r)("version",["currentVersion"])],C.prototype,"readVersion",null),C=(0,i._)([(0,h.j)("esri.layers.ElevationLayer")],C),C.prototype.fetchTile.__isDefault__=!0;const S=C}}]);