"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[816],{60797:(e,t,s)=>{s.d(t,{SR:()=>u,Ui:()=>d});var i=s(61681),r=s(24568),n=s(79880),o=s(38028),a=s(53736),h=s(25266),l=s(35925);function d(e){return c(e,!0)}function u(e){return c(e,!1)}function c(e,t){if((0,i.Wi)(e))return null;const s=e.spatialReference,r=(0,l.C5)(s),o="toJSON"in e?e.toJSON():e;if(!r)return o;const d=(0,l.sS)(s)?102100:4326,u=h.UZ[d].maxX,c=h.UZ[d].minX;if((0,a.wp)(o))return p(o,u,c);if((0,a.aW)(o))return o.points=o.points.map((e=>p(e,u,c))),o;if((0,a.YX)(o))return f(o,r);if((0,a.oU)(o)||(0,a.l9)(o)){const e=(0,n.$P)(v,o),s={xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3]},i=(0,h.XZ)(s.xmin,c)*(2*u),r=0===i?o:(0,h.Sy)(o,i);return s.xmin+=i,s.xmax+=i,s.xmax>u?y(r,u,t):s.xmin<c?y(r,c,t):r}return o}function f(e,t){if(!t)return e;const s=function(e,t){const s=[],{ymin:i,ymax:r,xmin:n,xmax:o}=e,a=e.xmax-e.xmin,[h,l]=t.valid,{x:d,frameId:u}=_(e.xmin,t),{x:c,frameId:f}=_(e.xmax,t),p=d===c&&a>0;if(a>2*l){const e={xmin:n<o?d:c,ymin:i,xmax:l,ymax:r},t={xmin:h,ymin:i,xmax:n<o?c:d,ymax:r},a={xmin:0,ymin:i,xmax:l,ymax:r},p={xmin:h,ymin:i,xmax:0,ymax:r},_=[],g=[];m(e,a)&&_.push(u),m(e,p)&&g.push(u),m(t,a)&&_.push(f),m(t,p)&&g.push(f);for(let e=u+1;e<f;e++)_.push(e),g.push(e);s.push(new x(e,[u]),new x(t,[f]),new x(a,_),new x(p,g))}else d>c||p?s.push(new x({xmin:d,ymin:i,xmax:l,ymax:r},[u]),new x({xmin:h,ymin:i,xmax:c,ymax:r},[f])):s.push(new x({xmin:d,ymin:i,xmax:c,ymax:r},[u]));return s}(e,t).map((e=>e.extent));return s.length<2?s[0]||e:s.length>2?(e.xmin=t.valid[0],e.xmax=t.valid[1],e):{rings:s.map((e=>[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]))}}function p(e,t,s){if(Array.isArray(e)){const i=e[0];if(i>t){const s=(0,h.XZ)(i,t);e[0]=i+s*(-2*t)}else if(i<s){const t=(0,h.XZ)(i,s);e[0]=i+t*(-2*s)}}else{const i=e.x;if(i>t){const s=(0,h.XZ)(i,t);e.x+=s*(-2*t)}else if(i<s){const t=(0,h.XZ)(i,s);e.x+=t*(-2*s)}}return e}function _(e,t){const[s,i]=t.valid,r=2*i;let n,o=0;return e>i?(n=Math.ceil(Math.abs(e-i)/r),e-=n*r,o=n):e<s&&(n=Math.ceil(Math.abs(e-s)/r),e+=n*r,o=-n),{x:e,frameId:o}}function m(e,t){const{xmin:s,ymin:i,xmax:r,ymax:n}=t;return g(e,s,i)&&g(e,s,n)&&g(e,r,n)&&g(e,r,i)}function g(e,t,s){return t>=e.xmin&&t<=e.xmax&&s>=e.ymin&&s<=e.ymax}function y(e,t,s=!0){const i=!(0,a.l9)(e);if(i&&(0,o.Zy)(e),s)return(new b).cut(e,t);const r=i?e.rings:e.paths,n=i?4:2,h=r.length,l=-2*t;for(let e=0;e<h;e++){const t=r[e];if(t&&t.length>=n){const e=[];for(const s of t)e.push([s[0]+l,s[1]]);r.push(e)}}return i?e.rings=r:e.paths=r,e}class x{constructor(e,t){this.extent=e,this.frameIds=t}}const v=(0,r.Ue)();class b{constructor(){this._linesIn=[],this._linesOut=[]}cut(e,t){let s;if(this._xCut=t,e.rings)this._closed=!0,s=e.rings,this._minPts=4;else{if(!e.paths)return null;this._closed=!1,s=e.paths,this._minPts=2}for(const e of s){if(!e||e.length<this._minPts)continue;let t=!0;for(const s of e)t?(this.moveTo(s),t=!1):this.lineTo(s);this._closed&&this.close()}this._pushLineIn(),this._pushLineOut(),s=[];for(const e of this._linesIn)e&&e.length>=this._minPts&&s.push(e);const i=-2*this._xCut;for(const e of this._linesOut)if(e&&e.length>=this._minPts){for(const t of e)t[0]+=i;s.push(e)}return this._closed?e.rings=s:e.paths=s,e}moveTo(e){this._pushLineIn(),this._pushLineOut(),this._prevSide=this._side(e[0]),this._moveTo(e[0],e[1],this._prevSide),this._prevPt=e,this._firstPt=e}lineTo(e){const t=this._side(e[0]);if(t*this._prevSide==-1){const s=this._intersect(this._prevPt,e);this._lineTo(this._xCut,s,0),this._prevSide=0,this._lineTo(e[0],e[1],t)}else this._lineTo(e[0],e[1],t);this._prevSide=t,this._prevPt=e}close(){const e=this._firstPt,t=this._prevPt;e[0]===t[0]&&e[1]===t[1]||this.lineTo(e),this._checkClosingPt(this._lineIn),this._checkClosingPt(this._lineOut)}_moveTo(e,t,s){this._closed?(this._lineIn.push([s<=0?e:this._xCut,t]),this._lineOut.push([s>=0?e:this._xCut,t])):(s<=0&&this._lineIn.push([e,t]),s>=0&&this._lineOut.push([e,t]))}_lineTo(e,t,s){this._closed?(this._addPolyVertex(this._lineIn,s<=0?e:this._xCut,t),this._addPolyVertex(this._lineOut,s>=0?e:this._xCut,t)):s<0?(0===this._prevSide&&this._pushLineOut(),this._lineIn.push([e,t])):s>0?(0===this._prevSide&&this._pushLineIn(),this._lineOut.push([e,t])):this._prevSide<0?(this._lineIn.push([e,t]),this._lineOut.push([e,t])):this._prevSide>0&&(this._lineOut.push([e,t]),this._lineIn.push([e,t]))}_addPolyVertex(e,t,s){const i=e.length;i>1&&e[i-1][0]===t&&e[i-2][0]===t?e[i-1][1]=s:e.push([t,s])}_checkClosingPt(e){const t=e.length;t>3&&e[0][0]===this._xCut&&e[t-2][0]===this._xCut&&e[1][0]===this._xCut&&(e[0][1]=e[t-2][1],e.pop())}_side(e){return e<this._xCut?-1:e>this._xCut?1:0}_intersect(e,t){const s=(this._xCut-e[0])/(t[0]-e[0]);return e[1]+s*(t[1]-e[1])}_pushLineIn(){this._lineIn&&this._lineIn.length>=this._minPts&&this._linesIn.push(this._lineIn),this._lineIn=[]}_pushLineOut(){this._lineOut&&this._lineOut.length>=this._minPts&&this._linesOut.push(this._lineOut),this._lineOut=[]}}},33480:(e,t,s)=>{s.d(t,{Y:()=>n});var i=s(61681);function r(e,t){return e?t?4:3:t?3:2}function n(e,t,s,n,h){if((0,i.Wi)(t)||!t.lengths.length)return null;const l="upperLeft"===h?.originPosition?-1:1;e.lengths.length&&(e.lengths.length=0),e.coords.length&&(e.coords.length=0);const d=e.coords,u=[],c=s?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:f,coords:p}=t,_=r(s,n);let m=0;for(const e of f){const t=o(c,p,m,e,s,n,l);t&&u.push(t),m+=e*_}if(u.sort(((e,t)=>{let i=l*e[2]-l*t[2];return 0===i&&s&&(i=e[4]-t[4]),i})),u.length){let e=6*u[0][2];d[0]=u[0][0]/e,d[1]=u[0][1]/e,s&&(e=6*u[0][4],d[2]=0!==e?u[0][3]/e:0),(d[0]<c[0]||d[0]>c[1]||d[1]<c[2]||d[1]>c[3]||s&&(d[2]<c[4]||d[2]>c[5]))&&(d.length=0)}if(!d.length){const e=t.lengths[0]?a(p,0,f[0],s,n):null;if(!e)return null;d[0]=e[0],d[1]=e[1],s&&e.length>2&&(d[2]=e[2])}return e}function o(e,t,s,i,n,o,a=1){const h=r(n,o);let l=s,d=s+h,u=0,c=0,f=0,p=0,_=0;for(let s=0,r=i-1;s<r;s++,l+=h,d+=h){const s=t[l],i=t[l+1],r=t[l+2],o=t[d],a=t[d+1],h=t[d+2];let m=s*a-o*i;p+=m,u+=(s+o)*m,c+=(i+a)*m,n&&(m=s*h-o*r,f+=(r+h)*m,_+=m),s<e[0]&&(e[0]=s),s>e[1]&&(e[1]=s),i<e[2]&&(e[2]=i),i>e[3]&&(e[3]=i),n&&(r<e[4]&&(e[4]=r),r>e[5]&&(e[5]=r))}if(p*a>0&&(p*=-1),_*a>0&&(_*=-1),!p)return null;const m=[u,c,.5*p];return n&&(m[3]=f,m[4]=.5*_),m}function a(e,t,s,i,n){const o=r(i,n);let a=t,c=t+o,f=0,p=0,_=0,m=0;for(let t=0,r=s-1;t<r;t++,a+=o,c+=o){const t=e[a],s=e[a+1],r=e[a+2],n=e[c],o=e[c+1],g=e[c+2],y=i?l(t,s,r,n,o,g):h(t,s,n,o);if(y)if(f+=y,i){const e=u(t,s,r,n,o,g);p+=y*e[0],_+=y*e[1],m+=y*e[2]}else{const e=d(t,s,n,o);p+=y*e[0],_+=y*e[1]}}return f>0?i?[p/f,_/f,m/f]:[p/f,_/f]:s>0?i?[e[t],e[t+1],e[t+2]]:[e[t],e[t+1]]:null}function h(e,t,s,i){const r=s-e,n=i-t;return Math.sqrt(r*r+n*n)}function l(e,t,s,i,r,n){const o=i-e,a=r-t,h=n-s;return Math.sqrt(o*o+a*a+h*h)}function d(e,t,s,i){return[e+.5*(s-e),t+.5*(i-t)]}function u(e,t,s,i,r,n){return[e+.5*(i-e),t+.5*(r-t),s+.5*(n-s)]}},53791:(e,t,s)=>{s.d(t,{H:()=>y});var i=s(70375),r=s(39994),n=s(13802),o=s(61681),a=s(78668),h=s(14266),l=s(88013),d=s(64429),u=s(37727),c=s(91907),f=s(18567),p=s(43487);const _=n.Z.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),m=(0,u.g)(u.J,_);class g{constructor(e,t,s){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:i,pixelType:r,textureOnly:n}=e,a=(0,d.UK)(r);this.shared=s,this.pixelType=r,this.size=t,this.textureOnly=n,n||(this.data=new a((0,o.Wg)(i))),this._resetRange()}destroy(){(0,o.yw)(this._texture,(e=>e.dispose()));for(const e in this._fbos)(0,o.yw)(this._fbos[e],(t=>{"0"===e&&t.detachColorTexture(),t.dispose()})),this._fbos[e]=null;this._texture=null}get _textureDesc(){return{target:c.No.TEXTURE_2D,wrapMode:c.e8.CLAMP_TO_EDGE,pixelFormat:c.VI.RGBA,dataType:this.pixelType,samplingMode:c.cw.NEAREST,width:this.size,height:this.size}}setData(e,t,s){const i=(0,l.jL)(e),r=(0,o.Wg)(this.data),n=i*this.texelSize+t;!r||n>=r.length||(r[n]=s,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i))}getData(e,t){if((0,o.Wi)(this.data))return null;const s=(0,l.jL)(e)*this.texelSize+t;return!this.data||s>=this.data.length?null:this.data[s]}getTexture(e){return(0,o.Pt)(this._texture,(()=>this._initTexture(e)))}getFBO(e,t=0){if((0,o.Wi)(this._fbos[t])){const s={colorTarget:c.Lm.TEXTURE,depthStencilTarget:c.OU.NONE},i=0===t?this.getTexture(e):this._textureDesc;this._fbos[t]=new f.X(e,s,i)}return this._fbos[t]}get locked(){return!(this.pixelType!==c.Br.UNSIGNED_BYTE||!this.shared||this.textureOnly||!(0,r.Z)("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}get hasDirty(){const e=this.dirtyStart;return this.dirtyEnd>=e}updateTexture(e,t){if(!this.locked){try{const t=this.dirtyStart,s=this.dirtyEnd;if(!this.hasDirty)return;this._resetRange();const r=(0,o.Wg)(this.data).buffer,n=this.getTexture(e),a=4,h=(t-t%this.size)/this.size,l=(s-s%this.size)/this.size,u=h,c=this.size,f=l,p=h*this.size*a,m=(c+f*this.size)*a-p,g=(0,d.UK)(this.pixelType),y=new g(r,p*g.BYTES_PER_ELEMENT,m),x=this.size,v=f-u+1;if(v>this.size)return void _.error(new i.Z("mapview-webgl","Out-of-bounds index when updating AttributeData"));n.updateData(0,0,u,x,v,y)}catch(e){}t()}}update(e){const{data:t,start:s,end:i}=e;if((0,o.pC)(t)&&(0,o.pC)(this.data)){const i=this.data,r=s*this.texelSize;for(let s=0;s<t.length;s++){const n=1<<s%this.texelSize;e.layout&n&&(i[r+s]=t[s])}}this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,i)}resize(e,t){const s=this.size;if(this.size=t,this.textureOnly)return void(s!==this.size&&(this._lastTexture=this._texture,this._texture=null));const i=(0,d.UK)(this.pixelType);this.destroy(),this.data=new i((0,o.Wg)(e.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(e){const t=new p.x(e,this._textureDesc,(0,o.Pt)(this.data,void 0));if((0,o.pC)(this._lastTexture)&&this._fbos[0]){const s=this._lastTexture.descriptor.width,i=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,n=this._lastTexture.descriptor.pixelFormat,o=this.getFBO(e),a=(0,d.Yw)(r),h=new((0,d.UK)(r))(new ArrayBuffer(s*i*a*this.texelSize)),l=e.getBoundFramebufferObject(),{x:u,y:c,width:f,height:p}=e.getViewport();e.bindFramebuffer(o),o.readPixels(0,0,s,i,n,r,h),t.updateData(0,0,0,2*s,i/2,h),e.setViewport(u,c,f,p),e.bindFramebuffer(l)}return this.destroy(),this._texture=t,this._texture}}class y{constructor(e){this._onUpdate=e,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(e){const{blocks:t,shared:s,size:i}=e;if(this.shared=s,this.size=i,m("Initializing AttributeStoreView",e),(0,o.Wi)(this._data))this._data=(0,o.Fd)(t,(e=>new g(e,i,s)));else for(let e=0;e<this._data.length;e++){const r=this._data[e],n=t[e];(0,o.pC)(n)&&((0,o.Wi)(r)?this._data[e]=new g(n,i,s):r.resize(n,i))}this._initialized=!0}destroy(){(0,o.yw)(this._data,(e=>(0,o.Fd)(e,(e=>e.destroy())))),(0,o.yw)(this._defaultTexture,(e=>e.dispose()))}isEmpty(){const e=this._data;return(0,o.Wi)(e)}isUpdating(){const e=(0,o.pC)(this._pendingAttributeUpdate),t=e;return(0,r.Z)("esri-2d-log-updating")&&console.log(`Updating AttributeStoreView ${t}\n  -> hasPendingUpdate ${e}`),t}getBlock(e){return(0,o.Wi)(this._data)?null:this._data[e]}setLabelMinZoom(e,t){this.setData(e,0,1,t)}getLabelMinZoom(e){return this.getData(e,0,1,255)}getFilterFlags(e){return this.getData(e,0,0,0)}getVVSize(e){return this.getData(e,h.aK,0,0)}getData(e,t,s,i){if(!this._data)return 0;const r=(0,o.Wg)(this._data)[t];if((0,o.Wi)(r))return 0;const n=r.getData(e,s);return(0,o.pC)(n)?n:i}setData(e,t,s,i){const r=(0,o.Wg)(this._data)[t];(0,o.Wg)(r).setData(e,s,i)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(e){if(this._pendingAttributeUpdate)return void _.error(new i.Z("mapview-webgl","Tried to update attribute data with a pending update"));const t=(0,a.hh)();return m("AttributeStoreView Update Requested",e),this._pendingAttributeUpdate={data:e,resolver:t},this._onUpdate(),t.promise}update(){if(this._initialized&&(0,o.pC)(this._pendingAttributeUpdate)){(0,r.Z)("esri-2d-update-debug")&&console.debug("AttributeStoreView::update");const{data:e,resolver:t}=this._pendingAttributeUpdate,s=(0,o.Wg)(this._data);for(let t=0;t<e.blocks.length;t++){const i=e.blocks[t],r=s[t];(0,o.yw)(r,(e=>(0,o.yw)(i,(s=>{m(`Updating block ${t}`,s),e.update(s)}))))}this._pendingAttributeUpdate=null,t(),this._onUpdate()}}bindTextures(e,t=!0){const s=this._getDefaultTexture(e);if(!this._initialized)return e.bindTexture(s,h.iJ),void(t&&(e.bindTexture(s,h.nM),e.bindTexture(s,h.Ij),e.bindTexture(s,h.f2),e.bindTexture(s,h.By),e.bindTexture(s,h.mx),e.bindTexture(s,h.Xj)));const i=(0,o.Wg)(this._data);this._locked&&!this._forceNextUpload||((0,o.JR)(i,(t=>t.updateTexture(e,(()=>this._onUpdate())))),this._forceNextUpload=!1),e.bindTexture((0,o.R2)(i[h._5],s,(t=>t.getTexture(e))),h.iJ),t&&(e.bindTexture((0,o.R2)(i[h.pU],s,(t=>t.getTexture(e))),h.Xj),e.bindTexture((0,o.R2)(i[h.xl],s,(t=>t.getTexture(e))),h.nM),e.bindTexture((0,o.R2)(i[h.aK],s,(t=>t.getTexture(e))),h.Ij),e.bindTexture((0,o.R2)(i[h.lK],s,(t=>t.getTexture(e))),h.f2),e.bindTexture((0,o.R2)(i[h.By],s,(t=>t.getTexture(e))),h.By),e.bindTexture((0,o.R2)(i[h.mx],s,(t=>t.getTexture(e))),h.mx))}_getDefaultTexture(e){if((0,o.Wi)(this._defaultTexture)){const t={wrapMode:c.e8.CLAMP_TO_EDGE,pixelFormat:c.VI.RGBA,dataType:c.Br.UNSIGNED_BYTE,samplingMode:c.cw.NEAREST,width:1,height:1};this._defaultTexture=new p.x(e,t,new Uint8Array(4))}return this._defaultTexture}}},780:(e,t,s)=>{s.d(t,{o:()=>l});var i=s(40278),r=s(59566),n=s(1662),o=s(19710),a=s(14266),h=s(27954);class l extends h.I{constructor(e,t,s,i){super(e,t,s,i,a.I_,a.I_)}destroy(){super.destroy(),this._transforms&&l.TransformCache.release(this.key.hash)}setTransform(e){const t=this.resolution/e.resolution,s=this.transforms.tileMat3,[o,a]=e.toScreenNoRotation([0,0],[this.x,this.y]),h=this.width/this.rangeX*t,l=this.height/this.rangeY*t;(0,n.s)(s,h,0,0,0,l,0,o,a,1),(0,n.m)(this.transforms.dvs,e.displayViewMat3,s);const d=this.transforms.labelMat2d,u=window.devicePixelRatio,c=(0,i.d)((0,r.c)(),h*u,0,0,l*u,o*u,a*u);(0,i.m)(d,e.viewMat2d,c)}_createTransforms(){return l.TransformCache.acquire(this.key.hash)}}l.TransformCache=new class{acquire(e){return{refCount:1,version:-1,labelMat2d:(0,r.c)(),tileMat3:(0,o.c)(),dvs:(0,o.c)()}}release(e){}}},18018:(e,t,s)=>{s.d(t,{$:()=>o});var i=s(61681),r=s(14266);const n=2147483647;class o{constructor(e){this._head=e,this._cursor=e}static from(e,t=0,s=e.byteLength/a.BYTES_PER_RECORD-t){const i=new a(new Int32Array(e,t*a.BYTES_PER_RECORD,s*a.ELEMENTS_PER_RECORD));return new o(i)}size(){let e=this._cursor,t=0;for(;e;)t+=e.size(),e=e._link;return t}get id(){return this._cursor.id}set id(e){this._cursor.id=e}get materialKey(){return this._cursor.materialKey}set materialKey(e){this._cursor.materialKey=e}get insertAfter(){return this._cursor.insertAfter}get indexFrom(){return this._cursor.indexFrom}set indexFrom(e){this._cursor.indexFrom=e}get indexCount(){return this._cursor.indexCount}set indexCount(e){this._cursor.indexCount=e}get vertexFrom(){return this._cursor.vertexFrom}set vertexFrom(e){this._cursor.vertexFrom=e}get vertexCount(){return this._cursor.vertexCount}set vertexCount(e){this._cursor.vertexCount=e}get sortKey(){return this._cursor.sortKey}set sortKey(e){this._cursor.sortKey=e}get index(){return this._cursor._indexStart+this._cursor._index}seekIndex(e){let t=e;for(this._cursor=this._head;this._cursor;){const e=this._cursor.size();if(t<e)return this._cursor._index=t,!0;t-=e,this._cursor=this._cursor._link}return!1}forEach(e){const t=this.getCursor();for(;t.next();)e(t)}link(e){if(!this._head)return void(this._head=e._head);let t=this._head;for(;t._link;)t=t._link;t._link=e._head,t._link._indexStart=t._indexStart+t.size()}getCursor(){return this.copy()}lookup(e){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(e);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}copy(){const e=new o(this._head?.copy());if(!e._head)return e;let t=e._head,s=e._head._link;for(;s;)t._link=s.copy(),t=s,s=t._link;return e}next(){return!!this._cursor&&(!!this._cursor.next()||!!this._cursor._link&&(this._cursor=this._cursor._link,this.next()))}peekId(){return this._cursor.peekId()??this._cursor._link.peekId()}delete(e){let t=this._head,s=null;for(;t;){if(t.delete(e))return t.isEmpty()&&((0,i.pC)(s)&&(s._link=t._link),t===this._head&&(this._head=t._link),t===this._cursor&&(this._cursor=t._link)),!0;s=t,t=t._link}return!1}}o.ELEMENTS_PER_RECORD=r.XJ,o.BYTES_PER_RECORD=o.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;class a{constructor(e){this._link=null,this._index=-1,this._indexStart=0,this._packedRecordsF32=null,this._deletedCount=0,this._offsets={instance:null},this._packedRecords=e}static from(e,t=0,s=e.byteLength/this.BYTES_PER_RECORD-t){return new a(new Int32Array(e,t*this.BYTES_PER_RECORD,s*this.ELEMENTS_PER_RECORD))}delete(e){const t=this._index,s=this.lookup(e);if(s)for(this.id=n,++this._deletedCount;this.next()&&this.id===e;)this.id=n,++this._deletedCount;return this._index=t,s}isEmpty(){return this._deletedCount===this.size()}link(e){this._link?this._link.link(e):this._link=e}lookup(e){if((0,i.Wi)(this._offsets.instance)){this._offsets.instance=new Map;const e=this.copy();e._index=-1;let t=0;for(;e.next();)e.id!==t&&(this._offsets.instance.set(e.id,e._index),t=e.id)}if(!this._offsets.instance.has(e))return!1;const t=this._index;return this._index=this._offsets.instance.get(e),this.id!==n||(this._index=t,!1)}get id(){return this._packedRecords[this._index*a.ELEMENTS_PER_RECORD]}set id(e){this._packedRecords[this._index*a.ELEMENTS_PER_RECORD]=e}get materialKey(){return this._packedRecords[this._index*a.ELEMENTS_PER_RECORD+1]}set materialKey(e){this._packedRecords[this._index*a.ELEMENTS_PER_RECORD+1]=e}get insertAfter(){return this._packedRecords[this._index*a.ELEMENTS_PER_RECORD+2]}get indexFrom(){return this._packedRecords[this._index*a.ELEMENTS_PER_RECORD+3]}set indexFrom(e){this._packedRecords[this._index*a.ELEMENTS_PER_RECORD+3]=e}get indexCount(){return this._packedRecords[this._index*a.ELEMENTS_PER_RECORD+4]}set indexCount(e){this._packedRecords[this._index*a.ELEMENTS_PER_RECORD+4]=e}get vertexFrom(){return this._packedRecords[this._index*a.ELEMENTS_PER_RECORD+5]}set vertexFrom(e){this._packedRecords[this._index*a.ELEMENTS_PER_RECORD+5]=e}get vertexCount(){return this._packedRecords[this._index*a.ELEMENTS_PER_RECORD+6]}set vertexCount(e){this._packedRecords[this._index*a.ELEMENTS_PER_RECORD+6]=e}get sortKey(){return this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*a.ELEMENTS_PER_RECORD+7]}set sortKey(e){this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*a.ELEMENTS_PER_RECORD+7]=e}get index(){return this._index}size(){return this._packedRecords.length/a.ELEMENTS_PER_RECORD}next(){for(;++this._index<this.size()&&this.id===n;);return this._index<this.size()}peekId(){const e=(this._index+1)*a.ELEMENTS_PER_RECORD;return e>=this._packedRecords.length?0:this._packedRecords[e]}getCursor(){return this.copy()}copy(){const e=new a(this._packedRecords);return e._indexStart=this._indexStart,e._link=this._link,e._index=this._index,e._offsets=this._offsets,e._deletedCount=this._deletedCount,e}}a.ELEMENTS_PER_RECORD=r.XJ,a.BYTES_PER_RECORD=a.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT},40794:(e,t,s)=>{s.d(t,{Z:()=>Ye});var i=s(36663),r=s(53443),n=s(89060),o=s(53280),a=s(39994),h=s(61681),l=s(78668),d=s(76868),u=s(81977),c=(s(7283),s(7753),s(40266)),f=s(14685),p=s(24568),_=s(38028),m=s(53736),g=s(60797),y=s(35925),x=s(66069),v=s(95215),b=s(5310),T=s(14266),C=s(38716);const R=-1;class D{constructor(){this._dirties=[{vertexFrom:R,vertexCount:R,indexFrom:R,indexCount:R,allDirty:!1},{vertexFrom:R,vertexCount:R,indexFrom:R,indexCount:R,allDirty:!1},{vertexFrom:R,vertexCount:R,indexFrom:R,indexCount:R,allDirty:!1},{vertexFrom:R,vertexCount:R,indexFrom:R,indexCount:R,allDirty:!1},{vertexFrom:R,vertexCount:R,indexFrom:R,indexCount:R,allDirty:!1}]}hasDirty(){return this._dirties.some((e=>e.indexCount!==R||e.allDirty))}markAllClean(){for(const e of this._dirties)e.indexFrom=R,e.indexCount=R,e.vertexFrom=R,e.vertexCount=R,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:s,indexFrom:i,vertexCount:r,vertexFrom:n,allDirty:o}=this._dirties[t],a={};let h,l=!1;(o||n!==R&&r>0)&&(a.geometry={count:r,from:n,allDirty:o},l=!0),(o||i!==R&&s>0)&&(h={count:s,from:i,allDirty:o},l=!0),l&&e({indices:h,vertices:a},t)}}markDirtyIndices(e,t,s){const i=this._dirties[e],r=t,n=s;if(!i.allDirty)if(i.indexCount!==R){const e=Math.min(i.indexFrom,r),t=Math.max(i.indexFrom+i.indexCount,r+n)-e;i.indexFrom=e,i.indexCount=t}else i.indexFrom=r,i.indexCount=n}markDirtyVertices(e,t,s,i){const r=this._dirties[e],n=s,o=i;if(!r.allDirty)if(r.vertexCount!==R){const e=Math.min(r.vertexFrom,n),t=Math.max(r.vertexFrom+r.vertexCount,n+o)-e;r.vertexFrom=e,r.vertexCount=t}else r.vertexFrom=n,r.vertexCount=o}}class w{get largestRange(){return this._largestRange}constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,s=null;for(;null!==t;)t.count>=e&&(!s||t.count-e<s.count-e)&&(s=t),t=t.next;return s}findAdjacentRanges(e,t){let s=!0,i=!1,r=null,n=this._parent._freeHead;for(;s&&!i;){const o=null!==r?r.from+r.count:0,a=null!==n?n.from:this._parent._size;e>=o&&e+t<=a?(s=!1,i=!0):null!==n?(r=n,n=n.next):s=!1}return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class I{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new w(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null==t)return-1;const s=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,s,i),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;I._removeRange(t),this._freeHead=e}return s}free(e,t){const[s,i]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:s??null,next:i??null};if(null!=s&&(s.next=r),null!=i&&(i.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!=i&&r.from+r.count===i.from){const e=r.from,t=r.count;I._fuse(r,i),I._removeRange(i),this._bookKeeper.rangeResized(r,e,t),this._bookKeeper.rangeResized(i,void 0,0)}if(null!=s&&s.from+s.count===r.from){const e=s.from,t=s.count;I._fuse(s,r),I._removeRange(r),this._bookKeeper.rangeResized(s,e,t),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}var E=s(64429);const F=["FILL","LINE","MARKER","TEXT","LABEL"];class S{constructor(e,t,s,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const t in e){this._freeListsAndStorage[t]={vtxFreeList:i?new I(i):null,idxFreeList:i?new I(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const s in e[t])this._freeListsAndStorage[t].vertexBuffers[s]={data:i?(0,E.C$)(i,e[t][s]):null,stride:e[t][s]}}}static fromTileData(e,t){const s=function(e){const t=e.getStrides(),s={};for(let e=0;e<t.length;e++)s[F[e]]=t[e];return s}(e),i=[0,0,0,0,0],r=[0,0,0,0,0];for(const t of e.tileDisplayData.displayObjects)for(const e of t.displayRecords)i[e.geometryType]=Math.max(i[e.geometryType],e.vertexFrom+e.vertexCount),r[e.geometryType]=Math.max(r[e.geometryType],e.indexFrom+e.indexCount);const n=new S(s,e.tileDisplayData.displayList,t,void 0),o=e.tileBufferData?.geometries??[];for(let e=0;e<o.length;++e){const t=i[e],s=r[e],a=o[e],h=F[e],l=n._storageFor(h),d=o[e].indexBuffer;l.indexBuffer=d,l.idxFreeList=new I(d.length),l.idxFreeList.allocate(s);let u=0;for(const t in a.vertexBuffer){const s=o[e].vertexBuffer[t];l.vertexBuffers[t].data=s.data,l.vertexBuffers[t].stride=s.stride;const i=(0,E.Y8)(s.stride),r=s.data.length*i/s.stride;u||(u=r)}l.vtxFreeList=new I(u),l.vtxFreeList.allocate(t)}return n}delete(e){const t=F[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,s,i,r){const n=F[e.geometryType];let o,a;e.meshData=null,void 0===e.vertexFrom?(a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount===e.vertexCount?(o=e.vertexFrom,a=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),o=e.vertexFrom,a=t.vertexCount);let h,l,d,u=!0;if(void 0===e.indexFrom?(h=r,d=t.indexCount,l=this._allocateIndices(n,d)):t.indexCount>e.indexCount?(h=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),d=t.indexCount,l=this._allocateIndices(n,d)):t.indexCount===e.indexCount?(u=!1,l=e.indexFrom,d=e.indexCount):(h=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),l=e.indexFrom,d=t.indexCount),-1!==o&&-1!==l){const r=this._storageFor(n);if((0,E.wO)(o,l,r.vertexBuffers,r.indexBuffer,t,s,i),e.vertexFrom=o,e.indexFrom=l,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return u&&this._displayList.addToList(e,h),!0}return-1!==o&&this._freeVertices(n,o,a),-1!==l&&this._freeIndices(n,l,d),e.setMeshDataFromBuffers(t,s,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const s=t.vertexBuffer,i=t.indexBuffer,r=F[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const o=this._allocateIndices(r,e.indexCount);if(-1===o)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,o,e.indexCount),!1;const a=this._storageFor(r);if((0,E.wO)(n,o,a.vertexBuffers,a.indexBuffer,e,s,i),e.vertexFrom=n,e.indexFrom=o,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const s=this._storageFor(e),i=s.vtxFreeList?.allocate(t);if(null==i||-1===i)return-1;const r=s.vtxFreeList?.fragmentation;return null==r||r>.5?-1:i}_freeVertices(e,t,s){this._storageFor(e).vtxFreeList?.free(t,s)}_freeIndices(e,t,s){this._storageFor(e).idxFreeList?.free(t,s)}_allocateIndices(e,t){const s=this._storageFor(e),i=s.idxFreeList?.allocate(t);if(null==i||-1===i)return-1;const r=s.idxFreeList?.fragmentation;return null==r||r>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var B=s(78951),M=s(91907),L=s(29620);class k{constructor(e){this.geometryMap=(0,E.Mk)((()=>({indexBuffer:B.f.createIndex(e,M.l1.STATIC_DRAW),vao:null})),((t,s)=>({vertexBuffer:B.f.createVertex(e,E.mR[s])})))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const e in t.buffers)t.buffers[e]&&t.buffers[e].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{getVAO(e,s,i){if(!t.data.vao){const r={};for(const e in t.buffers)r[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new L.U(e,i,s,r,t.data.indexBuffer)}return t.data.vao}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach(((t,s)=>{this._upload(t,s,e)}))}_upload(e,t,s){if(e.indices&&(e.indices.allDirty?this._uploadIndices(s,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(s,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const e in i){const r=i[e];r.allDirty?this._uploadVertices(s,t,e):null!=r.from&&null!=r.count&&this._uploadVertices(s,t,e,r.from,r.count)}}}_uploadVertices(e,t,s,i,r){const n=this.geometryMap[t];if(!n)return;const o=e.geometries[t].vertexBuffer[s];if(!o)return;const{data:a,stride:h}=o;if(n.buffers[s]&&a.length>0){const e=h/a.BYTES_PER_ELEMENT;null!=i&&null!=r?n.buffers[s].data.vertexBuffer.setSubData(a,i*e,i*e,(i+r)*e):n.buffers[s].data.vertexBuffer.setData(a)}}_uploadIndices(e,t,s,i){const r=this.geometryMap[t];if(!r)return;const n=e.geometries[t].indexBuffer;r.data.indexBuffer&&n.length>0&&(null!=s&&null!=i?r.data.indexBuffer.setSubData(n,s,s,s+i):r.data.indexBuffer.setData(n))}}var O=s(780);class z extends O.o{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new D}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){return this._displayObjects??[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,s=e.remove;!this._data&&t&&t.tileDisplayData?.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new D,this._dispRecStore=S.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData?.displayObjects.length||s.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new k(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=S.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const s=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],i=(e.remove||[]).slice();for(const e of s)null!=e.insertAfter&&i.push(e.id);let r;i.length>0&&(r=new Set(i));const n=this._data.tileDisplayData;for(const e of i){const t=n.displayObjectRegistry.get(e);if(t){n.displayList.removeFromList(t.displayRecords);for(const e of t.displayRecords)this._dispRecStore.delete(e);n.displayObjectRegistry.delete(e)}}r?.size&&(n.displayObjects=n.displayObjects.filter((e=>!r.has(e.id))));for(const i of s){let s,r=n.displayObjectRegistry.get(i.id);if(r){const e=r.displayRecords;r.set(i),r.displayRecords=e;const t=r.displayRecords.length;for(let e=0;e<t;++e){const t=r.displayRecords[e],s=i.displayRecords[e];(e>=i.displayRecords.length||t.geometryType!==s.geometryType||t.symbolLevel!==s.symbolLevel||t.zOrder!==s.zOrder||t.materialKey!==s.materialKey)&&(this._dispRecStore.delete(r.displayRecords[e]),e<i.displayRecords.length&&(r.displayRecords[e]=void 0))}r.displayRecords.length=i.displayRecords.length}else{let e;r=i.copy(),r.displayRecords=[],n.displayObjectRegistry.set(i.id,r);const t=n.displayObjects;if(null!=r.insertAfter)if(s={},r.insertAfter>=0){const s=n.displayObjectRegistry.get(r.insertAfter);s?(e=t.indexOf(s)+1,e<t.length?t.splice(e,0,r):(t.push(r),e=t.length)):(t.push(r),e=t.length)}else t.unshift(r),e=0;else t.push(r),e=t.length;if(s){const r=i.displayRecords.length>0?1:0;let o=0;for(let i=e-1;i>=0&&o<r;--i)for(let e=t[i].displayRecords.length-1;e>=0&&o<r;--e){const r=t[i].displayRecords[e],a=n.displayList.getDPInfoType();s[a]||(s[a]=r,++o)}}}const o=i.displayRecords.length;for(let a=0;a<o;++a){const o=i.displayRecords[a];let h=r.displayRecords[a];h?(h.meshData=o.meshData,h.materialKey=o.materialKey):(h=o.copy(),h.vertexFrom=void 0,h.indexFrom=void 0,r.displayRecords[a]=h);const l=o.geometryType,d=n.displayList.getDPInfoType(),u=e.addOrUpdate.tileBufferData.geometries[l],c=u.vertexBuffer,f=u.indexBuffer;let p;s&&(p=s[d]?n.displayList.splitAfter(s[d]):-1),t=this._dispRecStore.setMeshData(h,o,c,f,p)&&t,s&&null!=h.indexFrom&&null!=h.indexFrom&&(s[d]=h)}}return t}}class P{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,s){if(!t&&!s)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=s}}class A{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new A;for(let t=0;t<this.geometries.length;t++){const s=this.geometries[t],i=e.geometries[t];i.indexBuffer=s.indexBuffer.slice(),i.vertexBuffer={};for(const e in s.vertexBuffer){const{data:t,stride:r}=s.vertexBuffer[e];i.vertexBuffer[e]={data:t.slice(),stride:r}}}return e}static deserialize(e){const t=new A;for(let s=0;s<5;++s){t.geometries[s].indexBuffer=new Uint32Array(e.geometries[s].indexBuffer),t.geometries[s].vertexBuffer={};for(const i in e.geometries[s].vertexBuffer)t.geometries[s].vertexBuffer[i]={data:(0,E.e2)(e.geometries[s].vertexBuffer[i].data,e.geometries[s].vertexBuffer[i].stride),stride:e.geometries[s].vertexBuffer[i].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const s in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[s]={data:this.geometries[t].vertexBuffer[s].data.buffer,stride:this.geometries[t].vertexBuffer[s].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const s in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[s].data.buffer)}return e}}var U=s(89106);function G(e,t,s,...i){t<e.length?e.splice(t,s,...i):e.push(...i)}class N{constructor(){this.symbolLevels=[]}replay(e,t,s){for(const i of this.symbolLevels)for(const r of i.zLevels){const i=r.geometryDPInfo.unified;if(i)for(const r of i){const{geometryType:i,materialKey:n,indexFrom:o,indexCount:a}=r,h=U.m2.load(n).symbologyType,l=e.painter.getBrush(i,h),d={geometryType:i,materialKey:n,indexFrom:o,indexCount:a,target:t.getGeometry(i)};l.prepareState(e),l.drawGeometry(e,t,d,s)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const s of e)this._addToList(s,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const s of e)t=this._removeFromList(s);return t}clone(){const e=new N;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),s=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<s;++r){const s=t[r];if(s.geometryType===e.geometryType&&i>s.indexFrom&&i<=s.indexFrom+s.indexCount){if(i<s.indexFrom+s.indexCount){const e=new V;e.geometryType=s.geometryType,e.materialKey=s.materialKey,e.indexFrom=i,e.indexCount=s.indexFrom+s.indexCount-i,t.splice(r+1,0,e),s.indexCount=i-s.indexFrom}return r}}}_addToList(e,t){const s=e.symbolLevel,i=e.zOrder,r=this._getDisplayList(s,i),n=null!=t?t:r.length-1,o=n>=0&&n<r.length?r[n]:null;if(null!==o&&o.materialKey===e.materialKey&&o.indexFrom+o.indexCount===e.indexFrom&&o.geometryType===e.geometryType)o.indexCount+=e.indexCount;else{const t=new V;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,G(r,n+1,0,t)}}_removeFromList(e){const t=e.symbolLevel,s=e.zOrder,i=this._getDisplayList(t,s),r=i.length;let n;for(let t=0;t<r;++t){const s=i[t];if(e.indexFrom+e.indexCount>s.indexFrom&&e.indexFrom<s.indexFrom+s.indexCount&&s.geometryType===e.geometryType){n=t;break}}if(void 0!==n){const t=i[n];if(e.indexFrom===t.indexFrom)return t.indexCount-=e.indexCount,t.indexFrom+=e.indexCount,0===t.indexCount&&G(i,n,1),n-1;if(e.indexFrom+e.indexCount===t.indexFrom+t.indexCount)return t.indexCount-=e.indexCount,0===t.indexCount?(G(i,n,1),n-1):n;{const s=t.indexFrom,r=e.indexFrom-t.indexFrom,o=e.indexCount,a=t.indexFrom+t.indexCount-(e.indexFrom+e.indexCount);t.indexCount=r;const h=new V;return h.geometryType=t.geometryType,h.materialKey=t.materialKey,h.indexFrom=s+r+o,h.indexCount=a,G(i,n+1,0,h),n}}return null}_getDisplayList(e,t){let s;const i=this.symbolLevels.length;for(let t=0;t<i;t++)if(this.symbolLevels[t].symbolLevel===e){s=this.symbolLevels[t];break}let r;s||(s=new Z,s.symbolLevel=e,this.symbolLevels.push(s));const n=s.zLevels.length;for(let e=0;e<n;e++)if(s.zLevels[e].zLevel===t){r=s.zLevels[e];break}return r||(r=new j,r.geometryDPInfo=new K,r.zLevel=t,s.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class V{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new V;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class K{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new K;return e.fill=this.fill&&this.fill.map((e=>e.clone())),e.line=this.line&&this.line.map((e=>e.clone())),e.marker=this.marker&&this.marker.map((e=>e.clone())),e.text=this.text&&this.text.map((e=>e.clone())),e.label=this.label&&this.label.map((e=>e.clone())),e.unified=this.unified&&this.unified.map((e=>e.clone())),e}}class j{constructor(){this.geometryDPInfo=new K}clone(){const e=new j;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class Z{constructor(){this.zLevels=[]}clone(){const e=new Z;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}class Y{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,s){for(const t in e)this.vertexData.set(t,e[t]);for(const t in this.vertexData)null===e[t]&&this.vertexData.delete(t);this.vertexCount=t,this.indexData=s}}class W{constructor(e,t,s,i=0,r=0){this.id=e,this.geometryType=t,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0,this._sortKey=null}get sortKey(){return null==this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new W(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,s){const i=new Y;for(const s in t){const r=t[s].stride,n=t[s].data;if(!n)continue;const o=[],a=(0,E.Y8)(r);for(let t=0;t<r*e.vertexCount/a;++t)o[t]=n[t+r*e.vertexFrom/a];i.vertexData.set(s,o)}i.indexData.length=0;for(let t=0;t<e.indexCount;++t)i.indexData[t]=s[t+e.indexFrom]-e.vertexFrom;i.vertexCount=e.vertexCount,this.meshData=i}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new Y;for(const t in e){const s=e[t].stride,i=e[t].data,r=[],n=(0,E.Y8)(s);for(let e=0;e<s*this.vertexCount/n;++e)r[e]=i[e+s*this.vertexFrom/n];this.meshData.vertexData.set(t,r)}this.meshData.indexData.length=0;for(let e=0;e<this.indexCount;++e)this.meshData.indexData[e]=t[e+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,s,i){if(this.meshData){for(const s in t){const i=t[s].stride,r=this.meshData.vertexData.get(s),n=t[s].data,o=(0,E.Y8)(i);for(let t=0;t<i*this.meshData.vertexCount/o;++t)n[t+i*e/o]=r[t]}for(let t=0;t<this.meshData.indexData.length;++t)i[t+s]=this.meshData.indexData[t]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=s,this.indexCount=this.meshData.indexData.length}}static writeAllMeshDataToBuffers(e,t,s){let i=0,r=0;for(const n of e)n.writeMeshDataToBuffers(i,t,r,s),i+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const s=e.readInt32(),i=e.readInt32(),r=new W(t.id,s,i);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}function q(e,t){if(null!==t){e.push(t.length);for(const s of t)s.serialize(e);return e}e.push(0)}class H{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new H(this.id);return e.set(this),e}clone(){const e=new H(this.id);return e.displayRecords=this.displayRecords.map((e=>e.clone())),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),q(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),s=new H(t),i={id:t};return s.displayRecords=function(e,t,s){const i=e.readInt32(),r=new Array(i);for(let i=0;i<r.length;i++)r[i]=t.deserialize(e,s);return r}(e,W,i)??[],s}}class X{constructor(){this.displayObjects=[],this._displayList=null}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new N;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new X;return this.displayObjects&&(e.displayObjects=this.displayObjects.map((e=>e.clone()))),e}serialize(e){return q(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),s=new Array(t),i=new Map;for(let t=0;t<s.length;++t){const r=H.deserialize(e);s[t]=r,i.set(r.id,r)}this.displayObjects=s,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new X;return t._deserializeObjects(e),t}}var J=s(18018);class ${constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,E.e2)(e.data,e.stride),s=e.stride;return new $(t,s)}static fromVertexVector(e){const t=(0,E.e2)(e.data.buffer(),e.stride),s=e.stride;return new $(t,s)}}class Q{constructor(e,t,s){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=s}static decode(e){const t=e.geometryType,s=e.indexBuffer,i={};for(const t in e.namedBuffers)i[t]=$.decode(e.namedBuffers[t]);return new Q(t,s,i)}static fromVertexData(e,t){const s=e.indices,i=(0,E.e2)(e.vertices,e.stride),r=e.stride,n={geometry:new $(i,r)};return new Q(t,s,n)}static fromVertexVectors(e){const t=e.geometryType,s=e.indexVector.buffer(),i={};for(const t in e.namedVectors)i[t]=$.fromVertexVector(e.namedVectors[t]);return new Q(t,s,i)}}var ee=s(93954);class te{get vertexCount(){const e=this.stride/4,t=this.data.length/e;return t!==(0|t)&&console.debug("Corrupted stride"),t}constructor(e,t){this.data=e,this.stride=t}transfer(e,t){const s=this.data.buffer();e.vertexCount=this.vertexCount,e.data=s,e.stride=this.stride,t.push(s)}}class se{constructor(e,t,s){this.geometryType=e,this.indexVector=new ee.Z(Uint32Array,6*t),this.namedVectors={};const i=(0,E.$_)(e,s);for(const e in i){const s=i[e];let r;switch(s%4){case 0:case 2:r=new ee.Z(Uint32Array,s*t);break;case 1:case 3:r=new ee.Z(Uint8Array,s*t)}this.namedVectors[e]=new te(r,s)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const s=this.indexVector.buffer(),i={};t.push(s);for(const e in this.namedVectors){const s=this.namedVectors[e];i[e]={},s.transfer(i[e],t)}e.geometryType=this.geometryType,e.indexBuffer=s,e.namedBuffers=i,this.destroy()}intoBuffers(){const e=Q.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const ie=new P,re=new P;function ne(e,t){const s={};for(const i in e){const r={data:(0,E.C$)(t,e[i]),stride:e[i]};s[i]=r}return s}class oe{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){if(ie.reset(),!this.tileDisplayData)return;const e=function(e){const t=[[],[],[],[],[]],s=e;for(const e of s)for(const s of e.displayRecords)t[s.geometryType].push(s);return t}(this.tileDisplayData.displayObjects);for(const t of e)for(const e of t)e&&ie.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,s=new A;for(let e=0;e<t;++e){s.geometries[e].indexBuffer=new Uint32Array(Math.round(1.5*ie.indicesFor(e)));const t=[],i=this.tileBufferData?.geometries[e].vertexBuffer;if(!i)continue;for(const e in i)t.push(i[e].stride);const r=oe._computeVertexAlignment(t),n=Math.round(1.5*ie.verticesFor(e)),o=oe._align(n,r);for(const t in i){const r=i[t].stride;s.geometries[e].vertexBuffer[t]={stride:r,data:(0,E.C$)(o,r)}}}re.reset(),this.tileDisplayData.displayList?.clear();for(let i=0;i<t;++i){const t=e[i];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(re.verticesFor(i),s.geometries[i].vertexBuffer,re.indicesFor(i),s.geometries[i].indexBuffer),e.meshData=null;else{const t=this.tileBufferData?.geometries[i];if(t){const r=t.vertexBuffer,n=t.indexBuffer,o=s.geometries[i].vertexBuffer,a=s.geometries[i].indexBuffer,h=re.verticesFor(i),l=re.indicesFor(i);(0,E.wO)(h,l,o,a,e,r,n),e.vertexFrom=h,e.indexFrom=l}}re.needMore(i,e.vertexCount,e.indexCount)}}const{displayList:i,displayObjects:r}=this.tileDisplayData;if(i)for(const e of r)i.addToList(e.displayRecords);this.tileBufferData=s}getStrides(){const e=[],t=this.tileBufferData?.geometries;if(!t)return e;for(let s=0;s<t.length;++s){const i=t[s];e[s]={};for(const t in i.vertexBuffer)e[s][t]=i.vertexBuffer[t].stride}return e}clone(){const e=new oe;return e.tileBufferData=this.tileBufferData?.clone()??null,e.tileDisplayData=this.tileDisplayData?.clone()??null,e}_guessSize(){const e=this.tileDisplayData?.displayObjects??[],t=Math.min(e.length,4);let s=0;for(let i=0;i<t;i++)s=Math.max(s,e[i].displayRecords.length);return 2*(12*e.length+e.length*s*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),s=this.tileDisplayData.serialize(new ee.Z(Int32Array,this._guessSize())).buffer();return t.push(s),{result:{displayData:s,bufferData:e},transferList:t}}static fromVertexData(e,t){const s={},i=new Map;for(const e of t)i.set(e.id,e);return(0,E.Z_)((t=>{const r=e.data[t];if((0,h.pC)(r)){const e=J.$.from(r.records).getCursor();for(;e.next();){const s=e.id,r=e.materialKey,n=e.indexFrom,o=e.indexCount,a=e.vertexFrom,h=e.vertexCount,l=i.get(s),d=new W(s,t,r);d.indexFrom=n,d.indexCount=o,d.vertexFrom=a,d.vertexCount=h,l.displayRecords.push(d)}s[t]=Q.fromVertexData(r,t)}else s[t]=new se(t,0,C.mD.DEFAULT).intoBuffers()})),oe.fromMeshData({displayObjects:t,vertexBuffersMap:s})}static fromMeshData(e){const t=new oe,s=new X,i=new A;s.displayObjects=e.displayObjects;for(const t in e.vertexBuffersMap){const s=e.vertexBuffersMap[t];i.geometries[t].indexBuffer=s.indexBuffer,i.geometries[t].vertexBuffer=s.namedBuffers}return t.tileDisplayData=s,t.tileBufferData=i,t}static bind(e,t){const s=new oe;return s.tileDisplayData=e,s.tileBufferData=t,s}static create(e,t){const s=new oe;s.tileDisplayData=new X,s.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const t of e)for(const e of t.displayRecords)n[e.geometryType].push(e),i[e.geometryType]+=e.meshData.vertexCount,r[e.geometryType]+=e.meshData.indexData.length;const o=new A,a=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(t);for(let e=0;e<5;e++){const t=new Uint32Array(r[e]),s=ne(a[e],i[e]);W.writeAllMeshDataToBuffers(n[e],s,t),o.geometries[e]={indexBuffer:t,vertexBuffer:s}}return s.tileBufferData=o,s}static _align(e,t){const s=e%t;return 0===s?e:e+(t-s)}static _computeVertexAlignment(e){let t=!1,s=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(s=!0);return s?4:t?2:1}}var ae=s(88710),he=s(13191),le=s(12044),de=s(41808),ue=s(92927),ce=s(10289),fe=s(90649),pe=s(12065),_e=s(98416),me=s(4094);class ge extends me.i{static from(e,t,s){const i=_e.s.createInstance(),r=[],n=e.filter((e=>!!e.geometry));for(const e of n){const s=(0,m.Ji)(e.geometry);(0,pe.E7)(r,[e],s,!1,!1,t)}return new ge(i,r,s)}constructor(e,t,s){super(e,t,null),this._transform=s}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new ge(this.instance,this._features,this._transform);return this.copyInto(e),e}}var ye=s(95550),xe=s(39947),ve=s(79880),be=s(29927),Te=s(34245),Ce=s(18449),Re=s(7505),De=s(15540);const we=new De.Z,Ie=new De.Z,Ee="esriGeometryPolyline";function Fe(e){e.coords.length=0,e.lengths.length=0}class Se{constructor(){this.bounds=(0,p.Ue)(),this.graphic=null}static acquire(e=null,t,s,i,r){let n;return 0===Se._pool.length?n=new Se:(n=Se._pool.pop(),this._set.delete(n)),n.acquire(e,t,s,i,r),n}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,m.oU)(e.geometry)){const s=e.symbol;if((0,h.Wi)(s))return null;if(s?.layers.length>0&&s.layers.some((e=>"text"===e.type||"marker"===e.type))){const s=(0,Ce.tO)(e.geometry);return null!==s?(0,Re.RF)(t,{},{x:s[0],y:s[1]},!1,!1):null}}return null}acquire(e=null,t,s,i,r){e&&this.set(e,t,s,i,r)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r){this.graphic=e,this.geometry=s,this.symbolResource=t,this.bounds=i,r&&(this.size=r)}getGeometryQuantized(e,t,s,i){const r=this.geometry,n=(0,m.Ji)(r);if((0,h.Wi)(n))return null;switch(n){case"esriGeometryPolygon":{const t=r,{rings:s}=t;if(!s||0===s.length)return null;let i;if(i=1===s.length&&2===s[0].length?(0,Re.ym)(e,{paths:[[s[0][0],s[0][1]]]}):(0,Re.ym)(e,this.geometry),!i){const t={x:s[0][0][0],y:s[0][0][1]};if(i=(0,Re.ym)(e,t),i){const{x:e,y:t}=i;return{rings:[[[e-1,t],[1,-1],[1,1],[-1,1],[-1,-1]]]}}}return i}case"esriGeometryPolyline":{const t=r;Fe(we),Fe(Ie);const s=t.hasZ??!1,i=t.hasM??!1;return(0,pe.u0)(we,t),(0,pe.zj)(Ie,we,s,i,Ee,e.scale[0]),(0,pe.Nh)(we,Ie,s,i,Ee,e),(0,pe.J6)(we,t.hasZ??!1,t.hasM??!1)}case"esriGeometryMultipoint":{const n=r,o=.5*i*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),a=(0,y.C5)(s);let h=n.points;if(a){const[e,s]=a.valid,i=s-e;h=h.filter((r=>{if(r[0]+o>s||r[0]-o<e){const e=[...r];return r[0]+o>s?e[0]-=i:e[0]+=i,(0,p.Zm)(t,r,o)||(0,p.Zm)(t,e,o)}return(0,p.Zm)(t,r,o)}))}return 0===h.length?{points:h}:(0,Re.ym)(e,{points:h})}}return(0,Re.ym)(e,this.geometry)}}Se._pool=[],Se._set=new Set;var Be=s(62611);const Me={minX:0,minY:0,maxX:0,maxY:0},Le=(0,p.Ue)(),ke=1e-5;function Oe(e,t,s,i,r){return Me.minX=t,Me.minY=s,Me.maxX=i,Me.maxY=r,e.search(Me)}function ze(e){return{minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}}class Pe{constructor(e,t,s,i,r,n,o){this._graphics=i,this._onAdd=r,this._onRemove=n,this._hashToCIM=o,this._index=(0,xe.r)(9,ze),this._itemByGraphic=new Map,this._inflatedSizeHelper=new v.bP,this._tileInfoView=e,this._uidFieldName=s;const a=e.getClosestInfoForScale(t);a&&(this._resolution=this._tileInfoView.getTileResolution(a.level))}setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new Te.Tu(e)}hitTest(e,t,s,i,r){e=(0,be.or)(e,this._tileInfoView.spatialReference);const n=.5*i*window.devicePixelRatio*s;Le[0]=e-n,Le[1]=t-n,Le[2]=e+n,Le[3]=t+n;const o=.5*i*(s+Be.y1),a=Oe(this._index,e-o,t-o,e+o,t+o);if(!a||0===a.length)return[];const h=[],l=(0,p.Ue)(),d=(0,p.Ue)();for(const e of a){const{geometry:t,symbolResource:s}=e;this._getSymbolBounds(l,s,t,d,r),d[3]=d[2]=d[1]=d[0]=0,(0,p.kK)(l,Le)&&e.graphic?.visible&&h.push(e)}if(0===h.length)return[];const u=this._hittestDrawHelper,c=[];for(const e of h){const{geometry:t,symbolResource:s}=e,{hash:n,textInfo:o}=s,a=this._hashToCIM.get(n);a&&u.hitTest(Le,a.symbol,t,o,r,i)&&c.push(e)}return c.sort(Ae),c.map((e=>e.graphic))}getGraphicsData(e,t,s){const i=this._searchForItems(t);if(0===i.length||0===s.length)return[];i.sort(((e,t)=>e.zorder-t.zorder)),i[0].insertAfter=-1;for(let e=1;e<i.length;e++)i[e].insertAfter=i[e-1].graphic.uid;i.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),s.sort(((e,t)=>e.uid-t.uid));let r,n=0,o=0;const a=t.resolution,h=[],l={originPosition:"upperLeft",scale:[a,a],translate:[t.bounds[0],t.bounds[3]]};for(const d of s){for(o=-2;n<i.length;)if(r=i[n],n++,d.uid===r.graphic.uid){o=r.insertAfter;break}if(!r?.geometry||-2===o)continue;const s=r.getGeometryQuantized(l,t.bounds,this._tileInfoView.spatialReference,a),u={...r.graphic.attributes};u[this._uidFieldName]=d.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),h.push({centroid:Se.getCentroidQuantized(r,l),geometry:s,attributes:u,symbol:r.symbol,groupId:r.groupId,insertAfter:o,zorder:r.zorder})}return h.sort(((e,t)=>e.zorder-t.zorder)),h}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:s,resolution:i}=t,r=this._searchForItems(t),n=[];return 0===r.length||this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[i,i],translate:[s[0],s[3]]},t),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter((e=>e.graphic.visible)).map((e=>e.bounds))}addOrModify(e,t,s){if(!e||(0,h.Wi)(t))return;this.has(e)&&this.remove(e),this._onAdd(e);const i=[0,0,0,0],r=this._getSymbolBounds(null,t,s,i,0),n=Se.acquire(e,t,s,(0,h.pC)(r)?r:null,i);return this._itemByGraphic.set(e,n),s&&this._index.insert(n),n.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);t?.bounds&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=(0,p.d9)(i.bounds);this._index.remove(i);const n=this._getSymbolBounds(i.bounds,t,s,i.size,0);return(0,h.pC)(n)&&i.set(e,t,s,n,i.size),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,s=[];for(const[e,i]of t){const e=this._getSymbolBounds(i.bounds,i.symbolResource,i.geometry,i.size,0);i.geometry&&(0,h.pC)(e)&&(i.bounds=e,s.push(i))}this._index.load(s)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i,r){const n=this._uidFieldName,o=this._tileInfoView.spatialReference,{bounds:a,resolution:h}=r;let l,d,u,c;s.sort(((e,t)=>e.zorder-t.zorder));for(let r=0;r<s.length;r++){u=s[r],l=u.graphic,d=u.getGeometryQuantized(i,a,o,h),c=0===r?-1:s[r-1].graphic.uid;const f={...u.graphic.attributes};f[n]=l.uid,null==u.groupId&&(u.groupId=t.createTemplateGroup(u.symbol,null)),e.push({centroid:Se.getCentroidQuantized(u,i),geometry:d,attributes:f,symbol:u.symbol,groupId:u.groupId,insertAfter:c,zorder:u.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,s=e.bounds,i=(0,y.C5)(t);if(i&&t.isWrappable){const[t,r]=i.valid,n=Math.abs(s[2]-r)<ke,o=Math.abs(s[0]-t)<ke;if((!n||!o)&&(n||o)){const i=e.resolution;let o;o=(0,p.Ue)(n?[t,s[1],t+i*Be.y1,s[3]]:[r-i*Be.y1,s[1],r,s[3]]);const a=Oe(this._index,s[0],s[1],s[2],s[3]),h=Oe(this._index,o[0],o[1],o[2],o[3]);return[...new Set([...a,...h])]}}return Oe(this._index,s[0],s[1],s[2],s[3])}_getSymbolBounds(e,t,s,i,r){if(!t||!t.symbol||!s)return null;if(e||(e=(0,p.Ue)()),(0,ve.$P)(e,s),!i||0===i[0]&&0===i[1]&&0===i[2]&&0===i[3]){const{hash:e,textInfo:s}=t,n=this._hashToCIM.get(e);if(!n)return null;i||(i=[0,0,0,0]);const o=this._inflatedSizeHelper.getSymbolInflateSize(i,n.symbol,this._cimResourceManager,r,s);i[0]=(0,ye.F2)(o[0]),i[1]=(0,ye.F2)(o[1]),i[2]=(0,ye.F2)(o[2]),i[3]=(0,ye.F2)(o[3])}const n=this._resolution,o=v.bP.safeSize(i);return e[0]-=o*n,e[1]-=o*n,e[2]+=o*n,e[3]+=o*n,e}}const Ae=(e,t)=>{const s=(0,Be.eT)(e.graphic),i=(0,Be.eT)(t.graphic);return s===i?t.zorder-e.zorder:s-i};var Ue=s(81666),Ge=s(15707),Ne=s(35119),Ve=s(93751);const Ke=(0,a.Z)("esri-2d-graphic-debug");function je(e,t,s){let i=s.get(e);return i||(i={tile:t,addedOrModified:[],removed:[]},s.set(e,i)),i}let Ze=class extends((0,Ge.I)((0,o.p)(r.Z))){constructor(e){super(e),this._storage=new fe.O,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}_createMatcher(e,t,s){if(e){const i=(0,ue.q5)(e),r=(0,ue.MD)({indexCount:0,fields:{}},"feature",e,i);this._matcher=(0,de.fL)(r,t,null,s)}}_createDisplayId(e){let t=this._displayIds.get(e);return t||(t=this._storage.createDisplayId(),this._displayIds.set(e,t)),t}initialize(){this._attributeStore=new ce.Z({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},(0,Ne.hc)("2d"),(()=>this.notifyChange("updating"))),this.container.hasHighlight=()=>this._attributeStore.hasHighlight;const e=new le.Wr(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new Pe(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}),this._hashToCIM),this._meshFactory=new he.j(null,this.uid,e),this._templateStore=e,this.handles.add([(0,d.YP)((()=>this.renderer),(t=>{this._createMatcher(t,e,this.container.stage.resourceManager);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()})),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{Ke&&this.container.enableRenderingBounds((()=>this._graphicStore.getAllBounds())),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",(e=>this._graphicsChangeHandler(e))),"graphics");const t=this.container.stage.resourceManager;this._createMatcher(this.renderer,e,t),this._graphicStore.setResourceManager(t),this._attached=!0,this.notifyChange("updating")}))]);const t=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:t,removed:[]})}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0||this._attributeStore.isUpdating()}hitTest(e){if(!this.view||!this.view.position)return[];const{resolution:t,rotation:s}=this.view.state;return this._graphicStore.hitTest(e.x,e.y,2,t,s)}update(e){(0,l.k_)(this._controller.signal);const t=e.state,{resolution:s}=t;if(this._graphicStore.updateLevel(s),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:s}=e;switch(s){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,t.visible),this._attributeStore.sendUpdates()}}setHighlight(e){const t=e.map((e=>this._displayIds.get(e))).filter(h.pC);this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===(0,p.bf)(t)||0===(0,p.Cb)(t))return[];const s=(0,Be.Zu)(t,this.view.spatialReference);return(0,h.pC)(s)?[...new Set([...this.view.graphicsTileStore.boundsIntersections(s[0]),...this.view.graphicsTileStore.boundsIntersections(s[1])])]:this.view.graphicsTileStore.boundsIntersections(t)}async _updateTile(e){(0,l.k_)(this._controller.signal);const t=e.tile,s=this._getGraphicsData(this._templateStore,t,e.addedOrModified),i=await this._processGraphics(t,s);return(0,l.k_)(this._controller.signal),this._patchTile(t.key,{type:"update",addOrUpdate:i,remove:e.removed,end:!0,clear:!1,sort:!1}),i}_patchTile(e,t){const s=this._tiles.get(e);s&&(this.container.onTileData(s,t),this.container.requestRender())}_graphicsChangeHandler(e){const t=this._pendingUpdate;for(const s of e.added)t.added.add(s);for(const s of e.moved)t.updated.add(s);for(const s of e.removed)this._pendingUpdate.added.has(s)?t.added.delete(s):t.removed.add(s);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const s of this.graphics.items)t.added.has(s)?e.added.push(s):t.updated.has(s)&&e.updated.push(s);for(const s of t.removed)this._graphicStore.has(s)&&e.removed.push(s);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:s}=this._getGraphicsToUpdate(),i=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,{resolution:t}=e;this._graphicStore.updateLevel(t)}const n=[],o=new Array(e.length+t.length);for(let e=0;e<s.length;e++){const t=s[e],a=this._getIntersectingTiles(t);for(const e of a)r=e.id,je(r,e,i).removed.push(this._displayIds.get(t.uid));n.push(this._updateGraphic(t,null)),o[e]=t}const a=s.length;for(let t=0;t<e.length;t++){const s=e[t];o[a+t]=s,this._graphicsSet.add(s),n.push(this._addGraphic(s))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const s of t)r=s.id,je(r,s,i).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let h;this._flipUpdatingGraphics(),await Promise.all(n);for(let e=0;e<o.length;e++){h=o[e];const t=this._getIntersectingTiles(h);for(const e of t)r=e.id,je(r,e,i).addedOrModified.push(h)}this._graphicStore.updateZ();const l=[];for(const[e,t]of i)l.push(this._updateTile(t));await Promise.all(l)}catch(e){(0,l.D_)(e)}for(const e of t)try{const t=await this._getSymbolForGraphic(e,null);if(t){const e=t.hash();this._hashToExpandedSymbol.delete(e)}}catch(e){(0,l.D_)(e)}i.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return(0,h.Wi)(e.geometry)?null:{geometryType:(0,m.Ji)(e.geometry),spatialReference:f.Z.fromJSON(e.geometry.spatialReference),fields:t}}_getSymbolForGraphic(e,t){return(0,l.k_)(this._controller.signal),(0,h.pC)(e.symbol)?Promise.resolve(e.symbol):(0,h.pC)(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,signal:(0,h.pC)(t)?t.signal:null}):Promise.resolve(this._getNullSymbol(e))}_getCIMSymbol(e,t,s){let i=this._hashToCIM.get(t);if(i)return Promise.resolve(i);const r=(0,v.rW)(e);if((0,h.pC)(r)){if("CIMSymbolReference"===r.type)return i=r,this._hashToCIM.set(t,i),Promise.resolve(i);let e=this._hashToCIMSymbolPromise.get(t);return e||(e=r.fetchCIMSymbol(s).then((e=>(this._hashToCIM.set(t,e.data),this._hashToCIMSymbolPromise.delete(t),e))).catch((e=>(this._hashToCIMSymbolPromise.delete(t),(0,l.r9)(e),null))),this._hashToCIMSymbolPromise.set(t,e),e)}return Promise.resolve(null)}_expandCIMSymbol(e,t,s,i){const r=this._hashToExpandedSymbol.get(s);if(r)return Promise.resolve(r);let n=this._hashToExpandedSymbolPromise.get(s);if(n)return n;const o=this.container.stage,a=this._getArcadeInfo(t),h=(0,ue.q5)(null),l=(0,Ve.createSymbolSchema)(e,h);return n=(0,Ue.B)(l,a,o.resourceManager,i),this._hashToExpandedSymbolPromise.set(s,n),n.then((e=>(this._hashToExpandedSymbol.set(s,e),this._hashToExpandedSymbolPromise.delete(s),e))),n}async _getSymbolResources(e,t){return(0,l.k_)(this._controller.signal),this.container.stage?this._getSymbolForGraphic(e,t).then((s=>{if(!s)return null;const i=s.hash();return this._getCIMSymbol(s,i,t).then((s=>(0,h.Wi)(s)?null:this._expandCIMSymbol(s,e,i,t).then((e=>{const t=e.layers.filter((e=>"text"===e.type&&"string"==typeof e.text));if(t&&t.length>0){const s=new Array(t.length);for(let e=0;e<t.length;e++){const i=t[e],r=[],[o]=(0,n.E)(i.text);i.text=o;for(let e=0;e<o.length;e++)r.push(o.charCodeAt(e));s[e]={symbol:i,id:e,glyphIds:r}}const r=new Map;return this.container.getMaterialItems(s).then((s=>{(0,h.O3)(s);for(let e=0;e<t.length;e++){const i=t[e];r.set(i.cim,{text:i.text,mosaicItem:s[e].mosaicItem})}return{symbol:e,textInfo:r,hash:i}}))}return{symbol:e,hash:i}}))))})).catch((e=>((0,l.r9)(e),null))):null}async _projectAndNormalizeGeometry(e,t){if((0,l.k_)(this._controller.signal),(0,h.Wi)(e.geometry)||"mesh"===e.geometry.type)return null;let s=e.geometry;if((0,m.oU)(s)){const e=s.rings;s.rings=e}else if((0,m.l9)(s)){const e=s.paths;s.paths=e}else if((0,m.YX)(s)){const i=await this._getSymbolForGraphic(e,t);(0,l.k_)(this._controller.signal),s=i&&((0,Be.yA)(i.type)||(0,Be.ab)(i.type))?s.center:(0,Be.XA)(s)}await(0,x._W)(s.spatialReference,this.view.spatialReference);const i=(0,g.SR)(s),r=(0,x.iV)(i,s.spatialReference,this.view.spatialReference);return r&&(0,_.pW)(r),r}_onTileUpdate(e){const t=(0,y.C5)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const s of e.added)this._addNewTile(s,t);if(e.removed&&e.removed.length>0)for(const t of e.removed)this._removeTile(t.key)}async _addGraphic(e){this._abortProcessingGraphic(e.uid),(0,l.k_)(this._controller.signal);const t=new AbortController;this._graphicIdToAbortController.set(e.uid,t);const s={signal:t.signal};try{await this._addOrUpdateGraphic(e,s),(0,l.k_)(this._controller.signal),this._graphicIdToAbortController.delete(e.uid)}catch(t){if(this._graphicIdToAbortController.delete(e.uid),!(0,l.D_)(t))throw t}}_updateGraphic(e,t){(0,l.k_)(this._controller.signal);const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t);return Promise.all([s,i]).then((([t,s])=>{(0,l.k_)(this._controller.signal),this._graphicStore.addOrModify(e,s,t)}))}_addOrUpdateGraphic(e,t){(0,l.k_)(this._controller.signal);const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t);return Promise.all([s,i]).then((([t,s])=>{(0,l.k_)(this._controller.signal),this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,s,t)}))}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds((0,p.Ue)(),e),s=this.view.featuresTilingScheme.getTileResolution(e.level),i=new z(e,s,t[0],t[3]);return this._tiles.set(e,i),this.container.addChild(i),i}async _addNewTile(e,t){const s=this._addTile(e.key),i=this._graphicStore.queryTileData(this._templateStore,e);if(0===i.length)return;if(t){const s=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of i)e.geometry&&((0,m.wp)(e.geometry)||(0,m.aW)(e.geometry))&&this._wrapPoints(e,s)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating");try{const t={type:"update",clear:!1,addOrUpdate:await this._processGraphics(e,i),remove:[],end:!0,sort:!1};s.patch(t),this._tileUpdateSet.delete(r),this.notifyChange("updating")}catch(e){if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!(0,l.D_)(e))throw e}}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const s=this._displayIds.get(e),i=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(s,0,0,i|(t?T.Zd:0))}_getGraphicsData(e,t,s){const i=this.view,r=(0,y.C5)(i.spatialReference),n=this._graphicStore.getGraphicsData(e,t,s);if(r){const e=Math.round((r.valid[1]-r.valid[0])/t.resolution);for(const t of n)t.geometry&&((0,m.wp)(t.geometry)||(0,m.aW)(t.geometry))&&this._wrapPoints(t,e)}return n}_wrapPoints(e,t){const s=e.geometry;(0,m.aW)(s)?this._wrapMultipoint(s,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const s=e.points,i=[];let r=0,n=0;for(const[e,o]of s){if(i.push([e+r,o]),r=0,t===Be.I_){const s=5*Be.y1;e+n<s?(i.push([t,0]),r=-t):e+n>Be.I_-s&&(i.push([-t,0]),r=t)}else e+n<-Be.y1?(i.push([t,0]),r=-t):e+n>Be.I_+Be.y1&&(i.push([-t,0]),r=t);n+=e}e.points=i}_wrapPoint(e,t){const s=e.geometry;if(t===Be.I_){const i=5*Be.y1;s.x<i?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>Be.I_-i&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}else s.x<-Be.y1?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>Be.I_+Be.y1&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}_processGraphics(e,t,s){if(!t||!t.length||!this._meshFactory)return Promise.resolve(null);const i=ge.from(t,this.uid,e.transform),r=this._meshFactory;return this._matcher.then((t=>r.analyzeGraphics(i,this.container.stage.resourceManager,t,null,null,s).then((()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,i))))))}_processAnalyzedGraphics(e,t){const s=this._meshFactory,i=t.getSize(),r=t.getCursor(),n={features:i,records:i,metrics:0},o=new ae._(e.key.id,n,C.mD.DEFAULT,!1,!1),a=[];for(;r.next();){const t=r.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]);const i=new H(t.displayId);i.insertAfter=t.insertAfter,a.push(i),s.writeGraphic(o,r,e.level,this.container.stage.resourceManager)}const h=e.tileInfoView.tileInfo.isWrappable,l=o.serialize(h);if(1!==l.length)return new oe;const d=l[0].message;return oe.fromVertexData(d,a)}_abortProcessingGraphic(e){this._graphicIdToAbortController.get(e)?.abort()}_getNullSymbol(e){const t=e.geometry;return(0,m.l9)(t)?b.mW:(0,m.oU)(t)||(0,m.YX)(t)?b.kD:this.defaultPointSymbolEnabled?b.G:null}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}};(0,i._)([(0,u.Cb)({constructOnly:!0})],Ze.prototype,"requestUpdateCallback",void 0),(0,i._)([(0,u.Cb)()],Ze.prototype,"container",void 0),(0,i._)([(0,u.Cb)({constructOnly:!0})],Ze.prototype,"graphics",void 0),(0,i._)([(0,u.Cb)()],Ze.prototype,"updating",null),(0,i._)([(0,u.Cb)()],Ze.prototype,"view",void 0),(0,i._)([(0,u.Cb)()],Ze.prototype,"updateRequested",void 0),(0,i._)([(0,u.Cb)()],Ze.prototype,"defaultPointSymbolEnabled",void 0),Ze=(0,i._)([(0,c.j)("esri.views.2d.layers.support.GraphicsView2D")],Ze);const Ye=Ze},15707:(e,t,s)=>{s.d(t,{I:()=>a});var i=s(36663),r=s(86618),n=s(81977),o=(s(7283),s(7753),s(40266));const a=e=>{let t=class extends((0,r.IG)(e)){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return(0,i._)([(0,n.Cb)()],t.prototype,"graphics",void 0),(0,i._)([(0,n.Cb)()],t.prototype,"renderer",void 0),(0,i._)([(0,n.Cb)()],t.prototype,"updating",void 0),(0,i._)([(0,n.Cb)()],t.prototype,"view",void 0),t=(0,i._)([(0,o.j)("esri.views.layers.GraphicsView")],t),t}}}]);