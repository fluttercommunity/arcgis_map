(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[753,9985,6194],{53504:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>m});var o=r(56140),n=(r(95830),r(36544),r(68055),r(79881)),i=r(30590),s=r(87566),l=(r(10923),r(57002),r(86035),r(28293)),a=r(56700),u=r(43072),p=r(78910),c=r(33716),f=r(8809);let y=class extends((0,p.q)((0,c.I)((0,u.R)(a.Z)))){constructor(...e){super(...e),this.type="route"}get barrierLines(){return this._getNamedFeatureLayer("PolylineBarriers")}get barrierPoints(){return this._getNamedFeatureLayer("Barriers")}get barrierPolygons(){return this._getNamedFeatureLayer("PolygonBarriers")}get directionLines(){return this._getNamedFeatureLayer("DirectionLines")}get directionPoints(){return this._getNamedFeatureLayer("DirectionPoints")}readFeatureCollectionsFromItem(e,t,r){return this.revert("featureCollections","portal-item"),t.layers.map((e=>{const t=new f.default;return t.read(e,r),t}))}readFeatureCollectionsFromWebMap(e,t,r){return t.featureCollection.layers.map((e=>{const t=new f.default;return t.read(e,r),t}))}get fullExtent(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>e?e.union(t.fullExtent):t.fullExtent),null):null}get maxScale(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>null==e?t.maxScale:Math.min(e,t.maxScale)),null):0}set maxScale(e){this.featureCollections.forEach((t=>{t.maxScale=e})),this._set("maxScale",e)}get minScale(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>null==e?t.minScale:Math.min(e,t.minScale)),null):0}set minScale(e){this.featureCollections.forEach((t=>{t.minScale=e})),this._set("minScale",e)}get routeInfo(){return this._getNamedFeatureLayer("RouteInfo")}get stops(){return this._getNamedFeatureLayer("Stops")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}_getNamedFeatureLayer(e){if(this.featureCollections)return this.featureCollections.find((t=>t.title===e))}};(0,o._)([(0,n.Cb)()],y.prototype,"barrierLines",null),(0,o._)([(0,n.Cb)()],y.prototype,"barrierPoints",null),(0,o._)([(0,n.Cb)()],y.prototype,"barrierPolygons",null),(0,o._)([(0,n.Cb)()],y.prototype,"directionLines",null),(0,o._)([(0,n.Cb)()],y.prototype,"directionPoints",null),(0,o._)([(0,n.Cb)({type:l.Z.ofType(f.default)})],y.prototype,"featureCollections",void 0),(0,o._)([(0,i.r)("portal-item","featureCollections",["layers"])],y.prototype,"readFeatureCollectionsFromItem",null),(0,o._)([(0,i.r)("web-map","featureCollections",["featureCollection.layers"])],y.prototype,"readFeatureCollectionsFromWebMap",null),(0,o._)([(0,n.Cb)({readOnly:!0})],y.prototype,"fullExtent",null),(0,o._)([(0,n.Cb)({type:["show","hide"]})],y.prototype,"listMode",void 0),(0,o._)([(0,n.Cb)()],y.prototype,"maxScale",null),(0,o._)([(0,n.Cb)()],y.prototype,"minScale",null),(0,o._)([(0,n.Cb)()],y.prototype,"routeInfo",null),(0,o._)([(0,n.Cb)()],y.prototype,"stops",null),(0,o._)([(0,n.Cb)({readOnly:!0,json:{read:!1}})],y.prototype,"type",void 0),y=(0,o._)([(0,s.j)("esri.layers.RouteLayer")],y);const m=y},39597:(e,t,r)=>{"use strict";r.d(t,{p:()=>n});var o=r(98863);function n(e,t,r){if(!r||!r.features||!r.hasZ)return;const n=(0,o.k)(r.geometryType,t,e.outSpatialReference);if(n)for(const e of r.features)n(e.geometry)}},98863:(e,t,r)=>{"use strict";r.d(t,{k:()=>s,P:()=>a});var o=r(59472),n=r(27780),i=r(93533);function s(e,t,r){if((0,o.Wi)(t)||(0,o.Wi)(r)||r.vcsWkid||(0,n.fS)(t,r))return null;const s=(0,i._R)(t)/(0,i._R)(r);if(1===s)return null;switch(e){case"point":case"esriGeometryPoint":return e=>function(e,t){e&&null!=e.z&&(e.z*=t)}(e,s);case"polyline":case"esriGeometryPolyline":return e=>function(e,t){if(e)for(const r of e.paths)for(const e of r)e.length>2&&(e[2]*=t)}(e,s);case"polygon":case"esriGeometryPolygon":return e=>function(e,t){if(e)for(const r of e.rings)for(const e of r)e.length>2&&(e[2]*=t)}(e,s);case"multipoint":case"esriGeometryMultipoint":return e=>function(e,t){if(e)for(const r of e.points)r.length>2&&(r[2]*=t)}(e,s);default:return null}}function l(e,t,r){if(null==e.hasM||e.hasZ)for(const e of t)for(const t of e)t.length>2&&(t[2]*=r)}function a(e,t,r){if(!e&&!t||!r)return;const o=(0,i._R)(r);u(e,r,o),u(t,r,o)}function u(e,t,r){if(e)for(const o of e)p(o.geometry,t,r)}function p(e,t,r){if(!e||!e.spatialReference||(0,n.fS)(e.spatialReference,t))return;const o=(0,i._R)(e.spatialReference)/r;if(1!==o)if("x"in e)null!=e.z&&(e.z*=o);else if("rings"in e)l(e,e.rings,o);else if("paths"in e)l(e,e.paths,o);else if("points"in e&&(null==e.hasM||e.hasZ))for(const t of e.points)t.length>2&&(t[2]*=o)}},76194:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>_});var o=r(56140),n=(r(95830),r(59472)),i=(r(36544),r(68055),r(79881)),s=r(56274),l=r(30590),a=r(87566),u=r(60538),p=(r(10923),r(57002),r(86035),r(58385)),c=r(73032),f=r(56885),y=r(36348),m=r(15988),h=r(70834);const d=new s.Xn({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let g=class extends p.wq{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){const r=c.Z.fromJSON(t.spatialReference),o=[];for(let t=0;t<e.length;t++){const i=e[t],s=m.Z.fromJSON(i),l=i.geometry&&i.geometry.spatialReference;(0,n.pC)(s.geometry)&&!l&&(s.geometry.spatialReference=r),o.push(s)}return o}writeGeometryType(e,t,r,o){if(e)return void d.write(e,t,r,o);const{features:i}=this;if(i)for(const e of i)if(e&&(0,n.pC)(e.geometry))return void d.write(e.geometry.type,t,r,o)}readQueryGeometry(e,t){if(!e)return null;const r=!!e.spatialReference,o=(0,f.im)(e);return!r&&t.spatialReference&&(o.spatialReference=c.Z.fromJSON(t.spatialReference)),o}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:r}=this;if(r)for(const e of r)if(e&&(0,n.pC)(e.geometry)&&e.geometry.spatialReference)return void(t.spatialReference=e.geometry.spatialReference.toJSON())}toJSON(e){const t=this.write(null);if(t.features&&Array.isArray(e)&&e.length>0)for(let r=0;r<t.features.length;r++){const o=t.features[r];if(o.geometry){const t=e&&e[r];o.geometry=t&&t.toJSON()||o.geometry}}return t}quantize(e){const{scale:[t,r],translate:[o,i]}=e,s=this.features,l=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-o)/t)),(e=>Math.round((i-e)/r)));for(let e=0,t=s.length;e<t;e++)l((0,n.Wg)(s[e].geometry))||(s.splice(e,1),e--,t--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:r}=this;if(!r)return this;const{translate:[o,i],scale:[s,l]}=r,a=this._getHydrationFunction(e,(e=>e*s+o),(e=>i-e*l));for(const{geometry:e}of t)(0,n.pC)(e)&&a(e);return this.transform=null,this}_quantizePoints(e,t,r){let o,n;const i=[];for(let s=0,l=e.length;s<l;s++){const l=e[s];if(s>0){const e=t(l[0]),s=r(l[1]);e===o&&s===n||(i.push([e-o,s-n]),o=e,n=s)}else o=t(l[0]),n=r(l[1]),i.push([o,n])}return i.length>0?i:null}_getQuantizationFunction(e,t,r){return"point"===e?e=>(e.x=t(e.x),e.y=r(e.y),e):"polyline"===e||"polygon"===e?e=>{const o=(0,f.oU)(e)?e.rings:e.paths,n=[];for(let e=0,i=o.length;e<i;e++){const i=o[e],s=this._quantizePoints(i,t,r);s&&n.push(s)}return n.length>0?((0,f.oU)(e)?e.rings=n:e.paths=n,e):null}:"multipoint"===e?e=>{const o=this._quantizePoints(e.points,t,r);return o.length>0?(e.points=o,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,r){return"point"===e?e=>{e.x=t(e.x),e.y=r(e.y)}:"polyline"===e||"polygon"===e?e=>{const o=(0,f.oU)(e)?e.rings:e.paths;let n,i;for(let e=0,s=o.length;e<s;e++){const s=o[e];for(let e=0,o=s.length;e<o;e++){const o=s[e];e>0?(n+=o[0],i+=o[1]):(n=o[0],i=o[1]),o[0]=t(n),o[1]=r(i)}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=r(e.ymin),e.xmax=t(e.xmax),e.ymax=r(e.ymax)}:"multipoint"===e?e=>{const o=e.points;let n,i;for(let e=0,s=o.length;e<s;e++){const s=o[e];e>0?(n+=s[0],i+=s[1]):(n=s[0],i=s[1]),s[0]=t(n),s[1]=r(i)}}:void 0}};(0,o._)([(0,i.Cb)({type:String,json:{write:!0}})],g.prototype,"displayFieldName",void 0),(0,o._)([(0,i.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],g.prototype,"exceededTransferLimit",void 0),(0,o._)([(0,i.Cb)({type:[m.Z],json:{write:!0}})],g.prototype,"features",void 0),(0,o._)([(0,l.r)("features")],g.prototype,"readFeatures",null),(0,o._)([(0,i.Cb)({type:[h.Z],json:{write:!0}})],g.prototype,"fields",void 0),(0,o._)([(0,i.Cb)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:d.read}}})],g.prototype,"geometryType",void 0),(0,o._)([(0,u.c)("geometryType")],g.prototype,"writeGeometryType",null),(0,o._)([(0,i.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],g.prototype,"hasM",void 0),(0,o._)([(0,i.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],g.prototype,"hasZ",void 0),(0,o._)([(0,i.Cb)({types:y.qM,json:{write:!0}})],g.prototype,"queryGeometry",void 0),(0,o._)([(0,l.r)("queryGeometry")],g.prototype,"readQueryGeometry",null),(0,o._)([(0,i.Cb)({type:c.Z,json:{write:!0}})],g.prototype,"spatialReference",void 0),(0,o._)([(0,u.c)("spatialReference")],g.prototype,"writeSpatialReference",null),(0,o._)([(0,i.Cb)({json:{write:!0}})],g.prototype,"transform",void 0),g=(0,o._)([(0,a.j)("esri.tasks.support.FeatureSet")],g),g.prototype.toJSON.isDefaultToJSON=!0,g||(g={});const _=g}}]);