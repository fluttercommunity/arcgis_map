(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[500],{50897:(e,t,i)=>{"use strict";i.d(t,{Gv:()=>p,SO:()=>o,r3:()=>h,Ue:()=>s,oJ:()=>n,al:()=>r,kK:()=>c,HH:()=>a}),i(95830);var l=i(52937);function s(e=u){return[e[0],e[1],e[2],e[3]]}function r(e,t,i,l,r=s()){return r[0]=e,r[1]=t,r[2]=i,r[3]=l,r}function n(e,t=s()){return t[0]=e.xmin,t[1]=e.ymin,t[2]=e.xmax,t[3]=e.ymax,t}function a(e,t){return new l.Z({xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3],spatialReference:t})}function o(e){return function(e){return e[0]>=e[2]?0:e[2]-e[0]}(e)*function(e){return e[1]>=e[3]?0:e[3]-e[1]}(e)}function c(e,t){return Math.max(t[0],e[0])<=Math.min(t[2],e[2])&&Math.max(t[1],e[1])<=Math.min(t[3],e[3])}function h(e,t){return t[0]>=e[0]&&t[2]<=e[2]&&t[1]>=e[1]&&t[3]<=e[3]}const p=[1/0,1/0,-1/0,-1/0],u=[0,0,0,0]},18897:(e,t,i)=>{"use strict";i.d(t,{Z:()=>h});var l,s=i(56140),r=(i(95830),i(36544),i(68055)),n=i(79881),a=i(87566),o=(i(10923),i(57002),i(86035),i(58385));let c=l=class extends o.wq{constructor(e){super(e),this.level=0,this.levelValue=null,this.resolution=0,this.scale=0}clone(){return new l({level:this.level,levelValue:this.levelValue,resolution:this.resolution,scale:this.scale})}};(0,s._)([(0,n.Cb)({type:r.z8,json:{write:!0}})],c.prototype,"level",void 0),(0,s._)([(0,n.Cb)({type:String,json:{write:!0}})],c.prototype,"levelValue",void 0),(0,s._)([(0,n.Cb)({type:Number,json:{write:!0}})],c.prototype,"resolution",void 0),(0,s._)([(0,n.Cb)({type:Number,json:{write:!0}})],c.prototype,"scale",void 0),c=l=(0,s._)([(0,a.j)("esri.layers.support.LOD")],c);const h=c},40920:(e,t,i)=>{"use strict";i.d(t,{Z:()=>g});var l,s=i(56140),r=(i(95830),i(36544),i(68055)),n=i(79881),a=i(56274),o=i(30590),c=i(87566),h=i(60538),p=(i(10923),i(57002),i(86035),i(58385)),u=i(27780),f=i(73032),v=i(41241),d=i(61106),m=(i(36348),i(93533)),y=i(50897),b=i(18897);const w=new a.Xn({PNG:"png",PNG8:"png8",PNG24:"png24",PNG32:"png32",JPEG:"jpg",JPG:"jpg",DIB:"dib",TIFF:"tiff",EMF:"emf",PS:"ps",PDF:"pdf",GIF:"gif",SVG:"svg",SVGZ:"svgz",Mixed:"mixed",MIXED:"mixed",LERC:"lerc",LERC2D:"lerc2d",RAW:"raw",pbf:"pbf"});let _=l=class extends p.wq{constructor(e){super(e),this.dpi=96,this.format=null,this.origin=null,this.minScale=0,this.maxScale=0,this.size=null,this.spatialReference=null}static create(e={size:256,spatialReference:f.Z.WebMercator}){const t=e.resolutionFactor||1,i=e.scales,s=e.size||256,r=e.spatialReference||f.Z.WebMercator;if(!(0,u.JY)(r)){const e=[];if(i)for(let t=0;t<i.length;t++){const l=i[t];e.push({level:t,scale:l,resolution:l})}else{let t=5e-4;for(let i=23;i>=0;i--)e.unshift({level:i,scale:t,resolution:t}),t*=2}return new l({dpi:96,lods:e,origin:new d.Z(0,0,r),size:[s,s],spatialReference:r})}const n=(0,u.C5)(r),a=e.origin?new d.Z({x:e.origin.x,y:e.origin.y,spatialReference:r}):new d.Z(n?{x:n.origin[0],y:n.origin[1],spatialReference:r}:{x:0,y:0,spatialReference:r}),o=1/(39.37*(0,m.c9)(r)*96),c=[];if(i)for(let e=0;e<i.length;e++){const t=i[e],l=t*o;c.push({level:e,scale:t,resolution:l})}else{let e=(0,u.sT)(r)?512/s*591657527.5917094:256/s*591657527.591555;const i=Math.ceil(24/t);c.push({level:0,scale:e,resolution:e*o});for(let l=1;l<i;l++){const i=e/2**t,s=i*o;c.push({level:l,scale:i,resolution:s}),e=i}}return new l({dpi:96,lods:c,origin:a,size:[s,s],spatialReference:r})}get isWrappable(){const{spatialReference:e,origin:t}=this;if(e&&t){const i=(0,u.C5)(e);return e.isWrappable&&Math.abs(i.origin[0]-t.x)<=i.dx}return!1}readOrigin(e,t){return d.Z.fromJSON({spatialReference:t.spatialReference,...e})}set lods(e){let t=0,i=0;const l=[];this._levelToLOD={},e&&(t=-1/0,i=1/0,e.forEach((e=>{l.push(e.scale),t=e.scale>t?e.scale:t,i=e.scale<i?e.scale:i,this._levelToLOD[e.level]=e}))),this._set("scales",l),this._set("minScale",t),this._set("maxScale",i),this._set("lods",e),this._initializeUpsampleLevels()}readSize(e,t){return[t.cols,t.rows]}writeSize(e,t){t.cols=e[0],t.rows=e[0]}zoomToScale(e){const t=this.scales;if(e<=0)return t[0];if(e>=t.length)return t[t.length-1];{const i=Math.round(e-.5),l=Math.round(e);return t[l]+(l-e)*(t[i]-t[l])}}scaleToZoom(e){const t=this.scales,i=t.length-1;let l=0;for(;l<i;l++){const i=t[l],s=t[l+1];if(i<=e)return l;if(s===e)return l+1;if(i>e&&s<e)return l+1-(e-s)/(i-s)}return l}snapScale(e,t=.95){const i=this.scaleToZoom(e);return i%Math.floor(i)>=t?this.zoomToScale(Math.ceil(i)):this.zoomToScale(Math.floor(i))}tileAt(e,t,i,l){const s=this.lodAt(e);if(!s)return null;let r,n;if("number"==typeof t)r=t,n=i;else if((0,u.fS)(t.spatialReference,this.spatialReference))r=t.x,n=t.y,l=i;else{const e=(0,v.iV)(t,this.spatialReference);if(!e)return null;r=e.x,n=e.y,l=i}const a=s.resolution*this.size[0],o=s.resolution*this.size[1];return l||(l={id:null,level:0,row:0,col:0,extent:(0,y.Ue)()}),l.level=e,l.row=Math.floor((this.origin.y-n)/o+.001),l.col=Math.floor((r-this.origin.x)/a+.001),this.updateTileInfo(l),l}updateTileInfo(e,t=0){let i=this.lodAt(e.level);if(!i&&1===t){const t=this.lods[this.lods.length-1];t.level<e.level&&(i=t)}if(!i)return;const l=e.level-i.level,s=i.resolution*this.size[0]/2**l,r=i.resolution*this.size[1]/2**l;e.id=`${e.level}/${e.row}/${e.col}`,e.extent||(e.extent=(0,y.Ue)()),e.extent[0]=this.origin.x+e.col*s,e.extent[1]=this.origin.y-(e.row+1)*r,e.extent[2]=e.extent[0]+s,e.extent[3]=e.extent[1]+r}upsampleTile(e){const t=this._upsampleLevels[e.level];return!(!t||-1===t.parentLevel||(e.level=t.parentLevel,e.row=Math.floor(e.row/t.factor+.001),e.col=Math.floor(e.col/t.factor+.001),this.updateTileInfo(e),0))}getTileBounds(e,t){const{resolution:i}=this.lodAt(t.level),l=i*this.size[0],s=i*this.size[1];return e[0]=this.origin.x+t.col*l,e[1]=this.origin.y-(t.row+1)*s,e[2]=e[0]+l,e[3]=e[1]+s,e}lodAt(e){return this._levelToLOD&&this._levelToLOD[e]||null}clone(){return l.fromJSON(this.write({}))}_initializeUpsampleLevels(){const e=this.lods;this._upsampleLevels=[];let t=null;for(let i=0;i<e.length;i++){const l=e[i];this._upsampleLevels[l.level]={parentLevel:t?t.level:-1,factor:t?t.resolution/l.resolution:0},t=l}}};(0,s._)([(0,n.Cb)({type:Number,json:{write:!0}})],_.prototype,"compressionQuality",void 0),(0,s._)([(0,n.Cb)({type:Number,json:{write:!0}})],_.prototype,"dpi",void 0),(0,s._)([(0,n.Cb)({type:String,json:{read:w.read,write:w.write,origins:{"web-scene":{read:!1,write:!1}}}})],_.prototype,"format",void 0),(0,s._)([(0,n.Cb)({readOnly:!0})],_.prototype,"isWrappable",null),(0,s._)([(0,n.Cb)({type:d.Z,json:{write:!0}})],_.prototype,"origin",void 0),(0,s._)([(0,o.r)("origin")],_.prototype,"readOrigin",null),(0,s._)([(0,n.Cb)({type:[b.Z],value:null,json:{write:!0}})],_.prototype,"lods",null),(0,s._)([(0,n.Cb)({readOnly:!0})],_.prototype,"minScale",void 0),(0,s._)([(0,n.Cb)({readOnly:!0})],_.prototype,"maxScale",void 0),(0,s._)([(0,n.Cb)({readOnly:!0})],_.prototype,"scales",void 0),(0,s._)([(0,n.Cb)({cast:e=>Array.isArray(e)?e:"number"==typeof e?[e,e]:[256,256]})],_.prototype,"size",void 0),(0,s._)([(0,o.r)("size",["rows","cols"])],_.prototype,"readSize",null),(0,s._)([(0,h.c)("size",{cols:{type:r.z8},rows:{type:r.z8}})],_.prototype,"writeSize",null),(0,s._)([(0,n.Cb)({type:f.Z,json:{write:!0}})],_.prototype,"spatialReference",void 0),_=l=(0,s._)([(0,c.j)("esri.layers.support.TileInfo")],_);const g=_},78136:(e,t,i)=>{"use strict";i.d(t,{y:()=>x});var l,s=i(56140),r=(i(95830),i(36544)),n=i(79881),a=i(60263),o=i(87566),c=i(32656),h=i(10923),p=(i(57002),i(86035),i(62698)),u=i(7830),f=i(74386),v=i(79152),d=i(36654),m=i(59691),y=i(80621),b=i(40365),w=i(82550),_=i(19677);class g{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),l=i%8,s=i>>3,r=this._tileAvailabilityBitSet;return s<0||s>r.length?"unknown":r[s]&1<<l?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let l=!0,s=!0;const r=Math.ceil(t*i/8),n=new Uint8Array(r);let a=0;for(let t=0;t<e.length;t++){const i=t%8;e[t]?(s=!1,n[a]|=1<<i):l=!1,7===i&&++a}s?this._allAvailability="unavailable":l?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=n,this.byteSize+=n.length)}static fromDefinition(e,t){const i=e.service.request||d.default,{row:l,col:s,width:r,height:n}=e,a={query:{f:"json"}};return t=t?{...a,...t}:a,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:l,left:s,width:r,height:n},valid:!0,data:(0,_.a9)(r*n,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==l||e.location.left!==s||e.location.width!==r||e.location.height!==n))throw new c.Z("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:l,left:s,width:r,height:n}});return g.fromJSON(e)}))}static fromJSON(e){g.validateJSON(e);const t=new g;return t.location=Object.freeze((0,w.d9)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static validateJSON(e){if(!e||!e.location)throw new c.Z("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new c.Z("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new c.Z("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new c.Z("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new c.Z("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function S(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const z=r.Z.getLogger("esri.layers.support.TilemapCache");let x=l=class extends v.Z{constructor(e){super(e),this._handles=new m.Z,this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2097152,this.request=d.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new b.Z(this.cacheByteSize),this._handles.add([this.watch(["layer.parsedUrl","layer.tileServers?"],(()=>this._initializeTilemapDefinition())),(0,y.S1)(this,"layer.tileInfo.lods",(e=>this._initializeAvailableLevels(e)),!0)]),this._initializeTilemapDefinition()}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}castLevels(e){return e<=2?(z.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,l){if(!this._availableLevels[e])return Promise.reject(new c.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const s=this._tmpTilemapDefinition,r=this._tilemapFromCache(e,t,i,s);if(r)return Promise.resolve(r);const n=l&&l.signal;return l={...l,signal:null},new Promise(((e,t)=>{(0,u.fu)(n,(()=>t((0,u.zE)())));const i=S(s);let r=this._pendingTilemapRequests[i];if(!r){r=g.fromDefinition(s,l).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const l=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return l?l.getAvailability(t,i):"unknown"}getAvailabilityUpsample(e,t,i,l){l.level=e,l.row=t,l.col=i;const s=this.layer.tileInfo;for(s.updateTileInfo(l);;){const e=this.getAvailability(l.level,l.row,l.col);if("unavailable"!==e)return e;if(!s.upsampleTile(l))return"unavailable"}}fetchAvailability(e,t,i,l){return this._availableLevels[e]?this.fetchTilemap(e,t,i,l).catch((e=>e)).then((l=>{if(l instanceof g){const s=l.getAvailability(t,i);return"unavailable"===s?Promise.reject(new c.Z("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):s}if((0,u.D_)(l))throw l;return"unknown"})):Promise.reject(new c.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,l,s){l.level=e,l.row=t,l.col=i;const r=this.layer.tileInfo;r.updateTileInfo(l);const n=this.fetchAvailability(e,t,i,s).catch((e=>{if((0,u.D_)(e))throw e;if(r.upsampleTile(l))return this.fetchAvailabilityUpsample(l.level,l.row,l.col,l);throw e}));return this._fetchAvailabilityUpsamplePrefetch(l.id,e,t,i,s,n),n}async _fetchAvailabilityUpsamplePrefetch(e,t,i,s,r,n){if(!this._prefetchingEnabled)return;const a=`prefetch-${e}`;if(this._handles.has(a))return;const o=(0,u.yi)();n.then((()=>o.abort()),(()=>o.abort()));let c=!1;const h={remove(){c||(c=!0,o.abort())}};if(this._handles.add(h,a),await(0,f.MU)(10,o.signal).catch((()=>{})),c||(c=!0,this._handles.remove(a)),(0,u.Hc)(o))return;const p={id:e,level:t,row:i,col:s},v={...r,signal:o.signal},d=this.layer.tileInfo;for(let e=0;l._prefetches.length<l._maxPrefetch&&d.upsampleTile(p);++e){const e=this.fetchAvailability(p.level,p.row,p.col,v);l._prefetches.push(e);const t=()=>{l._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const e=this.layer.parsedUrl,t=e.query;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:t?(0,h.B7)(t):null,tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,l){l.level=e,l.row=t-t%this.size,l.col=i-i%this.size;const s=S(l);return this._tilemapCache.get(s)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,l)=>!!e._tilemapFromCache(t,i,l,e._tmpTilemapDefinition)}}};x._maxPrefetch=4,x._prefetches=new p.Z({initialSize:l._maxPrefetch}),(0,s._)([(0,n.Cb)({constructOnly:!0,type:Number})],x.prototype,"levels",void 0),(0,s._)([(0,a.p)("levels")],x.prototype,"castLevels",null),(0,s._)([(0,n.Cb)({readOnly:!0,type:Number})],x.prototype,"size",null),(0,s._)([(0,n.Cb)({constructOnly:!0,type:Number})],x.prototype,"cacheByteSize",void 0),(0,s._)([(0,n.Cb)({constructOnly:!0})],x.prototype,"layer",void 0),(0,s._)([(0,n.Cb)({constructOnly:!0})],x.prototype,"request",void 0),x=l=(0,s._)([(0,o.j)("esri.layers.support.TilemapCache")],x)},63710:(e,t,i)=>{"use strict";i.d(t,{d:()=>r,h:()=>s});var l=i(40920);const s={type:l.Z,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:r}}}}};function r(e,t,i,s){if(!e)return null;const{minScale:r,maxScale:n,minLOD:a,maxLOD:o}=t;if(null!=a&&null!=o)return s&&s.ignoreMinMaxLOD?l.Z.fromJSON(e):l.Z.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=a&&e<=o))});if(0!==r&&0!==n){const t=e=>Math.round(1e4*e)/1e4,i=r?t(r):1/0,s=n?t(n):-1/0;return l.Z.fromJSON({...e,lods:e.lods.filter((e=>{const l=t(e.scale);return l<=i&&l>=s}))})}return l.Z.fromJSON(e)}}}]);