(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[1626,5019],{91626:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>B});var n=r(56140),i=(r(95830),r(36544),r(68055)),s=r(79881),o=r(87566),a=r(10923),l=(r(57002),r(86035),r(95986)),u=r(36654),c=r(66849),f=r(53817),N=(r(36348),r(56885));function p(e){return{geometryType:(0,N.Ji)(e[0]),geometries:e.map((e=>e.toJSON()))}}function m(e,t,r){const n=(0,N.q9)(t);return e.map((e=>{const t=n.fromJSON(e);return t.spatialReference=r,t}))}async function y(e,t,r,n){const i=t[0].spatialReference,s=(0,c.en)(e),o={...s.query,f:"json",sr:JSON.stringify(i.toJSON()),polygons:JSON.stringify(p(t).geometries),polylines:JSON.stringify(p(r).geometries)},a=(0,c.lA)(o,n);return(0,u.default)(s.path+"/autoComplete",a).then((({data:e})=>(e.geometries||[]).map((({rings:e})=>new f.Z({spatialReference:i,rings:e})))))}async function d(e,t,r){const n=t[0].spatialReference,i=(0,c.en)(e),s={...i.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(p(t))},o=(0,c.lA)(s,r);return(0,u.default)(i.path+"/convexHull",o).then((({data:e})=>(0,N.im)(e.geometry).set({spatialReference:n})))}async function _(e,t,r,n){const i=t[0].spatialReference,s=(0,c.en)(e);let o={query:{...s.query,f:"json",sr:JSON.stringify(i.toJSON()),geometries:JSON.stringify(p(t)),geometry:JSON.stringify({geometryType:(0,N.Ji)(r),geometry:r.toJSON()})}};return n&&(o={...n,...o}),(0,u.default)(s.path+"/difference",o).then((({data:e})=>(e.geometries||[]).map((e=>(0,N.im)(e).set({spatialReference:i})))))}var g=r(56274);const S=new g.Xn({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"}),T=new g.Xn({109006:"centimeters",9102:"decimal-degrees",109005:"decimeters",9002:"feet",109009:"inches",9036:"kilometers",9001:"meters",9035:"miles",109007:"millimeters",109012:"nautical-miles",9096:"yards"});var I=r(58385);let O=class extends I.wq{constructor(e){super(e),this.deviationUnit=null,this.geometries=null,this.maxDeviation=null}};(0,n._)([(0,s.Cb)({type:String,json:{write:!0}})],O.prototype,"deviationUnit",void 0),(0,n._)([(0,s.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,N.im)(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],O.prototype,"geometries",void 0),(0,n._)([(0,s.Cb)({type:Number,json:{write:!0}})],O.prototype,"maxDeviation",void 0),O=(0,n._)([(0,o.j)("esri.tasks.support.GeneralizeParameters")],O),O.from=(0,i.se)(O);const R=O;async function h(e,t,r,n){const i=t[0].spatialReference,s=(0,c.en)(e),o={...s.query,f:"json",sr:JSON.stringify(i.toJSON()),geometries:JSON.stringify(p(t)),geometry:JSON.stringify({geometryType:(0,N.Ji)(r),geometry:r.toJSON()})},a=(0,c.lA)(o,n);return(0,u.default)(s.path+"/intersect",a).then((({data:e})=>(e.geometries||[]).map((e=>(0,N.im)(e).set({spatialReference:i})))))}const U=new g.Xn({preserveShape:"preserve-shape"});function A(e){const{polylines:t,lengthUnit:r,geodesic:n,calculationType:i}=e.toJSON(),s={};s.polylines=JSON.stringify(t);const o=e.polylines[0].spatialReference;return s.sr=o.wkid?o.wkid:JSON.stringify(o.toJSON()),r&&(s.lengthUnit=r),n&&(s.geodesic=n),i&&(s.calculationType=U.toJSON(i)),s}var E=r(93833);let J=class extends I.wq{constructor(e){super(e),this.calculationType=null,this.geodesic=null,this.lengthUnit=null,this.polylines=null}};(0,n._)([(0,s.Cb)({type:String,json:{write:!0}})],J.prototype,"calculationType",void 0),(0,n._)([(0,s.Cb)({type:Boolean,json:{write:!0}})],J.prototype,"geodesic",void 0),(0,n._)([(0,s.Cb)({json:{write:!0}})],J.prototype,"lengthUnit",void 0),(0,n._)([(0,s.Cb)({type:[E.Z],json:{read:{reader:e=>e?e.map((e=>(0,N.im)(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],J.prototype,"polylines",void 0),J=(0,n._)([(0,o.j)("esri.tasks.support.LengthsParameters")],J),J.from=(0,i.se)(J);const w=J,C=new g.Xn({esriGeometryOffsetBevelled:"bevelled",esriGeometryOffsetMitered:"mitered",esriGeometryOffsetRounded:"rounded"}),v=new g.Xn({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});let j=class extends I.wq{constructor(e){super(e),this.bevelRatio=null,this.geometries=null,this.offsetDistance=null,this.offsetHow=null,this.offsetUnit=null}};(0,n._)([(0,s.Cb)({type:Number,json:{write:!0}})],j.prototype,"bevelRatio",void 0),(0,n._)([(0,s.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,N.im)(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],j.prototype,"geometries",void 0),(0,n._)([(0,s.Cb)({type:Number,json:{write:!0}})],j.prototype,"offsetDistance",void 0),(0,n._)([(0,s.Cb)({type:String,json:{write:!0}})],j.prototype,"offsetHow",void 0),(0,n._)([(0,s.Cb)({type:String,json:{write:!0}})],j.prototype,"offsetUnit",void 0),j=(0,n._)([(0,o.j)("esri.tasks.support.OffsetParameters")],j),j.from=(0,i.se)(j);const D=j;var b=r(52411);const L=(0,i.se)(b.Z),M=new g.Xn({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});let q=class extends I.wq{constructor(e){super(e),this.geometries1=null,this.geometries2=null,this.relation=null,this.relationParameter=null}};(0,n._)([(0,s.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,N.im)(e))):null},write:{writer:(e,t)=>{t.geometries1=e.map((e=>e.toJSON()))}}}})],q.prototype,"geometries1",void 0),(0,n._)([(0,s.Cb)({json:{read:{reader:e=>e?e.map((e=>(0,N.im)(e))):null},write:{writer:(e,t)=>{t.geometries2=e.map((e=>e.toJSON()))}}}})],q.prototype,"geometries2",void 0),(0,n._)([(0,s.Cb)({type:String,json:{write:!0}})],q.prototype,"relation",void 0),(0,n._)([(0,s.Cb)({type:String,json:{write:!0}})],q.prototype,"relationParameter",void 0),q=(0,n._)([(0,o.j)("esri.tasks.support.RelationParameters")],q),q.from=(0,i.se)(q);const G=q;async function x(e,t,r){const n="string"==typeof e?(0,a.mN)(e):e,i=t[0].spatialReference,s=(0,N.Ji)(t[0]),o={...r,query:{...n.query,f:"json",sr:i.wkid?i.wkid:JSON.stringify(i),geometries:JSON.stringify(p(t))}},{data:l}=await(0,u.default)(n.path+"/simplify",o);return m(l.geometries,s,i)}const k=new g.Xn({0:"default-curve-extension",1:"relocate-ends",2:"keep-end-attributes",4:"no-end-attributes",8:"no-extend-at-from",16:"no-extend-at-to"});let H=class extends I.wq{constructor(e){super(e),this.extendHow="default-curve-extension",this.polylines=null,this.trimExtendTo=null}};(0,n._)([(0,s.Cb)({type:String,json:{write:!0}})],H.prototype,"extendHow",void 0),(0,n._)([(0,s.Cb)({type:[E.Z],json:{read:{reader:e=>e?e.map((e=>(0,N.im)(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],H.prototype,"polylines",void 0),(0,n._)([(0,s.Cb)({json:{read:{reader:e=>e?(0,N.im)(e):null},write:{writer:(e,t)=>{t.trimExtendTo=e.toJSON()}}}})],H.prototype,"trimExtendTo",void 0),H=(0,n._)([(0,o.j)("esri.tasks.support.TrimExtendParameters")],H),H.from=(0,i.se)(H);const F=H;async function Y(e,t,r){const n=t[0].spatialReference,i=(0,c.en)(e),s={...i.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(p(t))},o=(0,c.lA)(s,r);return(0,u.default)(i.path+"/union",o).then((({data:e})=>(0,N.im)(e.geometry).set({spatialReference:n})))}let K=class extends l.Z{constructor(e){super(e),this.url=null}areasAndLengths(e,t){return async function(e,t,r){const n=(0,c.en)(e),i={...n.query,f:"json",...t.toJSON()},s=(0,c.lA)(i,r);return(0,u.default)(n.path+"/areasAndLengths",s).then((e=>e.data))}(this.url,e,t)}autoComplete(e,t,r){return y(this.url,e,t,r)}buffer(e,t){return async function(e,t,r){const n=(0,c.en)(e),i={...n.query,f:"json",...t.toJSON()},s=t.outSpatialReference||t.geometries[0].spatialReference,o=(0,c.lA)(i,r);return(0,u.default)(n.path+"/buffer",o).then((e=>(e.data.geometries||[]).map((({rings:e})=>new f.Z({spatialReference:s,rings:e})))))}(this.url,e,t)}convexHull(e,t){return d(this.url,e,t)}cut(e,t,r){return async function(e,t,r,n){const i=(0,c.en)(e),s=t[0].spatialReference,o={...n,query:{...i.query,f:"json",sr:JSON.stringify(s),target:JSON.stringify({geometryType:(0,N.Ji)(t[0]),geometries:t}),cutter:JSON.stringify(r)}},a=await(0,u.default)(i.path+"/cut",o),{cutIndexes:l,geometries:f=[]}=a.data;return{cutIndexes:l,geometries:f.map((e=>{const t=(0,N.im)(e);return t.spatialReference=s,t}))}}(this.url,e,t,r)}densify(e,t){return async function(e,t,r){const n=t.geometries[0].spatialReference,i=(0,c.en)(e),s={...i.query,f:"json",...t.toJSON()},o=(0,c.lA)(s,r);return(0,u.default)(i.path+"/densify",o).then((({data:e})=>(e.geometries||[]).map((e=>(0,N.im)(e).set({spatialReference:n})))))}(this.url,e,t)}difference(e,t,r){return _(this.url,e,t,r)}distance(e,t){return async function(e,t,r){const n=(0,c.en)(e),i={...n.query,f:"json",...t.toJSON()},s=(0,c.lA)(i,r);return(0,u.default)(n.path+"/distance",s).then((({data:e})=>e&&e.distance))}(this.url,e,t)}fromGeoCoordinateString(e,t){return async function(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.strings=JSON.stringify(t.strings);const i=t.conversionType||"mgrs";n.conversionType=S.toJSON(i),n.conversionMode=t.conversionMode;const s=(0,c.en)(e),o={...s.query,f:"json",...n},a=(0,c.lA)(o,r);return(0,u.default)(s.path+"/fromGeoCoordinateString",a).then((({data:e})=>e.coordinates))}(this.url,e,t)}generalize(e,t){return async function(e,t,r){const n=(t=R.from(t)).toJSON(),i=function(e){const{geometries:t,deviationUnit:r,maxDeviation:n}=e.toJSON(),i={maxDeviation:n};return t&&t.length&&(i.geometries=JSON.stringify({geometryType:(0,N.Ji)(t[0]),geometries:t}),i.sr=JSON.stringify(t[0].spatialReference)),T.write(r,i,"deviationUnit"),i}(t),s=(0,c.en)(e),o={...s.query,f:"json",...i},a=n.geometries[0].spatialReference,l=(0,c.lA)(o,r);return(0,u.default)(s.path+"/generalize",l).then((({data:e})=>(e.geometries||[]).map((e=>(0,N.im)(e).set({spatialReference:a})))))}(this.url,e,t)}intersect(e,t,r){return h(this.url,e,t,r)}labelPoints(e,t){return function(e,t,r){const n=t.map((e=>e.toJSON())),i=t[0].spatialReference,s=(0,c.en)(e),o={...s.query,f:"json",sr:i.wkid?i.wkid:JSON.stringify(i.toJSON()),polygons:JSON.stringify(n)},a=(0,c.lA)(o,r);return(0,u.default)(s.path+"/labelPoints",a).then((({data:e})=>(e.labelPoints||[]).map((e=>(0,N.im)(e).set({spatialReference:i})))))}(this.url,e,t)}lengths(e,t){return async function(e,t,r){const n=A(t=w.from(t)),i=(0,c.en)(e),s={...i.query,f:"json",...n},o=(0,c.lA)(s,r);return(0,u.default)(i.path+"/lengths",o).then((({data:e})=>e))}(this.url,e,t)}offset(e,t){return async function(e,t,r){const n=function(e){const{geometries:t,bevelRatio:r,offsetDistance:n,offsetHow:i,offsetUnit:s}=e.toJSON(),o={bevelRatio:r,offsetDistance:n};return t&&t.length&&(o.geometries=JSON.stringify({geometryType:(0,N.Ji)(t[0]),geometries:t}),o.sr=JSON.stringify(t[0].spatialReference)),i&&(o.offsetHow=C.toJSON(i)),s&&(o.offsetUnit=v.toJSON(s)),o}(t=D.from(t)),i=(0,c.en)(e),s={...i.query,f:"json",...n},o=t.geometries[0].spatialReference,a=(0,c.lA)(s,r);return(0,u.default)(i.path+"/offset",a).then((({data:e})=>(e.geometries||[]).map((e=>(0,N.im)(e).set({spatialReference:o})))))}(this.url,e,t)}project(e,t){return async function(e,t,r){t=L(t);const n=(0,c.en)(e),i={...n.query,f:"json",...t.toJSON()},s=t.outSpatialReference,o=(0,N.Ji)(t.geometries[0]),a=(0,c.lA)(i,r);return(0,u.default)(n.path+"/project",a).then((({data:{geometries:e}})=>m(e,o,s)))}(this.url,e,t)}relation(e,t){return async function(e,t,r){const n=function(e){const{geometries1:t,geometries2:r,relation:n,relationParameter:i}=e.toJSON(),s={};if(t&&t.length){s.geometries1=JSON.stringify({geometryType:(0,N.Ji)(t[0]),geometries:t});const e=t[0].spatialReference;s.sr=e.wkid?e.wkid:JSON.stringify(e)}return r&&r.length>0&&(s.geometries2=JSON.stringify({geometryType:(0,N.Ji)(r[0]),geometries:r})),n&&(s.relation=M.toJSON(n)),i&&(s.relationParam=i),s}(t=G.from(t)),i=(0,c.en)(e),s={...i.query,f:"json",...n},o=(0,c.lA)(s,r);return(0,u.default)(i.path+"/relation",o).then((({data:e})=>e.relations))}(this.url,e,t)}reshape(e,t,r){return async function(e,t,r,n){const i=t.spatialReference,s=(0,c.en)(e),o={...s.query,f:"json",sr:JSON.stringify(i.toJSON()),target:JSON.stringify({geometryType:(0,N.Ji)(t),geometry:t.toJSON()}),reshaper:JSON.stringify(r.toJSON())},a=(0,c.lA)(o,n);return(0,u.default)(s.path+"/reshape",a).then((({data:e})=>(0,N.im)(e.geometry).set({spatialReference:i})))}(this.url,e,t,r)}simplify(e,t){return x(this.url,e,t)}toGeoCoordinateString(e,t){return async function(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.coordinates=JSON.stringify(t.coordinates);const i=t.conversionType||"mgrs";n.conversionType=S.toJSON(i),n.conversionMode=t.conversionMode,n.numOfDigits=t.numOfDigits,n.rounding=t.rounding,n.addSpaces=t.addSpaces;const s=(0,c.en)(e),o={...s.query,f:"json",...n},a=(0,c.lA)(o,r);return(0,u.default)(s.path+"/toGeoCoordinateString",a).then((({data:e})=>e.strings))}(this.url,e,t)}trimExtend(e,t){return async function(e,t,r){const n=function(e){const{extendHow:t,polylines:r,trimExtendTo:n}=e.toJSON(),i={};return i.extendHow=k.toJSON(t),r&&r.length&&(i.polylines=JSON.stringify(r),i.sr=JSON.stringify(r[0].spatialReference)),n&&(i.trimExtendTo=JSON.stringify(n)),i}(t=F.from(t)),i=(0,c.en)(e),s={...i.query,f:"json",...n},o=t.sr,a=(0,c.lA)(s,r);return(0,u.default)(i.path+"/trimExtend",a).then((({data:e})=>(e.geometries||[]).map((({paths:e})=>new E.Z({spatialReference:o,paths:e})))))}(this.url,e,t)}union(e,t){return Y(this.url,e,t)}};K.UNIT_METER=9001,K.UNIT_GERMAN_METER=9031,K.UNIT_FOOT=9002,K.UNIT_SURVEY_FOOT=9003,K.UNIT_CLARKE_FOOT=9005,K.UNIT_FATHOM=9014,K.UNIT_NAUTICAL_MILE=9030,K.UNIT_SURVEY_CHAIN=9033,K.UNIT_SURVEY_LINK=9034,K.UNIT_SURVEY_MILE=9035,K.UNIT_KILOMETER=9036,K.UNIT_CLARKE_YARD=9037,K.UNIT_CLARKE_CHAIN=9038,K.UNIT_CLARKE_LINK=9039,K.UNIT_SEARS_YARD=9040,K.UNIT_SEARS_FOOT=9041,K.UNIT_SEARS_CHAIN=9042,K.UNIT_SEARS_LINK=9043,K.UNIT_BENOIT_1895A_YARD=9050,K.UNIT_BENOIT_1895A_FOOT=9051,K.UNIT_BENOIT_1895A_CHAIN=9052,K.UNIT_BENOIT_1895A_LINK=9053,K.UNIT_BENOIT_1895B_YARD=9060,K.UNIT_BENOIT_1895B_FOOT=9061,K.UNIT_BENOIT_1895B_CHAIN=9062,K.UNIT_BENOIT_1895B_LINK=9063,K.UNIT_INDIAN_FOOT=9080,K.UNIT_INDIAN_1937_FOOT=9081,K.UNIT_INDIAN_1962_FOOT=9082,K.UNIT_INDIAN_1975_FOOT=9083,K.UNIT_INDIAN_YARD=9084,K.UNIT_INDIAN_1937_YARD=9085,K.UNIT_INDIAN_1962_YARD=9086,K.UNIT_INDIAN_1975_YARD=9087,K.UNIT_FOOT_1865=9070,K.UNIT_RADIAN=9101,K.UNIT_DEGREE=9102,K.UNIT_ARCMINUTE=9103,K.UNIT_ARCSECOND=9104,K.UNIT_GRAD=9105,K.UNIT_GON=9106,K.UNIT_MICRORADIAN=9109,K.UNIT_ARCMINUTE_CENTESIMAL=9112,K.UNIT_ARCSECOND_CENTESIMAL=9113,K.UNIT_MIL6400=9114,K.UNIT_BRITISH_1936_FOOT=9095,K.UNIT_GOLDCOAST_FOOT=9094,K.UNIT_INTERNATIONAL_CHAIN=109003,K.UNIT_INTERNATIONAL_LINK=109004,K.UNIT_INTERNATIONAL_YARD=109001,K.UNIT_STATUTE_MILE=9093,K.UNIT_SURVEY_YARD=109002,K.UNIT_50KILOMETER_LENGTH=109030,K.UNIT_150KILOMETER_LENGTH=109031,K.UNIT_DECIMETER=109005,K.UNIT_CENTIMETER=109006,K.UNIT_MILLIMETER=109007,K.UNIT_INTERNATIONAL_INCH=109008,K.UNIT_US_SURVEY_INCH=109009,K.UNIT_INTERNATIONAL_ROD=109010,K.UNIT_US_SURVEY_ROD=109011,K.UNIT_US_NAUTICAL_MILE=109012,K.UNIT_UK_NAUTICAL_MILE=109013,K.UNIT_SQUARE_INCHES="esriSquareInches",K.UNIT_SQUARE_FEET="esriSquareFeet",K.UNIT_SQUARE_YARDS="esriSquareYards",K.UNIT_ACRES="esriAcres",K.UNIT_SQUARE_MILES="esriSquareMiles",K.UNIT_SQUARE_MILLIMETERS="esriSquareMillimeters",K.UNIT_SQUARE_CENTIMETERS="esriSquareCentimeters",K.UNIT_SQUARE_DECIMETERS="esriSquareDecimeters",K.UNIT_SQUARE_METERS="esriSquareMeters",K.UNIT_ARES="esriAres",K.UNIT_HECTARES="esriHectares",K.UNIT_SQUARE_KILOMETERS="esriSquareKilometers",(0,n._)([(0,s.Cb)()],K.prototype,"url",void 0),K=(0,n._)([(0,o.j)("esri.tasks.GeometryService")],K);const B=K},52411:(e,t,r)=>{"use strict";r.d(t,{Z:()=>u});var n=r(56140),i=(r(95830),r(36544),r(68055),r(79881)),s=r(87566),o=(r(10923),r(57002),r(86035),r(58385)),a=r(56885);let l=class extends o.wq{constructor(e){super(e),this.geometries=null,this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map((function(e){return e.toJSON()})),t=this.geometries[0],r={};return r.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),r.inSR=t.spatialReference.wkid||JSON.stringify(t.spatialReference.toJSON()),r.geometries=JSON.stringify({geometryType:(0,a.Ji)(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),null!=this.transformForward&&(r.transformForward=this.transformForward),r}};(0,n._)([(0,i.Cb)()],l.prototype,"geometries",void 0),(0,n._)([(0,i.Cb)({json:{read:{source:"outSR"}}})],l.prototype,"outSpatialReference",void 0),(0,n._)([(0,i.Cb)()],l.prototype,"transformation",void 0),(0,n._)([(0,i.Cb)()],l.prototype,"transformForward",void 0),l=(0,n._)([(0,s.j)("esri.tasks.support.ProjectParameters")],l);const u=l}}]);