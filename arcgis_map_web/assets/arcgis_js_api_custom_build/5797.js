(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[5797,9985,6194],{54479:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>C});var r=o(56140),i=o(95830),n=(o(36544),o(68055),o(79881)),s=o(30590),l=o(87566),a=(o(10923),o(57002),o(86035),o(37704)),u=o(73032),p=(o(36348),o(31518)),c=o(8809),d=o(12850),y=o(59472),f=o(52937),h=o(809),m=o(28128),g=o(76194);let _=class extends h.Z{constructor(e){super(e),this.type="csv"}load(e){const t=(0,y.pC)(e)?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){var e;null==(e=this._connection)||e.close(),this._connection=null}openPorts(){return this.load().then((()=>this._connection.openPorts()))}queryFeatures(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))).then((e=>g.default.fromJSON(e)))}queryFeaturesJSON(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)))}queryFeatureCount(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)))}queryObjectIds(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)))}queryExtent(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t))).then((e=>({count:e.count,extent:f.Z.fromJSON(e.extent)})))}querySnapping(e,t={}){return this.load(t).then((()=>this._connection.invoke("querySnapping",e,t)))}async _startWorker(e){this._connection=await(0,m.bA)("CSVSourceWorker",{strategy:(0,i.Z)("feature-layers-workers")?"dedicated":"local",signal:e});const t=await this._connection.invoke("load",{url:this.url,parsing:{columnDelimiter:this.delimiter,fields:this.fields&&this.fields.map((e=>e.toJSON())),latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference&&this.spatialReference.toJSON(),timeInfo:this.timeInfo&&this.timeInfo.toJSON()}},{signal:e});this.locationInfo=t.locationInfo,this.sourceJSON=t.layerDefinition,this.columnDelimiter=t.columnDelimiter}};(0,r._)([(0,n.Cb)()],_.prototype,"type",void 0),(0,r._)([(0,n.Cb)()],_.prototype,"url",void 0),(0,r._)([(0,n.Cb)()],_.prototype,"delimiter",void 0),(0,r._)([(0,n.Cb)()],_.prototype,"fields",void 0),(0,r._)([(0,n.Cb)()],_.prototype,"latitudeField",void 0),(0,r._)([(0,n.Cb)()],_.prototype,"longitudeField",void 0),(0,r._)([(0,n.Cb)()],_.prototype,"spatialReference",void 0),(0,r._)([(0,n.Cb)()],_.prototype,"timeInfo",void 0),(0,r._)([(0,n.Cb)()],_.prototype,"locationInfo",void 0),(0,r._)([(0,n.Cb)()],_.prototype,"sourceJSON",void 0),(0,r._)([(0,n.Cb)()],_.prototype,"columnDelimiter",void 0),_=(0,r._)([(0,l.j)("esri.layers.graphics.sources.CSVSource")],_);const b=_;let v=class extends c.default{constructor(...e){super(...e),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.portalItem=null,this.spatialReference=u.Z.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}get capabilities(){return{data:{supportsAttachment:!1,supportsM:!1,supportsZ:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsQuery:!0,supportsResizeAttachments:!1,supportsUpdate:!1},query:d.g,queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1},editing:{supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1}}}get isTable(){return this.loaded&&null==this.geometryType}readWebMapLabelsVisible(e,t){return null!=t.showLabels?t.showLabels:!!(t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.labelingInfo)}set url(e){this._set("url",e)}async createGraphicsSource(e){const t=new b({delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference,timeInfo:this.timeInfo,url:this.url});return this._set("source",t),await t.load({signal:e}),this.read({locationInfo:t.locationInfo,columnDelimiter:t.columnDelimiter},{origin:"service",url:this.parsedUrl}),t}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(p.Z.from(e)||this.createQuery()))).then((e=>{if(e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(p.Z.from(e)||this.createQuery())))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(p.Z.from(e)||this.createQuery())))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(p.Z.from(e)||this.createQuery())))}write(e,t){return super.write(e,{...t,writeLayerSchema:!0})}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};(0,r._)([(0,n.Cb)({readOnly:!0,dependsOn:["loaded"],json:{read:!1,write:!1}})],v.prototype,"capabilities",null),(0,r._)([(0,n.Cb)({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],v.prototype,"delimiter",void 0),(0,r._)([(0,n.Cb)({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],v.prototype,"editingEnabled",void 0),(0,r._)([(0,n.Cb)({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],v.prototype,"fields",void 0),(0,r._)([(0,n.Cb)({type:Boolean,readOnly:!0})],v.prototype,"isTable",null),(0,r._)([(0,s.r)("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],v.prototype,"readWebMapLabelsVisible",null),(0,r._)([(0,n.Cb)({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],v.prototype,"latitudeField",void 0),(0,r._)([(0,n.Cb)({type:["show","hide"]})],v.prototype,"listMode",void 0),(0,r._)([(0,n.Cb)({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],v.prototype,"locationType",void 0),(0,r._)([(0,n.Cb)({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],v.prototype,"longitudeField",void 0),(0,r._)([(0,n.Cb)({type:["CSV"]})],v.prototype,"operationalLayerType",void 0),(0,r._)([(0,n.Cb)()],v.prototype,"outFields",void 0),(0,r._)([(0,n.Cb)({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],v.prototype,"path",void 0),(0,r._)([(0,n.Cb)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],v.prototype,"portalItem",void 0),(0,r._)([(0,n.Cb)({json:{read:!1},cast:null,type:b,readOnly:!0})],v.prototype,"source",void 0),(0,r._)([(0,n.Cb)({json:{read:!1},value:"csv",readOnly:!0})],v.prototype,"type",void 0),(0,r._)([(0,n.Cb)({json:{read:a.r,write:{isRequired:!0,ignoreOrigin:!0,writer:a.w}}})],v.prototype,"url",null),v=(0,r._)([(0,l.j)("esri.layers.CSVLayer")],v);const C=v},12850:(e,t,o)=>{"use strict";o.d(t,{g:()=>r});const r={supportsStatistics:!0,supportsPercentileStatistics:!0,supportsCentroid:!0,supportsCacheHint:!1,supportsDistance:!0,supportsDistinct:!0,supportsExtent:!0,supportsGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQuantization:!0,supportsQuantizationEditMode:!1,supportsQueryGeometry:!0,supportsResultType:!1,supportsSqlExpression:!0,supportsMaxRecordCountFactor:!1,supportsStandardizedQueriesOnly:!0,supportsQueryByOthers:!0,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!0,maxRecordCountFactor:void 0,maxRecordCount:void 0,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}},39597:(e,t,o)=>{"use strict";o.d(t,{p:()=>i});var r=o(98863);function i(e,t,o){if(!o||!o.features||!o.hasZ)return;const i=(0,r.k)(o.geometryType,t,e.outSpatialReference);if(i)for(const e of o.features)i(e.geometry)}},98863:(e,t,o)=>{"use strict";o.d(t,{k:()=>s,P:()=>a});var r=o(59472),i=o(27780),n=o(93533);function s(e,t,o){if((0,r.Wi)(t)||(0,r.Wi)(o)||o.vcsWkid||(0,i.fS)(t,o))return null;const s=(0,n._R)(t)/(0,n._R)(o);if(1===s)return null;switch(e){case"point":case"esriGeometryPoint":return e=>function(e,t){e&&null!=e.z&&(e.z*=t)}(e,s);case"polyline":case"esriGeometryPolyline":return e=>function(e,t){if(e)for(const o of e.paths)for(const e of o)e.length>2&&(e[2]*=t)}(e,s);case"polygon":case"esriGeometryPolygon":return e=>function(e,t){if(e)for(const o of e.rings)for(const e of o)e.length>2&&(e[2]*=t)}(e,s);case"multipoint":case"esriGeometryMultipoint":return e=>function(e,t){if(e)for(const o of e.points)o.length>2&&(o[2]*=t)}(e,s);default:return null}}function l(e,t,o){if(null==e.hasM||e.hasZ)for(const e of t)for(const t of e)t.length>2&&(t[2]*=o)}function a(e,t,o){if(!e&&!t||!o)return;const r=(0,n._R)(o);u(e,o,r),u(t,o,r)}function u(e,t,o){if(e)for(const r of e)p(r.geometry,t,o)}function p(e,t,o){if(!e||!e.spatialReference||(0,i.fS)(e.spatialReference,t))return;const r=(0,n._R)(e.spatialReference)/o;if(1!==r)if("x"in e)null!=e.z&&(e.z*=r);else if("rings"in e)l(e,e.rings,r);else if("paths"in e)l(e,e.paths,r);else if("points"in e&&(null==e.hasM||e.hasZ))for(const t of e.points)t.length>2&&(t[2]*=r)}},76194:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>_});var r=o(56140),i=(o(95830),o(59472)),n=(o(36544),o(68055),o(79881)),s=o(56274),l=o(30590),a=o(87566),u=o(60538),p=(o(10923),o(57002),o(86035),o(58385)),c=o(73032),d=o(56885),y=o(36348),f=o(15988),h=o(70834);const m=new s.Xn({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let g=class extends p.wq{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){const o=c.Z.fromJSON(t.spatialReference),r=[];for(let t=0;t<e.length;t++){const n=e[t],s=f.Z.fromJSON(n),l=n.geometry&&n.geometry.spatialReference;(0,i.pC)(s.geometry)&&!l&&(s.geometry.spatialReference=o),r.push(s)}return r}writeGeometryType(e,t,o,r){if(e)return void m.write(e,t,o,r);const{features:n}=this;if(n)for(const e of n)if(e&&(0,i.pC)(e.geometry))return void m.write(e.geometry.type,t,o,r)}readQueryGeometry(e,t){if(!e)return null;const o=!!e.spatialReference,r=(0,d.im)(e);return!o&&t.spatialReference&&(r.spatialReference=c.Z.fromJSON(t.spatialReference)),r}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:o}=this;if(o)for(const e of o)if(e&&(0,i.pC)(e.geometry)&&e.geometry.spatialReference)return void(t.spatialReference=e.geometry.spatialReference.toJSON())}toJSON(e){const t=this.write(null);if(t.features&&Array.isArray(e)&&e.length>0)for(let o=0;o<t.features.length;o++){const r=t.features[o];if(r.geometry){const t=e&&e[o];r.geometry=t&&t.toJSON()||r.geometry}}return t}quantize(e){const{scale:[t,o],translate:[r,n]}=e,s=this.features,l=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-r)/t)),(e=>Math.round((n-e)/o)));for(let e=0,t=s.length;e<t;e++)l((0,i.Wg)(s[e].geometry))||(s.splice(e,1),e--,t--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:o}=this;if(!o)return this;const{translate:[r,n],scale:[s,l]}=o,a=this._getHydrationFunction(e,(e=>e*s+r),(e=>n-e*l));for(const{geometry:e}of t)(0,i.pC)(e)&&a(e);return this.transform=null,this}_quantizePoints(e,t,o){let r,i;const n=[];for(let s=0,l=e.length;s<l;s++){const l=e[s];if(s>0){const e=t(l[0]),s=o(l[1]);e===r&&s===i||(n.push([e-r,s-i]),r=e,i=s)}else r=t(l[0]),i=o(l[1]),n.push([r,i])}return n.length>0?n:null}_getQuantizationFunction(e,t,o){return"point"===e?e=>(e.x=t(e.x),e.y=o(e.y),e):"polyline"===e||"polygon"===e?e=>{const r=(0,d.oU)(e)?e.rings:e.paths,i=[];for(let e=0,n=r.length;e<n;e++){const n=r[e],s=this._quantizePoints(n,t,o);s&&i.push(s)}return i.length>0?((0,d.oU)(e)?e.rings=i:e.paths=i,e):null}:"multipoint"===e?e=>{const r=this._quantizePoints(e.points,t,o);return r.length>0?(e.points=r,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,o){return"point"===e?e=>{e.x=t(e.x),e.y=o(e.y)}:"polyline"===e||"polygon"===e?e=>{const r=(0,d.oU)(e)?e.rings:e.paths;let i,n;for(let e=0,s=r.length;e<s;e++){const s=r[e];for(let e=0,r=s.length;e<r;e++){const r=s[e];e>0?(i+=r[0],n+=r[1]):(i=r[0],n=r[1]),r[0]=t(i),r[1]=o(n)}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=o(e.ymin),e.xmax=t(e.xmax),e.ymax=o(e.ymax)}:"multipoint"===e?e=>{const r=e.points;let i,n;for(let e=0,s=r.length;e<s;e++){const s=r[e];e>0?(i+=s[0],n+=s[1]):(i=s[0],n=s[1]),s[0]=t(i),s[1]=o(n)}}:void 0}};(0,r._)([(0,n.Cb)({type:String,json:{write:!0}})],g.prototype,"displayFieldName",void 0),(0,r._)([(0,n.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],g.prototype,"exceededTransferLimit",void 0),(0,r._)([(0,n.Cb)({type:[f.Z],json:{write:!0}})],g.prototype,"features",void 0),(0,r._)([(0,l.r)("features")],g.prototype,"readFeatures",null),(0,r._)([(0,n.Cb)({type:[h.Z],json:{write:!0}})],g.prototype,"fields",void 0),(0,r._)([(0,n.Cb)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:m.read}}})],g.prototype,"geometryType",void 0),(0,r._)([(0,u.c)("geometryType")],g.prototype,"writeGeometryType",null),(0,r._)([(0,n.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],g.prototype,"hasM",void 0),(0,r._)([(0,n.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],g.prototype,"hasZ",void 0),(0,r._)([(0,n.Cb)({types:y.qM,json:{write:!0}})],g.prototype,"queryGeometry",void 0),(0,r._)([(0,l.r)("queryGeometry")],g.prototype,"readQueryGeometry",null),(0,r._)([(0,n.Cb)({type:c.Z,json:{write:!0}})],g.prototype,"spatialReference",void 0),(0,r._)([(0,u.c)("spatialReference")],g.prototype,"writeSpatialReference",null),(0,r._)([(0,n.Cb)({json:{write:!0}})],g.prototype,"transform",void 0),g=(0,r._)([(0,a.j)("esri.tasks.support.FeatureSet")],g),g.prototype.toJSON.isDefaultToJSON=!0,g||(g={});const _=g}}]);