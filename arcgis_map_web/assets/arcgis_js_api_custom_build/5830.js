"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[5830],{61774:(e,t,i)=>{i.d(t,{C:()=>p,b:()=>u});var s=i(73393),r=i(32394),n=i(84614),o=i(93072),a=i(63371),h=i(23410),l=i(3961),c=i(42842),d=i(21414);function u(e){const t=new l.kG;t.extensions.add("GL_OES_standard_derivatives");const{vertex:i,fragment:u}=t;return(0,n.Sv)(i,e),t.attributes.add(d.T.POSITION,"vec3"),t.attributes.add(d.T.UV0,"vec2"),t.varyings.add("vUV","vec2"),e.hasMultipassTerrain&&t.varyings.add("depth","float"),i.code.add(h.H`
    void main(void) {
      vUV = uv0;
      ${e.hasMultipassTerrain?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),t.include(s.l,e),u.uniforms.add(new o.A("size",(e=>e.size))),u.uniforms.add(new a.N("color1",(e=>e.color1))),u.uniforms.add(new a.N("color2",(e=>e.color2))),u.include(r.Y),u.code.add(h.H`
    void main() {
      ${e.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${e.transparencyPassType===c.A.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),t}const p=Object.freeze(Object.defineProperty({__proto__:null,build:u},Symbol.toStringTag,{value:"Module"}))},55830:(e,t,i)=>{i.r(t),i.d(t,{default:()=>et});var s=i(36663),r=i(53443),n=i(61681),o=i(81977),a=(i(7283),i(7753),i(40266)),h=i(71197),l=i(60573),c=i(76545),d=i(76868),u=i(90472),p=i(61170),g=i(19431),m=i(39405),_=i(55709),f=i(69666),y=i(6766),L=i(8909),C=i(1983),v=i(69442),S=i(14685),b=i(19546),w=i(68668),P=i(42772),A=i(17700),M=i(89542),V=i(85130),G=i(35369);function R(e,t,i){const s=new V._q;return(0,V.cA)(s,[e[0],e[1]],[t[0],t[1]],i),s.distance}function D(e,t,i,s){const r=O;return(0,u.ke)(e,s,z)&&(0,u.ke)(t,s,T)&&(0,u.ke)(i,s,x)?(r.setPoint(0,0,z),r.setPoint(0,1,T),r.setPoint(0,2,x),Math.abs((0,A.geodesicArea)(r,"square-meters"))):0}const z=(0,L.c)(),T=(0,L.c)(),x=(0,L.c)(),O=new M.Z({rings:[[z,T,x]],spatialReference:S.Z.WGS84}),I=(0,L.c)();var W=i(19570),E=i(66143),U=i(71454),j=i(95785);class k{constructor(e,t){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=(0,L.c)(),this.areaCentroidRenderCoords=(0,L.c)(),this.geodesicAreaCentroidRenderCoords=(0,L.c)(),this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=(0,L.c)(),this._planeWorldCoords=(0,C.c)(),this._worldUp=(0,L.c)(),this._worldTangent=(0,L.c)(),this._frame=[(0,L.c)(),(0,L.c)(),(0,L.c)()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=(0,L.c)(),this._tempV=(0,L.c)(),this._tempVec3=(0,L.c)(),this._tempSphere={center:(0,L.c)(),radius:0},this._sceneView=e,this.unitNormalizer=t}update(e,t,i,s,r,o,a){const h=this.unitNormalizer,l=this._sceneView.renderSpatialReference,c=this.unitNormalizer.spatialReference,d=(0,n.pC)(t);if(this._pathVersion===e.version&&this._validMeasurement===s&&!a&&this._hasCursorPoint===d&&this._mode===o)return!e.isValidPolygon&&(this._updateCursorSegmentLength(e,t),!0);this._pathVersion=e.version,this._validMeasurement=s,this._hasCursorPoint=d;const g=e.numVertices;this._resize(g);const _=(0,p.rS)(i.spatialReference),f=(0,u.Up)(i.spatialReference,_)&&(0,u.jF)(i.spatialReference),{positionsGeographic:L,positionsWorldCoords:C,positionsRenderCoords:v,positionsSpherical:S}=this;e.forEachVertexPosition(((e,t)=>{(function(e,t){t.hasZ||(t.z=(0,n.Pt)((0,E.KO)(e,t,"ground"),0))})(i.elevationProvider,e),(0,u.KC)(e,C[t],c),(0,u.KC)(e,v[t],l),f&&((0,u.UY)(e,L[t]),(0,u.KC)(e,S[t],_),(0,y.n)(S[t],S[t]))}));const b=this._updatePathLengths(s);if(this.pathLength=this._length>1?(0,m.yG)(h.normalizeDistance(b),"meters"):null,f){const e=this._updateGeodesicPathLengths(s,c);this.geodesicPathLength=this._length>1?(0,m.yG)(e,"meters"):null}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(e,t),this._updateMode(e,o),s?(this._updateArea(i,h,l,c,r),f&&this._updateGeodesicArea(i),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return{positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push((0,L.c)()),this.positionsRenderCoords.push((0,L.c)()),this.positionsProjectedWorldCoords.push((0,f.a)()),this.positionsFittedRenderCoords.push((0,L.c)()),this.positionsGeographic.push((0,L.c)()),this.positionsSpherical.push((0,L.c)()),this.positionsStereographic.push((0,f.a)()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const t=this.positionsWorldCoords,i=this.pathSegmentLengths;let s=0;for(let r=0;r<this._length;++r){const n=i[r]=(0,y.i)(t[r],t[(r+1)%this._length]);(r<this._length-1||e)&&(s+=n)}return s}_updateGeodesicPathLengths(e,t){const i=this.positionsGeographic,s=this.geodesicPathSegmentLengths;let r=0;for(let n=0;n<this._length;++n){const o=s[n]=R(i[n],i[(n+1)%this._length],t??void 0);(n<this._length-1||e)&&(r+=o)}return r}_updateArea(e,t,i,s,r){const n=e.renderCoordsHelper,o=this.positionsWorldCoords,a=this.positionsRenderCoords,h=this.positionsProjectedWorldCoords,l=this.positionsFittedRenderCoords,c=this._planeWorldCoords,d=this._centroidRenderCoords;(0,W.H)(a,d),n.worldUpAtPosition(d,this._worldUp),n.worldBasisAtPosition(d,b.R.X,this._worldTangent),(0,u.Qr)(d,this._worldUp,i,this._worldUp,s),(0,u.Qr)(d,this._worldTangent,i,this._worldTangent,s),o.length>2&&function(e,t){if(e.length<3)throw new Error("need at least 3 points to fit a plane");(0,G.pG)(e[0],e[1],e[2],t)}(o,c),this.fittingMode=this._selectFittingMode(c,o,this._worldUp,r);let p=0;if("horizontal"===this.fittingMode){let e=-1/0;a.forEach(((t,i)=>{const s=n.getAltitude(a[i]);s>e&&(e=s,p=i)}))}const g=o[p];let f=c,L=this._worldTangent;"horizontal"===this.fittingMode?f=this._worldUp:"vertical"===this.fittingMode&&(f=this._tempVec3,L=this._worldUp,(0,G.T)(c,this._worldUp,f)),(0,y.c)(this._frame[2],f),(0,G.T)(L,f,this._frame[0]),(0,y.f)(this._frame[1],this._frame[0],this._frame[2]),(0,y.o)(this._frame[1],this._frame[1]);const C=this._tempVec3,v=this._tempU,S=this._tempV;for(let e=0;e<this._length;++e){const t=h[e],r=l[e];(0,y.b)(C,o[e],g),(0,_.s)(t,(0,y.e)(this._frame[0],C),(0,y.e)(this._frame[1],C)),(0,y.g)(v,this._frame[0],t[0]),(0,y.g)(S,this._frame[1],t[1]),(0,y.a)(C,v,S),(0,y.a)(C,C,g),(0,u.SH)(C,s,r,i)}this.perimeterLength=this._length>0?(0,m.yG)(t.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,(0,W.H)(l,this.areaCentroidRenderCoords),(0,u.SH)(this.areaCentroidRenderCoords,i,this.areaCentroidWorldCoords,s),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?(0,m.ne)(t.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const{renderCoordsHelper:t,spatialReference:i}=e,{positionsSpherical:s,positionsStereographic:r}=this,n=this._tempVec3,o=function(e,t=null,i=!0){const s=(e,t)=>{if(0===t[0]&&0===t[1]&&0===t[2])return!1;for(let i=0;i<e.length;++i)if((0,y.e)(t,e[i])<-1e-6)return!1;return!0};if(0===e.length)return!1;if(1===e.length)return t&&(0,y.c)(t,e[0]),!0;(0,y.s)(I,0,0,0);for(let t=0;t<e.length;++t)(0,y.a)(I,I,e[t]);if((0,y.n)(I,I),s(e,I))return t&&(0,y.c)(t,I),!0;if(!i)return!1;for(let i=0;i<e.length;++i)for(let r=0;r<e.length;++r)if(i!==r&&((0,y.f)(I,e[i],e[r]),(0,y.n)(I,I),s(e,I)))return t&&(0,y.c)(t,I),!0;return!1}(s,n);if(!o)return void(this.geodesicArea=null);const a=this._tempU,h=this._tempV;(0,G._F)(n,a,h);for(let e=0;e<this._length;++e){const t=(0,y.e)(s[e],a),i=(0,y.e)(s[e],h),o=(0,y.e)(s[e],n);(0,_.s)(r[e],t/o,i/o)}(0,y.g)(n,n,(0,v.Iu)(i).radius),t.toRenderCoords(n,(0,p.rS)(i),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=o&&0===this.geodesicIntersectingSegments.size?(0,m.ne)(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,t=this.perimeterSegmentLengths;let i=0;for(let s=0;s<this._length;++s)i+=t[s]=(0,_.d)(e[s],e[(s+1)%this._length]);return i}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,t=this.intersectingSegments;t.clear();for(let i=0;i<this._length;++i)for(let s=i+2;s<this._length;++s){if((s+1)%this._length===i)continue;const r=e[i],n=e[(i+1)%this._length],o=e[s],a=e[(s+1)%this._length];(0,w.UT)(r,n,o,a)&&(t.add(i),t.add(s))}}_computeArea(){const e=this.positionsProjectedWorldCoords,t=this.triangleIndices=(0,U.mi)((0,j.bT)(e));let i=0;for(let s=0;s<t.length;s+=3)i+=(0,P.wu)(e[t[s]],e[t[s+1]],e[t[s+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,t=this.geodesicIntersectingSegments;t.clear();for(let i=0;i<this._length;++i)for(let s=i+2;s<this._length;++s){if((s+1)%this._length===i)continue;const r=e[i],n=e[(i+1)%this._length],o=e[s],a=e[(s+1)%this._length];(0,w.UT)(r,n,o,a)&&(t.add(i),t.add(s))}}_computeGeodesicArea(){const e=this.positionsGeographic,t=this.positionsStereographic,i=this.geodesicTriangleIndices=(0,U.mi)((0,j.bT)(t));let s=0;for(let t=0;t<i.length;t+=3)s+=D(e[i[t]],e[i[t+1]],e[i[t+2]],S.Z.WGS84);return s}_selectFittingMode(e,t,i,s){const r=t.map((t=>Math.abs(function(e,t){return(0,y.e)(e,t)+e[3]}(e,t)))).reduce(((e,t)=>Math.max(e,t)),0);!function(e,t){const i=t.center;(0,y.s)(i,0,0,0);for(let t=0;t<e.length;++t)(0,y.a)(i,i,e[t]);(0,y.g)(i,i,1/e.length);let s=0;for(let t=0;t<e.length;++t)s=Math.max(s,(0,y.d)(i,e[t]));t.radius=Math.sqrt(s)}(t,this._tempSphere);const n=r/(2*this._tempSphere.radius),o=n<s.maxRelativeErrorCoplanar,a=n<s.maxRelativeErrorAlmostCoplanar;let h="horizontal";return o?h="oblique":a&&(h=Math.abs((0,y.e)(i,e))>Math.cos((0,g.Vl)(s.verticalAngleThreshold))?"horizontal":"vertical"),h}_updateCursorSegmentLength(e,t){const i=e.lastPoint;!e.isValidPolygon&&(0,n.pC)(i)&&(0,n.pC)(t)?(this.geodesicCursorSegmentLength=(0,m.yG)(function(e,t){if(!(0,u.UY)(e,z)||!(0,u.UY)(t,T))return 0;const i=new V._q;return(0,V.cA)(i,[z[0],z[1]],[T[0],T[1]]),i.distance}(i,t),"meters"),this.cursorSegmentLength=(0,m.yG)(this.unitNormalizer.normalizeDistance(function(e,t,i){return(0,u.KC)(e,z,i)&&(0,u.KC)(t,T,i)?(0,y.i)(z,T):0}(i,t,this.unitNormalizer.spatialReference)),"meters")):(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null)}_updateMode(e,t){if(t===c.e.Auto){this.actualMeasurementMode="euclidean";let t=0;null!=this.geodesicPathLength&&(t+=this.geodesicPathLength.value),!e.isValidPolygon&&(0,n.pC)(this.geodesicCursorSegmentLength)&&(t+=this.geodesicCursorSegmentLength.value),t>F&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=t===c.e.Euclidean?"euclidean":"geodesic";null==this.geodesicPathLength&&(this.actualMeasurementMode="euclidean"),this._mode=t}}const F=1e5;var N=i(56331);let H=class extends r.Z{constructor(e){super(e)}initialize(){const e=this.view.spatialReference,t=(0,p.rS)(e),i=t===p.GG?p.wY:t,s=!e||(0,u.Up)(e,i)?i:e,r=new N.D(s);this._measurementDataManager=new k(this.view,r),this.addHandles([this.analysisViewData.path.on("change",(()=>this._update())),(0,d.YP)((()=>this.analysisViewData.cursorPoint),(()=>this._update()),d.Z_),(0,d.YP)((()=>this.analysisViewData.mode),(()=>this._update()),d.Z_)]),this._update()}_update(e=!1){const{analysisViewData:t,view:i}=this;this._measurementDataManager.update(t.path,t.cursorPoint,i,t.validMeasurement,{maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80},t.mode,e)&&(t.measurementData=this._measurementDataManager.getData())}};(0,s._)([(0,o.Cb)({constructOnly:!0})],H.prototype,"view",void 0),(0,s._)([(0,o.Cb)({constructOnly:!0})],H.prototype,"analysis",void 0),(0,s._)([(0,o.Cb)({constructOnly:!0})],H.prototype,"analysisViewData",void 0),H=(0,s._)([(0,a.j)("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],H);var q=i(31355),Z=i(44584),B=i(13802),K=i(67666),Y=i(24568),X=i(28376),$=i(64594),Q=i(4703),J=i(62177);const ee="esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper",te=B.Z.getLogger(ee);let ie=class extends q.Z.EventedAccessor{constructor(e={}){super(e),this._handles=new Z.Z,this._version=0,this._internalGeometryChange=!1,this._extent=(0,Y.cS)()}destroy(){this._handles=(0,n.SC)(this._handles)}set areaMeasurement(e){this._set("areaMeasurement",e),(0,n.pC)(e)&&(0,n.pC)(this.view)&&this._initialize(e,this.view)}set view(e){this._set("view",e),(0,n.pC)(e)&&(0,n.pC)(this.areaMeasurement)&&this._initialize(this.areaMeasurement,e)}get constructed(){return(0,n.pC)(this.areaMeasurement)&&(0,n.pC)(this.view)}get version(){return this._version}get isValidPolygon(){return this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const e=(0,Y.cS)(this._extent);return this.forEachVertex((t=>{(0,Y.Ho)(e,t.pos)})),e}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(e,t){this._handles.removeAll(),this._handles.add((0,d.YP)((()=>e.geometry),(()=>{this._updateEditGeometryFromModelGeometry(e,t)}),d.tX)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,t){if(this._version++,this._internalGeometryChange)return;this._handles.remove("EditGeometry");let i=e.geometry;if((0,n.pC)(i)){const s=(0,u.fM)(i,t.spatialReference);(0,n.Wi)(s)&&(0,X.e)(e,i.spatialReference,te),i=s}(0,n.pC)(i)?this._editGeometryOperations=J.c.fromGeometry(i,t.state.viewingMode):this._editGeometryOperations=new J.c(new Q.XE("polygon",(0,$.Y6)(!0,!1,t.spatialReference))),this._makeDirty(!0),this.emit("change"),this._handles.add(this._editGeometry.on("change",(t=>{this._makeDirty(null!=t.addedVertices||null!=t.removedVertices),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1})),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex((t=>{e.push(t)})),e}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getLastVertex();if((0,n.pC)(e))return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.constructed||0===this._editGeometry.components.length||0===this._editGeometry.components[0].vertices.length)return null;const t=this._editGeometry.components[0].vertices[0];let i=t;do{if(i.index===e)return i;i=i.rightEdge.rightVertex}while(i!==t&&null!=i);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const t=this._editGeometry.coordinateHelper;this.forEachVertex(((i,s)=>{t.vectorToPoint(i.pos,se),e(se,s)}))}clear(){(0,n.pC)(this.areaMeasurement)&&(this.areaMeasurement.geometry=null)}add(e){if(!this.constructed)return null;if(0===this._editGeometry.components.length){const e=(0,n.Wg)(this.view);this._editGeometry.components.push(new Q.wA(e.spatialReference,e.state.viewingMode))}const t=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),t}close(){if(!this.constructed||0===this._editGeometry.components.length)return null;const e=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),e}ensureContains(e,t=""){let i=!1;if(this._editGeometry.components.forEach((t=>{t.iterateVertices((t=>{t===e&&(i=!0)}))})),!i)throw new Error(`vertex doesnt exist ${t}`);return i}setVertexPosition(e,t){if(!this.constructed)return null;const i=this._editGeometryOperations.setVertexPosition(e,this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),i}equals(e){if(this.numVertices!==e.numVertices)return!1;let t=!0;return this.forEachVertexPosition(((i,s)=>{const r=e.getVertexPositionAsPointFromIndex(s);i.equals(r)||(t=!1)})),!!t}};(0,s._)([(0,o.Cb)({value:null})],ie.prototype,"areaMeasurement",null),(0,s._)([(0,o.Cb)({value:null})],ie.prototype,"view",null),(0,s._)([(0,o.Cb)()],ie.prototype,"isValidPolygon",null),(0,s._)([(0,o.Cb)()],ie.prototype,"extent",null),(0,s._)([(0,o.Cb)()],ie.prototype,"spatialReference",null),(0,s._)([(0,o.Cb)()],ie.prototype,"numVertices",null),ie=(0,s._)([(0,a.j)(ee)],ie);const se=new K.Z;var re=i(30936),ne=(i(87090),i(84572)),oe=(i(39994),i(10145)),ae=i(17321),he=i(24455),le=i(39100),ce=i(21961),de=i(37926),ue=i(88589),pe=i(10449),ge=i(85799),me=i(45467),_e=i(7358),fe=i(21414),ye=i(35031),Le=i(5079),Ce=i(46378),ve=i(79601),Se=i(85266),be=i(10056),we=i(9969),Pe=i(52756),Ae=i(5474),Me=i(12045),Ve=i(95194),Ge=i(42842),Re=i(61774),De=i(91907),ze=i(17346);class Te extends Pe.A{initializeProgram(e){return new Ve.$(e.rctx,Te.shader.get().build(this.configuration),Ae.i)}_setPipelineState(e){const t=this.configuration,i=e===Ge.A.NONE,s=e===Ge.A.FrontFace;return(0,ze.sm)({blending:t.transparent?i?Oe:(0,Me.j7)(e):null,depthTest:{func:(0,Me.Bh)(e)},depthWrite:i?t.writeDepth?ze.LZ:null:(0,Me.K5)(e),colorWrite:ze.BK,polygonOffset:i||s?t.polygonOffset?xe:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}Te.shader=new we.J(Re.C,(()=>i.e(6119).then(i.bind(i,56119))));const xe={factor:0,units:-25},Oe=(0,ze.wK)(De.zi.SRC_ALPHA,De.zi.ONE,De.zi.ONE_MINUS_SRC_ALPHA,De.zi.ONE_MINUS_SRC_ALPHA);var Ie=i(67197),We=i(86942);class Ee extends We.W{constructor(){super(...arguments),this.transparencyPassType=Ge.A.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}(0,s._)([(0,Ie.o)({count:Ge.A.COUNT})],Ee.prototype,"transparencyPassType",void 0),(0,s._)([(0,Ie.o)()],Ee.prototype,"transparent",void 0),(0,s._)([(0,Ie.o)()],Ee.prototype,"writeDepth",void 0),(0,s._)([(0,Ie.o)()],Ee.prototype,"polygonOffset",void 0),(0,s._)([(0,Ie.o)()],Ee.prototype,"hasMultipassTerrain",void 0),(0,s._)([(0,Ie.o)()],Ee.prototype,"cullAboveGround",void 0);class Ue extends be.c{constructor(e){super(e,new ke),this._configuration=new Ee}dispose(){}getConfiguration(e,t){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.hasMultipassTerrain=t.multipassTerrain.enabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration}requiresSlot(e,t){return(t===ye.H.Color||t===ye.H.Alpha)&&(e===(this.parameters.transparent?this.parameters.writeDepth?Ce.r.TRANSPARENT_MATERIAL:Ce.r.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:Ce.r.OPAQUE_MATERIAL)||e===Ce.r.DRAPED_MATERIAL)}createGLMaterial(e){return new je(e)}createBufferWriter(){return new ve.G(Se.W1)}}class je extends Le.Z{beginSlot(e){return this.ensureTechnique(Te,e)}}class ke extends _e.Mt{constructor(){super(...arguments),this.size=(0,f.f)(1,1),this.color1=(0,C.f)(.75,.75,.75,1),this.color2=(0,C.f)(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}}class Fe extends pe._{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=_e.yD.OccludeAndTransparent,this._geometry=null,this._size=(0,f.f)(1,1),this._color1=(0,C.f)(1,.5,0,.5),this._color2=(0,C.f)(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get size(){return this._size}set size(e){(0,_.c)(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){(0,ue.g)(e,this._color1)||((0,ue.c)(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){(0,ue.g)(e,this._color2)||((0,ue.c)(this._color2,e),this._updateMaterial())}_updateMaterial(){(0,n.pC)(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new Ue({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:_e.yD.OccludeAndTransparent})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){(0,n.pC)(this._checkerBoardMaterial)&&e(this._checkerBoardMaterial)}createGeometries(e){if((0,n.Wi)(this._geometry)||(0,n.Wi)(this._checkerBoardMaterial))return;const t=Ne;(0,he.D)(t,this.transform);const i=this._geometry,s=[],r=(0,L.c)();i.position.forEach((e=>{(0,y.b)(r,e,t),s.push(r[0],r[1],r[2])}));const o=[];i.uv.forEach((e=>{o.push(e[0],e[1])}));const a=new me.Z(this._checkerBoardMaterial,[[fe.T.POSITION,new ge.a(s,3,!0)],[fe.T.UV0,new ge.a(o,2,!0)]],[[fe.T.POSITION,i.triangleIndices],[fe.T.UV0,i.triangleIndices]]);e.addGeometry(a)}_geometryChanged(){this.recreateGeometry()}}const Ne=(0,L.c)();var He=i(60033),qe=i(66962),Ze=i(8108),Be=i(60720);let Ke=class extends r.Z{get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}constructor(e){super(e),this._handles=new Z.Z,this._params={pathLineColor:re.Z.toUnitRGBA((0,ne.e9)()),pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:re.Z.toUnitRGBA((0,ne.e9)()),perimeterLineWidth:2,projectionLineColor:re.Z.toUnitRGBA((0,ne.e9)()),projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:re.Z.toUnitRGBA((0,ne.e9)(.5)),areaColor2:re.Z.toUnitRGBA((0,ne.RN)(.5)),labelDistance:25},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=(0,L.c)(),this._originTransform=(0,le.c)(),this._cursorPositionRenderSpace=(0,L.c)(),this.messages=null,this.viewData=$e,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:e,_params:t,view:i}=this;this._path=new de.r({view:i,attached:!0,width:t.pathLineWidth,color:t.pathLineColor,polygonOffset:!0,renderOccluded:_e.yD.OccludeAndTransparent}),this._intersectedPath=new de.r({view:i,attached:!0,width:t.pathLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:_e.yD.OccludeAndTransparent}),this._perimeter=new de.r({view:i,attached:!0,width:t.perimeterLineWidth,color:t.perimeterLineColor,polygonOffset:!0,renderOccluded:_e.yD.OccludeAndTransparent}),this._intersectedPerimeter=new de.r({view:i,attached:!0,width:t.perimeterLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:_e.yD.OccludeAndTransparent}),this._projectionLines=new de.r({view:i,attached:!0,width:t.projectionLineWidth,color:t.projectionLineColor,stipplePattern:(0,qe.z5)(t.projectionLineStippleSize),polygonOffset:!0,renderOccluded:_e.yD.OccludeAndTransparent}),this._measurementArea=new Fe({view:i,attached:!0,color1:t.areaColor1,color2:t.areaColor2});const s={attached:!0,backgroundColor:(0,ne.hU)(.6),textColor:(0,ne.uu)(),view:i};this._areaLabel=new ce.Kc({...s,fontSize:Ye.Large}),this._pathLengthLabel=new ce.Kc({...s,fontSize:Ye.Small}),this._cursorSegmentLengthLabel=new ce.Kc({...s,fontSize:Ye.Small}),this._perimeterLengthLabel=new ce.Kc({...s,fontSize:Ye.Small}),this._handles.add([(0,d.YP)((()=>[e.mode,this.visible,e.unit,e.measurementData,e.cursorPoint]),(()=>this._update()),d.tX),(0,d.YP)((()=>i.state?.camera),(()=>this._updateLabels()),d.tX),(0,Ze.qe)((()=>this._updateMessageBundle()))]),this._updateMessageBundle()}destroy(){this._measurementArea=(0,n.SC)(this._measurementArea),this._path=(0,n.SC)(this._path),this._intersectedPath=(0,n.SC)(this._intersectedPath),this._perimeter=(0,n.SC)(this._perimeter),this._intersectedPerimeter=(0,n.SC)(this._intersectedPerimeter),this._areaLabel=(0,n.SC)(this._areaLabel),this._pathLengthLabel=(0,n.SC)(this._pathLengthLabel),this._cursorSegmentLengthLabel=(0,n.SC)(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=(0,n.SC)(this._perimeterLengthLabel),this._projectionLines=(0,n.SC)(this._projectionLines),this._handles=(0,n.SC)(this._handles),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:e},analysisViewData:t}=this;(0,n.Wi)(e)||(this._updateViewData(e,t.path,t.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(e,t,i){const s=t.isValidPolygon,r="geodesic"===e.actualMeasurementMode,n=r?e.geodesicArea:e.area;let o=1;if(n){const t=this._toPreferredAreaUnit(n,this.analysisViewData.unit);o=(0,g.sk)(Math.sqrt(t.value)/Math.sqrt(300)),o*=Math.sqrt((0,ae.En)(1,t.unit,"square-meters")),o/=e.unitNormalizer.normalizeDistance(1)}const a={validMeasurement:s,path:t,pathVersion:t.version,cursorPoint:i,measurementData:e,mode:e.actualMeasurementMode,positionsGeographic:e.positionsGeographic,positionsRenderCoords:e.positionsRenderCoords,positionsProjected:e.positionsProjectedWorldCoords,positionsFittedRenderCoords:e.positionsFittedRenderCoords,intersectingSegments:r?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:r?e.geodesicTriangleIndices:e.triangleIndices,fittingMode:e.fittingMode,areaCentroid:r?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:s?0:t.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:o};this._set("viewData",a)}_updateOrigin(){const e=this.viewData;(0,W.H)(e.positionsRenderCoords,this._origin),(0,he.f)(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(e){const t=this.viewData,i=t.path,s=this.view.renderCoordsHelper.spatialReference,r=t.mode,n=[],o=[],a=[],h=t.validMeasurement?i.numVertices:i.numVertices-1;for(let l=0;l<h;++l){const h=t[e][l],c=t[e][(l+1)%i.numVertices];let d=null;switch(r){case"euclidean":d=new He.y(h,c);break;case"geodesic":d=new He.u(h,c,s)}t.intersectingSegments.has(l)?a.push(d):o.push(d),n.push(d)}return{all:n,nonIntersecting:o,intersecting:a}}_updatePathSegments(){const{view:{renderCoordsHelper:e},viewData:t,visible:i}=this,s=this._createSegments("positionsRenderCoords"),{cursorPoint:r,mode:o,path:a}=t,h=!a.isValidPolygon,l=e.spatialReference;if(this._cursorSegment=null,a.numVertices>0&&h&&(0,n.pC)(r)&&e.toRenderCoords(r,this._cursorPositionRenderSpace)){const e=t.positionsRenderCoords[a.numVertices-1],i=this._cursorPositionRenderSpace;let r=null;switch(o){case"euclidean":r=new He.y(e,i);break;case"geodesic":r=new He.u(e,i,l)}s.nonIntersecting.push(r),this._cursorSegment=r}this._path.setGeometryFromSegments(s.nonIntersecting,this._origin),this._path.visible=i,this._intersectedPath.setGeometryFromSegments(s.intersecting,this._origin),this._intersectedPath.visible=i,this._pathSegments=s.all}_updatePerimeterSegments(){const e=this.visible&&"euclidean"===this.viewData.mode,t=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(t.nonIntersecting,this._origin),this._perimeter.visible=e,this._intersectedPerimeter.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPerimeter.visible=e,this._perimeterSegments=t.all}_updateArea(){const e=this.viewData;switch(e.mode){case"euclidean":this._updateAreaEuclidean(e);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(e){const t=this.visible;e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices?(this._measurementArea.geometry={uv:e.positionsProjected,position:e.positionsFittedRenderCoords,triangleIndices:e.triangleIndices},this._measurementArea.size=[e.checkerSize,e.checkerSize],this._measurementArea.visible=t):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const e=this.viewData,t=this.visible,i=e.path,s=e.mode;if(i.numVertices>0&&e.validMeasurement&&"euclidean"===s){const s=[];for(let t=0;t<i.numVertices;++t){const i=(0,L.c)();(0,y.b)(i,e.positionsRenderCoords[t],this._origin);const r=(0,L.c)();(0,y.b)(r,e.positionsFittedRenderCoords[t],this._origin),s.push([i,r])}this._projectionLines.geometry=s,this._projectionLines.visible=t}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:e}=this,{measurementData:t,mode:i,path:s}=e;if(!s)return;const r=!s.isValidPolygon,o=this.visible,a=this._formatAreaLabel(this.messages,"geodesic"===i?t.geodesicArea:t.area,this.analysisViewData.unit);(0,n.pC)(a)?(this._areaLabel.geometry={type:"point",point:e.areaCentroid},this._areaLabel.text=a,this._areaLabel.visible=e.validMeasurement&&0===e.intersectingSegments.size&&o):this._areaLabel.visible=!1,this._set("areaLabel",(0,n.Wg)(a));const h=this._formatLengthLabel(this.messages,"geodesic"===i?t.geodesicPathLength:t.pathLength,this.analysisViewData.unit);if((0,n.pC)(h)&&e.pathLengthLabelSegmentIndex>=0&&e.pathLengthLabelSegmentIndex<this._pathSegments.length){const t=this._pathSegments[e.pathLengthLabelSegmentIndex],i=(0,n.pC)(this._cursorSegment)?this._cursorSegment:Qe;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:t,right:i},this._pathLengthLabel.text=h,this._pathLengthLabel.visible=r&&s.numVertices>0&&o}else this._pathLengthLabel.visible=!1;const l="geodesic"===i?e.measurementData.geodesicCursorSegmentLength:e.measurementData.cursorSegmentLength;if((0,n.pC)(l)){const e=this._formatLengthLabel(this.messages,l,this.analysisViewData.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=(0,n.pC)(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=(0,n.Wg)(e),this._cursorSegmentLengthLabel.visible=r&&0!==l.value&&o}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const c="geodesic"===e.mode,d=c?t.geodesicPathLength:t.perimeterLength,u=this._formatLengthLabel(this.messages,d,this.analysisViewData.unit);if(this._set("perimeterLengthLabel",(0,n.Wg)(u)),e.validMeasurement&&0===e.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=(0,n.Wg)(u),this._perimeterLengthLabel.visible=!0;let t=!0;for(let i=0;i<e.path.numVertices;++i){const s=(e.perimeterLengthLabelSegmentIndex+i)%e.path.numVertices,r=c?this._pathSegments[s]:this._perimeterSegments[s];if(t=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:r,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;t=!1}this._perimeterLengthLabel.visible=t&&o}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(e,t){return(0,m.nn)(e,this._preferredAreaUnit(e,t))}_preferredAreaUnit(e,t){switch(t){case"metric":return(0,ae.tQ)(e.value,e.unit);case"imperial":return(0,ae.Yl)(e.value,e.unit);default:return t}}_preferredLengthUnit(e,t){const i=this._deriveLengthUnitFromAreaUnit(t);switch(i){case"metric":return(0,ae.KU)(e.value,e.unit);case"imperial":return(0,ae.FN)(e.value,e.unit);default:return i}}_deriveLengthUnitFromAreaUnit(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(e,t,i){return e&&t&&(0,oe.VG)(e,t,this._preferredAreaUnit(t,i))}_formatLengthLabel(e,t,i){return e&&t&&(0,oe.VG)(e,t,this._preferredLengthUnit(t,i))}_updateMessageBundle(){this.loadingMessages=!0,(0,Be.ME)("esri/core/t9n/Units").then((e=>{this.messages=e,this.view&&this._update()})).finally((()=>{this.loadingMessages=!1}))}};var Ye,Xe;(0,s._)([(0,o.Cb)()],Ke.prototype,"view",void 0),(0,s._)([(0,o.Cb)()],Ke.prototype,"messages",void 0),(0,s._)([(0,o.Cb)()],Ke.prototype,"analysis",void 0),(0,s._)([(0,o.Cb)()],Ke.prototype,"viewData",void 0),(0,s._)([(0,o.Cb)()],Ke.prototype,"analysisViewData",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],Ke.prototype,"areaLabel",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],Ke.prototype,"perimeterLengthLabel",void 0),(0,s._)([(0,o.Cb)()],Ke.prototype,"loadingMessages",void 0),(0,s._)([(0,o.Cb)()],Ke.prototype,"visible",null),Ke=(0,s._)([(0,a.j)("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],Ke),(Xe=Ye||(Ye={}))[Xe.Small=12]="Small",Xe[Xe.Large=16]="Large";const $e={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},Qe=new He.y((0,L.c)(),(0,L.c)());let Je=class extends((0,l.p)(r.Z)){constructor(e){super(e),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.cursorPoint=null,this.mode=c.e.Auto}initialize(){const{analysis:e,view:t}=this;this.path=new ie({view:t,areaMeasurement:e}),this.analysisVisualization=new Ke({view:t,analysis:e,analysisViewData:this}),this.analysisController=new H({view:t,analysis:e,analysisViewData:this})}destroy(){this.analysisController=(0,n.SC)(this.analysisController),this.analysisVisualization=(0,n.SC)(this.analysisVisualization),this.path.destroy()}get updating(){return!!this.analysisVisualization?.loadingMessages}get result(){const{measurementData:e}=this;return(0,n.Wi)(e)?{area:null,mode:null,perimeter:null}:"euclidean"===e.actualMeasurementMode?{area:e.area,perimeter:e.perimeterLength,mode:"euclidean"}:{area:e.geodesicArea,perimeter:e.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return(0,n.Pt)(this.analysis.unit,this._defaultUnit)}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};(0,s._)([(0,o.Cb)({readOnly:!0})],Je.prototype,"type",void 0),(0,s._)([(0,o.Cb)({constructOnly:!0,nonNullable:!0})],Je.prototype,"analysis",void 0),(0,s._)([(0,o.Cb)()],Je.prototype,"updating",null),(0,s._)([(0,o.Cb)()],Je.prototype,"analysisVisualization",void 0),(0,s._)([(0,o.Cb)()],Je.prototype,"analysisController",void 0),(0,s._)([(0,o.Cb)()],Je.prototype,"result",null),(0,s._)([(0,o.Cb)()],Je.prototype,"measurementData",void 0),(0,s._)([(0,o.Cb)()],Je.prototype,"viewData",null),(0,s._)([(0,o.Cb)()],Je.prototype,"validMeasurement",null),(0,s._)([(0,o.Cb)()],Je.prototype,"path",void 0),(0,s._)([(0,o.Cb)()],Je.prototype,"lastDraggedVertex",void 0),(0,s._)([(0,o.Cb)()],Je.prototype,"cursorPoint",void 0),(0,s._)([(0,o.Cb)()],Je.prototype,"mode",void 0),(0,s._)([(0,o.Cb)()],Je.prototype,"unit",null),(0,s._)([(0,o.Cb)(h.Y)],Je.prototype,"_defaultUnit",void 0),Je=(0,s._)([(0,a.j)("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],Je);const et=Je},95785:(e,t,i)=>{i.d(t,{X:()=>g,bT:()=>L,ln:()=>y,oN:()=>p});var s=i(61681),r=i(39405),n=i(17321),o=i(5992),a=i(6766),h=i(8909),l=i(90472),c=i(69430),d=i(42772),u=i(89976);function p(e,t={positionsWorldCoords:[]}){return m(e,t)}function g(e,t={positionsWorldCoords:[]}){return m(e,t,!1)}function m(e,t,i=e.hasZ){const o=(0,u.m)(e.spatialReference),p=(0,n.oq)(o);if((0,s.Wi)(p))return null;const g=(e,t)=>!(t.length<2||((0,a.s)(e,t[0],t[1],i&&t[2]||0),0));let m=0;for(const i of e.rings){const s=i.length;if(s<3)continue;const{positionsWorldCoords:r}=t;for(;r.length<s;)r.push((0,h.c)());const n=_,u=(0,a.s)(f,0,0,0),p=1/s;for(let t=0;t<s;t++){if(!g(n,i[t]))return null;if(!(0,l.SH)(n,e.spatialReference,r[t],o))return null;(0,a.z)(u,u,r[t],p)}const y=(0,c.zk)(r[0],r[1],u,(0,c.re)());if(0===(0,a.p)((0,c.mJ)(y)))continue;for(let e=0;e<s;e++)(0,c.tx)(y,u,r[e],r[e]);const C=L(r);for(let e=0;e<C.length;e+=3)m+=(0,d.wu)(r[C[e]],r[C[e+1]],r[C[e+2]])}return(0,r.ne)(m,p)}const _=(0,h.c)(),f=(0,h.c)();function y(){return{positionsWorldCoords:[]}}function L(e){return(0,o.e)(function(e){const t=new Float64Array(2*e.length);for(let i=0;i<e.length;++i){const s=e[i],r=2*i;t[r+0]=s[0],t[r+1]=s[1]}return t}(e),[],2)}}}]);