(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[7944,9985,6194],{93687:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>V});var s=r(56140),o=(r(95830),r(59472)),i=r(36544),n=(r(68055),r(65575)),a=r(79881),l=r(30590),p=r(87566),d=r(32656),u=r(10923),y=(r(57002),r(86035),r(7830)),c=r(4665),h=r(8122),f=r(36654),m=r(56700),g=r(43072),v=r(80621),b=r(18152),w=r(78910),I=(r(34341),r(38474),r(42952),r(43925),r(3642),r(57415),r(4037),r(89772)),_=(r(142),r(61121)),S=r(48899),C=r(33716),F=r(10113),L=r(59386),P=r(26360),j=r(52794),x=r(83236),R=r(68510),O=r(10083),T=r(79663),D=r(43551),U=r(31518),E=r(81421),A=r(54209),Z=r(61393),q=r(59930),G=r(58385);let M=class extends G.wq{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};(0,s._)([(0,a.Cb)({type:String,json:{read:!0,write:!0}})],M.prototype,"name",void 0),(0,s._)([(0,a.Cb)({type:String,json:{read:!0,write:!0}})],M.prototype,"field",void 0),(0,s._)([(0,a.Cb)({type:[Number],json:{read:!0,write:!0}})],M.prototype,"currentRangeExtent",void 0),(0,s._)([(0,a.Cb)({type:[Number],json:{read:!0,write:!0}})],M.prototype,"fullRangeExtent",void 0),(0,s._)([(0,a.Cb)({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],M.prototype,"type",void 0),M=(0,s._)([(0,p.j)("esri.layers.support.RangeInfo")],M);const N=M,Q=["3DObject","Point"],k=i.Z.getLogger("esri.layers.SceneLayer"),W=(0,x.v)();let z=class extends((0,Z.V)((0,S.Y)((0,w.q)((0,C.I)((0,F.M)((0,g.R)(m.Z))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.editingEnabled=!0,this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e){const t=this.getField(e);return t&&t.domain?t.domain:null}get fieldsIndex(){return new _.Z(this.fields)}readNodePages(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:A.U4.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return B[this.profile]||"mesh"}set renderer(e){(0,c.YN)(e,this.fields),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=(0,o.pC)(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:E.C,{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:s,supportsUploadWithItemId:i},data:{supportsZ:n,supportsM:a,isVersioned:l},operations:{supportsEditing:p,supportsUpdate:d}}=e,u=e.operations.supportsChangeTracking;return{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:s,supportsGeometryUpdate:!1,supportsUploadWithItemId:i},data:{supportsZ:n,supportsM:a,isVersioned:l},operations:{supportsEditing:p&&u,supportsAdd:!1,supportsDelete:!1,supportsUpdate:d&&u}}}get defaultPopupTemplate(){return(0,o.pC)(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return(0,o.pC)(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const r=t.store.profile;return null!=r&&$[r]?$[r]:(k.error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const t=(0,o.pC)(e)?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(y.r9).then((()=>this._fetchService(t))).then((()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t)]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>(0,T.y)(this,{origin:"service"},t))).then((()=>(0,c.YN)(this.renderer,this.fields)));return this.addResolvingPromise(r),Promise.resolve(this)}createQuery(){const e=new U.Z;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(k.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return(0,D.eZ)(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return(0,o.pC)(e)&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),(0,o.Wi)(this.associatedLayer))throw new d.Z("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new d.Z("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new d.Z("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new d.Z("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const e of this.statisticsInfo)if(e.name===r.name){const r=(0,u.v_)(this.parsedUrl.path,e.href);return(0,f.default)(r,{query:{f:"json"},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new d.Z("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const s=await r.e(791).then(r.bind(r,20791));if(await this.load(),(0,o.Wi)(this.associatedLayer))throw new d.Z(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),s.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&-1===Q.indexOf(e.layerType))throw new d.Z("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d.Z("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d.Z("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,t){let r=!1,s=!1;if(null==e)r=!0,s=!0;else{const o=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,s=o;break;case"vertex-reference-frame":r=!0,s=!o;break;default:r=!1}}if(!r)throw new d.Z("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!s)throw new d.Z("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new d.Z("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),r=!!((0,o.pC)(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some((t=>t&&e.name===t.name))),s={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=s}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if((0,o.Wi)(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if((0,o.Wi)(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=(0,n.vw)(this);for(let r=0;r<e.length;r++){const s=e[r];this._buddyIsMoreImportant(s)&&(t.setDefaultOrigin(this.associatedLayer.originOf(s)),t.set(s,this.associatedLayer[s]),t.setDefaultOrigin("user"))}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new q.W(this.parsedUrl,this.portalItem,e);try{this.associatedLayer=await t.fetch()}catch(e){(0,y.D_)(e)||this._logWarningOnPopupEnabled()}}_logWarningOnPopupEnabled(){(0,v.tH)(this,["popupTemplate","popupEnabled"],(()=>this.popupEnabled&&null!=this.popupTemplate)).then((()=>()=>{const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?k.warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):k.info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}))}_buddyIsMoreImportant(e){if((0,o.Wi)(this.associatedLayer))return!1;const t=this.originIdOf(e),r=this.associatedLayer.originIdOf(e);return null!=r&&r<=2?null==t||t<2:null!=r&&r<=3&&(null==t||t<3)}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&k.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&k.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};(0,s._)([(0,a.Cb)({types:{key:"type",base:L.Z,typeMap:{selection:j.Z}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],z.prototype,"featureReduction",void 0),(0,s._)([(0,a.Cb)({type:[N],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],z.prototype,"rangeInfos",void 0),(0,s._)([(0,a.Cb)({json:{read:!1}})],z.prototype,"associatedLayer",void 0),(0,s._)([(0,a.Cb)({type:["show","hide"]})],z.prototype,"listMode",void 0),(0,s._)([(0,a.Cb)({type:["ArcGISSceneServiceLayer"]})],z.prototype,"operationalLayerType",void 0),(0,s._)([(0,a.Cb)({json:{read:!1},readOnly:!0})],z.prototype,"type",void 0),(0,s._)([(0,a.Cb)({...W.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],z.prototype,"fields",void 0),(0,s._)([(0,a.Cb)({readOnly:!0})],z.prototype,"fieldsIndex",null),(0,s._)([(0,a.Cb)({type:O.Z,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],z.prototype,"floorInfo",void 0),(0,s._)([(0,a.Cb)(W.outFields)],z.prototype,"outFields",void 0),(0,s._)([(0,a.Cb)({type:A.U4,readOnly:!0,json:{read:!1}})],z.prototype,"nodePages",void 0),(0,s._)([(0,l.r)("service","nodePages",["nodePages","pointNodePages"])],z.prototype,"readNodePages",null),(0,s._)([(0,a.Cb)({type:[A.QI],readOnly:!0})],z.prototype,"materialDefinitions",void 0),(0,s._)([(0,a.Cb)({type:[A.Yh],readOnly:!0})],z.prototype,"textureSetDefinitions",void 0),(0,s._)([(0,a.Cb)({type:[A.H3],readOnly:!0})],z.prototype,"geometryDefinitions",void 0),(0,s._)([(0,a.Cb)({readOnly:!0})],z.prototype,"serviceUpdateTimeStamp",void 0),(0,s._)([(0,a.Cb)({readOnly:!0})],z.prototype,"attributeStorageInfo",void 0),(0,s._)([(0,a.Cb)({readOnly:!0})],z.prototype,"statisticsInfo",void 0),(0,s._)([(0,a.Cb)({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:!0}})],z.prototype,"definitionExpression",void 0),(0,s._)([(0,a.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],z.prototype,"path",void 0),(0,s._)([(0,a.Cb)(b.PV)],z.prototype,"elevationInfo",null),(0,s._)([(0,a.Cb)({type:String})],z.prototype,"geometryType",null),(0,s._)([(0,a.Cb)(b.iR)],z.prototype,"labelsVisible",void 0),(0,s._)([(0,a.Cb)({type:[P.Z],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:R.r},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:R.r},write:!0}})],z.prototype,"labelingInfo",void 0),(0,s._)([(0,a.Cb)(b.rn)],z.prototype,"legendEnabled",void 0),(0,s._)([(0,a.Cb)(b.bT)],z.prototype,"opacity",void 0),(0,s._)([(0,a.Cb)({types:I.o,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],z.prototype,"renderer",null),(0,s._)([(0,a.Cb)({json:{read:!1}})],z.prototype,"cachedDrawingInfo",void 0),(0,s._)([(0,l.r)("service","cachedDrawingInfo")],z.prototype,"readCachedDrawingInfo",null),(0,s._)([(0,a.Cb)({readOnly:!0,json:{read:!1}})],z.prototype,"capabilities",null),(0,s._)([(0,a.Cb)({type:Boolean,json:{read:!1}})],z.prototype,"editingEnabled",void 0),(0,s._)([(0,a.Cb)(b.C_)],z.prototype,"popupEnabled",void 0),(0,s._)([(0,a.Cb)({type:h.Z,json:{name:"popupInfo",write:!0}})],z.prototype,"popupTemplate",void 0),(0,s._)([(0,a.Cb)({readOnly:!0,json:{read:!1}})],z.prototype,"defaultPopupTemplate",null),(0,s._)([(0,a.Cb)({type:String,json:{read:!1}})],z.prototype,"objectIdField",void 0),(0,s._)([(0,l.r)("service","objectIdField",["objectIdField","fields"])],z.prototype,"readObjectIdField",null),(0,s._)([(0,a.Cb)({type:String,json:{read:!1}})],z.prototype,"globalIdField",void 0),(0,s._)([(0,l.r)("service","globalIdField",["globalIdField","fields"])],z.prototype,"readGlobalIdField",null),(0,s._)([(0,a.Cb)({readOnly:!0,type:String,json:{read:!1}})],z.prototype,"displayField",null),(0,s._)([(0,a.Cb)({type:String,json:{read:!1}})],z.prototype,"profile",void 0),(0,s._)([(0,l.r)("service","profile",["store.profile"])],z.prototype,"readProfile",null),(0,s._)([(0,a.Cb)({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],z.prototype,"normalReferenceFrame",void 0),(0,s._)([(0,a.Cb)(b.YI)],z.prototype,"screenSizePerspectiveEnabled",void 0),z=(0,s._)([(0,p.j)("esri.layers.SceneLayer")],z);const $={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},B={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},V=z},59930:(e,t,r)=>{"use strict";r.d(t,{W:()=>d});var s=r(59472),o=r(7830),i=r(23838),n=r(36654),a=r(32797),l=r(80192),p=r(8809);class d{constructor(e,t,r){this.parsedUrl=e,this.portalItem=t,this.signal=r,this.rootDocument=null;const s=this.parsedUrl.path.match(/^(.*)\/SceneServer\/layers\/([\d]*)\/?$/i);s&&(this.urlParts={root:s[1],layerId:parseInt(s[2],10)})}async fetch(){var e;if(!this.urlParts)return null;const t=null!=(e=this.portalItem)?e:await this.portalItemFromServiceItemId();if((0,s.Wi)(t))return this.loadFromUrl();const r=await this.findAndLoadRelatedPortalItem(t);return(0,s.Wi)(r)?null:this.loadFeatureLayerFromPortalItem(r)}async fetchPortalItem(){var e;if(!this.urlParts)return null;const t=null!=(e=this.portalItem)?e:await this.portalItemFromServiceItemId();return(0,s.Wi)(t)?null:this.findAndLoadRelatedPortalItem(t)}async fetchRootDocument(){if((0,s.pC)(this.rootDocument))return this.rootDocument;if((0,s.Wi)(this.urlParts))return this.rootDocument={},{};const e={query:{f:"json"},responseType:"json",signal:this.signal},t=`${this.urlParts.root}/SceneServer`;try{const r=await(0,n.default)(t,e);this.rootDocument=r.data}catch{this.rootDocument={}}return this.rootDocument}async fetchServiceOwningPortalUrl(){var e;const t=null==(e=i.id)?void 0:e.findServerInfo(this.parsedUrl.path);if(null!=t&&t.owningSystemUrl)return t.owningSystemUrl;const r=this.parsedUrl.path.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const e=(await(0,n.default)(r,{query:{f:"json"},responseType:"json",signal:this.signal})).data.owningSystemUrl;if(e)return e}catch(e){(0,o.r9)(e)}return null}async findAndLoadRelatedPortalItem(e){try{return(await e.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:this.signal})).find((e=>"Feature Service"===e.type))||null}catch(e){return(0,o.r9)(e),null}}async loadFeatureLayerFromPortalItem(e){await e.load({signal:this.signal});const t=await this.findMatchingAssociatedSublayerUrl(e.url);return new p.default({url:t,portalItem:e}).load({signal:this.signal})}async loadFromUrl(){const e=await this.findMatchingAssociatedSublayerUrl(`${this.urlParts.root}/FeatureServer`);return new p.default({url:e}).load({signal:this.signal})}async findMatchingAssociatedSublayerUrl(e){const t=e.replace(/^(.*FeatureServer)(\/[\d]*\/?)?$/i,"$1"),r={query:{f:"json"},responseType:"json",authMode:"no-prompt",signal:this.signal},s=this.urlParts.layerId,o=this.fetchRootDocument(),i=(0,n.default)(t,r),[a,l]=await Promise.all([i,o]),p=l&&l.layers,d=a.data&&a.data.layers;if(!Array.isArray(d))throw new Error("expected layers array");if(Array.isArray(p)){for(let e=0;e<Math.min(p.length,d.length);e++)if(p[e].id===s)return`${t}/${d[e].id}`}else if(s<d.length)return`${t}/${d[s].id}`;throw new Error("could not find matching associated sublayer")}async portalItemFromServiceItemId(){const e=(await this.fetchRootDocument()).serviceItemId;if(!e)return null;const t=new l.default({id:e}),r=await this.fetchServiceOwningPortalUrl();(0,s.pC)(r)&&(t.portal=new a.Z({url:r}));try{return t.load({signal:this.signal})}catch(e){return(0,o.r9)(e),null}}}},81421:(e,t,r)=>{"use strict";r.d(t,{C:()=>s});const s={attachment:{supportsContentType:!1,supportsExifInfo:!1,supportsKeywords:!1,supportsName:!1,supportsSize:!1},data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:!1},editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1},query:{maxRecordCount:0,maxRecordCountFactor:0,standardMaxRecordCount:0,supportsCacheHint:!1,supportsCentroid:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:!1,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:!1,supportsPagination:!1,supportsPercentileStatistics:!1,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsSqlExpression:!1,supportsStandardizedQueriesOnly:!1,supportsStatistics:!1,tileMaxRecordCount:0}}},39597:(e,t,r)=>{"use strict";r.d(t,{p:()=>o});var s=r(98863);function o(e,t,r){if(!r||!r.features||!r.hasZ)return;const o=(0,s.k)(r.geometryType,t,e.outSpatialReference);if(o)for(const e of r.features)o(e.geometry)}},98863:(e,t,r)=>{"use strict";r.d(t,{k:()=>n,P:()=>l});var s=r(59472),o=r(27780),i=r(93533);function n(e,t,r){if((0,s.Wi)(t)||(0,s.Wi)(r)||r.vcsWkid||(0,o.fS)(t,r))return null;const n=(0,i._R)(t)/(0,i._R)(r);if(1===n)return null;switch(e){case"point":case"esriGeometryPoint":return e=>function(e,t){e&&null!=e.z&&(e.z*=t)}(e,n);case"polyline":case"esriGeometryPolyline":return e=>function(e,t){if(e)for(const r of e.paths)for(const e of r)e.length>2&&(e[2]*=t)}(e,n);case"polygon":case"esriGeometryPolygon":return e=>function(e,t){if(e)for(const r of e.rings)for(const e of r)e.length>2&&(e[2]*=t)}(e,n);case"multipoint":case"esriGeometryMultipoint":return e=>function(e,t){if(e)for(const r of e.points)r.length>2&&(r[2]*=t)}(e,n);default:return null}}function a(e,t,r){if(null==e.hasM||e.hasZ)for(const e of t)for(const t of e)t.length>2&&(t[2]*=r)}function l(e,t,r){if(!e&&!t||!r)return;const s=(0,i._R)(r);p(e,r,s),p(t,r,s)}function p(e,t,r){if(e)for(const s of e)d(s.geometry,t,r)}function d(e,t,r){if(!e||!e.spatialReference||(0,o.fS)(e.spatialReference,t))return;const s=(0,i._R)(e.spatialReference)/r;if(1!==s)if("x"in e)null!=e.z&&(e.z*=s);else if("rings"in e)a(e,e.rings,s);else if("paths"in e)a(e,e.paths,s);else if("points"in e&&(null==e.hasM||e.hasZ))for(const t of e.points)t.length>2&&(t[2]*=s)}},76194:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>v});var s=r(56140),o=(r(95830),r(59472)),i=(r(36544),r(68055),r(79881)),n=r(56274),a=r(30590),l=r(87566),p=r(60538),d=(r(10923),r(57002),r(86035),r(58385)),u=r(73032),y=r(56885),c=r(36348),h=r(15988),f=r(70834);const m=new n.Xn({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let g=class extends d.wq{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){const r=u.Z.fromJSON(t.spatialReference),s=[];for(let t=0;t<e.length;t++){const i=e[t],n=h.Z.fromJSON(i),a=i.geometry&&i.geometry.spatialReference;(0,o.pC)(n.geometry)&&!a&&(n.geometry.spatialReference=r),s.push(n)}return s}writeGeometryType(e,t,r,s){if(e)return void m.write(e,t,r,s);const{features:i}=this;if(i)for(const e of i)if(e&&(0,o.pC)(e.geometry))return void m.write(e.geometry.type,t,r,s)}readQueryGeometry(e,t){if(!e)return null;const r=!!e.spatialReference,s=(0,y.im)(e);return!r&&t.spatialReference&&(s.spatialReference=u.Z.fromJSON(t.spatialReference)),s}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:r}=this;if(r)for(const e of r)if(e&&(0,o.pC)(e.geometry)&&e.geometry.spatialReference)return void(t.spatialReference=e.geometry.spatialReference.toJSON())}toJSON(e){const t=this.write(null);if(t.features&&Array.isArray(e)&&e.length>0)for(let r=0;r<t.features.length;r++){const s=t.features[r];if(s.geometry){const t=e&&e[r];s.geometry=t&&t.toJSON()||s.geometry}}return t}quantize(e){const{scale:[t,r],translate:[s,i]}=e,n=this.features,a=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-s)/t)),(e=>Math.round((i-e)/r)));for(let e=0,t=n.length;e<t;e++)a((0,o.Wg)(n[e].geometry))||(n.splice(e,1),e--,t--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:r}=this;if(!r)return this;const{translate:[s,i],scale:[n,a]}=r,l=this._getHydrationFunction(e,(e=>e*n+s),(e=>i-e*a));for(const{geometry:e}of t)(0,o.pC)(e)&&l(e);return this.transform=null,this}_quantizePoints(e,t,r){let s,o;const i=[];for(let n=0,a=e.length;n<a;n++){const a=e[n];if(n>0){const e=t(a[0]),n=r(a[1]);e===s&&n===o||(i.push([e-s,n-o]),s=e,o=n)}else s=t(a[0]),o=r(a[1]),i.push([s,o])}return i.length>0?i:null}_getQuantizationFunction(e,t,r){return"point"===e?e=>(e.x=t(e.x),e.y=r(e.y),e):"polyline"===e||"polygon"===e?e=>{const s=(0,y.oU)(e)?e.rings:e.paths,o=[];for(let e=0,i=s.length;e<i;e++){const i=s[e],n=this._quantizePoints(i,t,r);n&&o.push(n)}return o.length>0?((0,y.oU)(e)?e.rings=o:e.paths=o,e):null}:"multipoint"===e?e=>{const s=this._quantizePoints(e.points,t,r);return s.length>0?(e.points=s,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,r){return"point"===e?e=>{e.x=t(e.x),e.y=r(e.y)}:"polyline"===e||"polygon"===e?e=>{const s=(0,y.oU)(e)?e.rings:e.paths;let o,i;for(let e=0,n=s.length;e<n;e++){const n=s[e];for(let e=0,s=n.length;e<s;e++){const s=n[e];e>0?(o+=s[0],i+=s[1]):(o=s[0],i=s[1]),s[0]=t(o),s[1]=r(i)}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=r(e.ymin),e.xmax=t(e.xmax),e.ymax=r(e.ymax)}:"multipoint"===e?e=>{const s=e.points;let o,i;for(let e=0,n=s.length;e<n;e++){const n=s[e];e>0?(o+=n[0],i+=n[1]):(o=n[0],i=n[1]),n[0]=t(o),n[1]=r(i)}}:void 0}};(0,s._)([(0,i.Cb)({type:String,json:{write:!0}})],g.prototype,"displayFieldName",void 0),(0,s._)([(0,i.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],g.prototype,"exceededTransferLimit",void 0),(0,s._)([(0,i.Cb)({type:[h.Z],json:{write:!0}})],g.prototype,"features",void 0),(0,s._)([(0,a.r)("features")],g.prototype,"readFeatures",null),(0,s._)([(0,i.Cb)({type:[f.Z],json:{write:!0}})],g.prototype,"fields",void 0),(0,s._)([(0,i.Cb)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:m.read}}})],g.prototype,"geometryType",void 0),(0,s._)([(0,p.c)("geometryType")],g.prototype,"writeGeometryType",null),(0,s._)([(0,i.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],g.prototype,"hasM",void 0),(0,s._)([(0,i.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],g.prototype,"hasZ",void 0),(0,s._)([(0,i.Cb)({types:c.qM,json:{write:!0}})],g.prototype,"queryGeometry",void 0),(0,s._)([(0,a.r)("queryGeometry")],g.prototype,"readQueryGeometry",null),(0,s._)([(0,i.Cb)({type:u.Z,json:{write:!0}})],g.prototype,"spatialReference",void 0),(0,s._)([(0,p.c)("spatialReference")],g.prototype,"writeSpatialReference",null),(0,s._)([(0,i.Cb)({json:{write:!0}})],g.prototype,"transform",void 0),g=(0,s._)([(0,l.j)("esri.tasks.support.FeatureSet")],g),g.prototype.toJSON.isDefaultToJSON=!0,g||(g={});const v=g}}]);