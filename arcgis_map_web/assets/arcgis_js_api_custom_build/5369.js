"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[5369],{75369:(e,r,t)=>{t.r(r),t.d(r,{default:()=>A});var s=t(36663),a=t(66341),i=t(70375),l=t(53280),n=t(63592),o=t(61681),p=t(15842),c=t(78668),u=t(3466),h=t(81977),d=t(69236),y=(t(7753),t(34248)),_=t(40266),f=t(39835),v=t(14685),g=t(38481),b=t(91223),m=t(89993),S=t(81432),T=t(87232),w=t(27668),C=t(63989),O=t(43330),R=t(18241),k=t(12478),U=t(95874),W=t(80002),P=t(20692),j=t(51599),B=t(4452),L=t(23875);const M=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let N=class extends((0,w.h)((0,W.x)((0,U.M)((0,O.q)((0,R.I)((0,m.Z)((0,S.O)((0,T.Y)((0,p.R)((0,l.p)((0,k.Q)((0,b.V)((0,C.N)(g.Z)))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=(0,o.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(c.r9).then((()=>this._fetchService(r)))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){return(e=e||r.tileInfo&&r.tileInfo.spatialReference)&&v.Z.fromJSON(e)}writeSublayers(e,r,t,s){if(!this.loaded||!e)return;const a=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray(),i=[],l={writeSublayerStructure:!1,...s};a.forEach((e=>{const r=e.write({},l);i.push(r)})),i.some((e=>Object.keys(e).length>1))&&(r.layers=i)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl?.path)}castTileServers(e){return Array.isArray(e)?e.map((e=>(0,u.mN)(e).path)):null}fetchTile(e,r,t,s={}){const{signal:i}=s,l=this.getTileUrl(e,r,t),n={responseType:"image",signal:i,query:{...this.refreshParameters}};return(0,a.default)(l,n).then((e=>e.data))}async fetchImageBitmapTile(e,r,t,s={}){const{signal:i}=s,l=this.getTileUrl(e,r,t),n={responseType:"blob",signal:i,query:{...this.refreshParameters}},{data:o}=await(0,a.default)(l,n);return(0,B.g)(o,l)}getTileUrl(e,r,t){const s=!this.tilemapCache&&this.supportsBlankTile,a=(0,u.B7)({...this.parsedUrl?.query,blankTile:!s&&null,...this.customParameters,token:this.apiKey}),i=this.tileServers;return`${i&&i.length?i[r%i.length]:this.parsedUrl?.path}/tile/${e}/${r}/${t}${a?"?"+a:""}`}loadAll(){return(0,n.G)(this,(e=>{e(this.allSublayers)}))}_fetchService(e){return new Promise(((r,t)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new i.Z("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new i.Z("tile-layer:undefined-url","layer's url is not defined");const s=(0,P.Qc)(this.parsedUrl.path);if((0,o.pC)(s)&&"ImageServer"===s.serverType)throw new i.Z("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,a.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,t)})).then((r=>{let t=this.url;if(r.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,P.M8)(t))return this._fetchServerVersion(t,e).then((e=>{this.read({currentVersion:e})})).catch((()=>{}))}))}_fetchServerVersion(e,r){if(!(0,P.B5)(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,a.default)(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new i.Z("tile-layer:version-not-available")}))}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(null==e)return null;let r;e=e.toLowerCase();for(let t=0,s=M.length;t<s;t++)if(r=M[t],r.toLowerCase().includes(e))return(0,u.hF)("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(null==e)return[];const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),t=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};(0,s._)([(0,h.Cb)({readOnly:!0})],N.prototype,"attributionDataUrl",null),(0,s._)([(0,h.Cb)({type:["show","hide","hide-children"]})],N.prototype,"listMode",void 0),(0,s._)([(0,h.Cb)({json:{read:!0,write:!0}})],N.prototype,"blendMode",void 0),(0,s._)([(0,h.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],N.prototype,"isReference",void 0),(0,s._)([(0,h.Cb)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],N.prototype,"operationalLayerType",void 0),(0,s._)([(0,h.Cb)({type:Boolean})],N.prototype,"resampling",void 0),(0,s._)([(0,h.Cb)()],N.prototype,"sourceJSON",void 0),(0,s._)([(0,h.Cb)({type:v.Z})],N.prototype,"spatialReference",void 0),(0,s._)([(0,y.r)("spatialReference",["spatialReference","tileInfo"])],N.prototype,"readSpatialReference",null),(0,s._)([(0,h.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],N.prototype,"path",void 0),(0,s._)([(0,h.Cb)({readOnly:!0})],N.prototype,"sublayers",void 0),(0,s._)([(0,f.c)("sublayers",{layers:{type:[L.Z]}})],N.prototype,"writeSublayers",null),(0,s._)([(0,h.Cb)({json:{read:!1,write:!1}})],N.prototype,"popupEnabled",void 0),(0,s._)([(0,h.Cb)()],N.prototype,"tileServers",null),(0,s._)([(0,d.p)("tileServers")],N.prototype,"castTileServers",null),(0,s._)([(0,h.Cb)({readOnly:!0,json:{read:!1}})],N.prototype,"type",void 0),(0,s._)([(0,h.Cb)(j.HQ)],N.prototype,"url",void 0),N=(0,s._)([(0,_.j)("esri.layers.TileLayer")],N),N.prototype.fetchTile.__isDefault__=!0;const A=N}}]);