(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[3504],{53504:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>m});var o=r(56140),l=(r(95830),r(36544),r(68055),r(79881)),a=r(30590),n=r(87566),i=(r(10923),r(57002),r(86035),r(28293)),s=r(56700),u=r(43072),c=r(78910),p=r(33716),d=r(8809);let y=class extends((0,c.q)((0,p.I)((0,u.R)(s.Z)))){constructor(...e){super(...e),this.type="route"}get barrierLines(){return this._getNamedFeatureLayer("PolylineBarriers")}get barrierPoints(){return this._getNamedFeatureLayer("Barriers")}get barrierPolygons(){return this._getNamedFeatureLayer("PolygonBarriers")}get directionLines(){return this._getNamedFeatureLayer("DirectionLines")}get directionPoints(){return this._getNamedFeatureLayer("DirectionPoints")}readFeatureCollectionsFromItem(e,t,r){return this.revert("featureCollections","portal-item"),t.layers.map((e=>{const t=new d.default;return t.read(e,r),t}))}readFeatureCollectionsFromWebMap(e,t,r){return t.featureCollection.layers.map((e=>{const t=new d.default;return t.read(e,r),t}))}get fullExtent(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>e?e.union(t.fullExtent):t.fullExtent),null):null}get maxScale(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>null==e?t.maxScale:Math.min(e,t.maxScale)),null):0}set maxScale(e){this.featureCollections.forEach((t=>{t.maxScale=e})),this._set("maxScale",e)}get minScale(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>null==e?t.minScale:Math.min(e,t.minScale)),null):0}set minScale(e){this.featureCollections.forEach((t=>{t.minScale=e})),this._set("minScale",e)}get routeInfo(){return this._getNamedFeatureLayer("RouteInfo")}get stops(){return this._getNamedFeatureLayer("Stops")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}_getNamedFeatureLayer(e){if(this.featureCollections)return this.featureCollections.find((t=>t.title===e))}};(0,o._)([(0,l.Cb)()],y.prototype,"barrierLines",null),(0,o._)([(0,l.Cb)()],y.prototype,"barrierPoints",null),(0,o._)([(0,l.Cb)()],y.prototype,"barrierPolygons",null),(0,o._)([(0,l.Cb)()],y.prototype,"directionLines",null),(0,o._)([(0,l.Cb)()],y.prototype,"directionPoints",null),(0,o._)([(0,l.Cb)({type:i.Z.ofType(d.default)})],y.prototype,"featureCollections",void 0),(0,o._)([(0,a.r)("portal-item","featureCollections",["layers"])],y.prototype,"readFeatureCollectionsFromItem",null),(0,o._)([(0,a.r)("web-map","featureCollections",["featureCollection.layers"])],y.prototype,"readFeatureCollectionsFromWebMap",null),(0,o._)([(0,l.Cb)({readOnly:!0})],y.prototype,"fullExtent",null),(0,o._)([(0,l.Cb)({type:["show","hide"]})],y.prototype,"listMode",void 0),(0,o._)([(0,l.Cb)()],y.prototype,"maxScale",null),(0,o._)([(0,l.Cb)()],y.prototype,"minScale",null),(0,o._)([(0,l.Cb)()],y.prototype,"routeInfo",null),(0,o._)([(0,l.Cb)()],y.prototype,"stops",null),(0,o._)([(0,l.Cb)({readOnly:!0,json:{read:!1}})],y.prototype,"type",void 0),y=(0,o._)([(0,n.j)("esri.layers.RouteLayer")],y);const m=y}}]);