(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[956],{50956:(e,a,r)=>{"use strict";r.r(a),r.d(a,{fromUrl:()=>y});var t=r(59472),n=r(32656),l=r(10923),s=r(36654),i=r(97849),u=r(6357);async function y(e){var a;const s=null==(a=e.properties)?void 0:a.customParameters,y=await async function(e,a){let r=(0,i.Qc)(e);if((0,t.Wi)(r)&&(r=await async function(e,a){const r=await f(e,a);let n=null,s=null;const u=r.type;if("Feature Layer"===u||"Table"===u?(n="FeatureServer",s=r.id):"indexedVector"===u?n="VectorTileServer":r.hasOwnProperty("mapName")?n="MapServer":r.hasOwnProperty("bandCount")&&r.hasOwnProperty("pixelSizeX")?n="ImageServer":r.hasOwnProperty("maxRecordCount")&&r.hasOwnProperty("allowGeometryUpdates")?n="FeatureServer":r.hasOwnProperty("streamUrls")&&(n="StreamServer"),!n)return null;const y=null!=s?(0,i.DR)(e):null;return{title:(0,t.pC)(y)&&r.name||(0,l.vt)(e),serverType:n,sublayer:s,url:{path:(0,t.pC)(y)?y.serviceUrl:(0,l.mN)(e).path}}}(e,a)),(0,t.Wi)(r))throw new n.Z("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:e});const{serverType:s,sublayer:y}=r;let o;const d={FeatureServer:"FeatureLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer"};switch(s){case"MapServer":o=null!=y?"FeatureLayer":async function(e,a){return(await f(e,a)).tileInfo}(e,a).then((e=>e?"TileLayer":"MapImageLayer"));break;case"ImageServer":o=f(e,a).then((e=>{const a=e.tileInfo&&e.tileInfo.format;return e.tileInfo?!a||"LERC"!==a.toUpperCase()||e.cacheType&&"elevation"!==e.cacheType.toLowerCase()?"ImageryTileLayer":"ElevationLayer":"ImageryLayer"}));break;case"SceneServer":o=f(r.url.path,a).then((e=>{const a={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};if(e&&Array.isArray(e.layers)&&e.layers.length>0){const r=e.layers[0].layerType;if(null!=a[r])return a[r]}return"SceneLayer"}));break;default:o=d[s]}const b="FeatureServer"===s,w={parsedUrl:r,Constructor:null,layerOrTableId:b?y:null,sublayerIds:null,tableIds:null},h=await o;if({FeatureLayer:!0,SceneLayer:!0}[h]&&null==y){const r=await c(e,s,a);if(b&&(w.sublayerInfos=r.layerInfos,w.tableInfos=r.tableInfos),1!==r.layerIds.length+r.tableIds.length)w.sublayerIds=r.layerIds,w.tableIds=r.tableIds;else if(b){var p,L;w.layerOrTableId=null!=(p=r.layerIds[0])?p:r.tableIds[0],w.sourceJSON=null!=(L=r.layerInfos[0])?L:r.tableInfos[0]}}return w.Constructor=await async function(e){return(0,u.T[e])()}(h),w}(e.url,s),d={...e.properties,url:e.url};if(!y.sublayerIds)return null!=y.layerOrTableId&&(d.layerId=y.layerOrTableId,d.sourceJSON=y.sourceJSON),new y.Constructor(d);const b=new(0,(await r.e(9647).then(r.bind(r,19647))).default)({title:y.parsedUrl.title});return function(e,a,r){function n(e,n){const l={...r,layerId:e,sublayerTitleMode:"service-name"};return(0,t.pC)(n)&&(l.sourceJSON=n),new a.Constructor(l)}a.sublayerIds.forEach((r=>{const t=n(r,o(a.sublayerInfos,r));e.add(t)})),a.tableIds.forEach((r=>{const t=n(r,o(a.tableInfos,r));e.tables.add(t)}))}(b,y,d),b}function o(e,a){return e?e.find((e=>e.id===a)):null}async function c(e,a,r){var t,n;let l,s=!1;if("FeatureServer"===a){const a=await async function(e,a){var r,t;let n=await f(e,a);n=n||{},n.layers=(null==(r=n.layers)?void 0:r.filter(d))||[];const l={serviceJSON:n};if(n.currentVersion<10.5)return l;const s=await f(e+"/layers",a);return l.layersJSON={layers:(null==s||null==(t=s.layers)?void 0:t.filter(d))||[],tables:(null==s?void 0:s.tables)||[]},l}(e,r);s=!!a.layersJSON,l=a.layersJSON||a.serviceJSON}else l=await f(e,r);const i=null==(t=l)?void 0:t.layers,u=null==(n=l)?void 0:n.tables;return{layerIds:(null==i?void 0:i.map((e=>e.id)).reverse())||[],tableIds:(null==u?void 0:u.map((e=>e.id)).reverse())||[],layerInfos:s?i:[],tableInfos:s?u:[]}}function d(e){return!e.type||"Feature Layer"===e.type}async function f(e,a){return(await(0,s.default)(e,{responseType:"json",query:{f:"json",...a}})).data}},6357:(e,a,r)=>{"use strict";r.d(a,{T:()=>t});const t={BingMapsLayer:async()=>(await r.e(2081).then(r.bind(r,42081))).default,BuildingSceneLayer:async()=>(await Promise.all([r.e(7586),r.e(1318)]).then(r.bind(r,31318))).default,CSVLayer:async()=>(await r.e(4479).then(r.bind(r,54479))).default,ElevationLayer:async()=>(await Promise.resolve().then(r.bind(r,65239))).default,FeatureLayer:async()=>(await Promise.resolve().then(r.bind(r,8809))).default,GroupLayer:async()=>(await r.e(9647).then(r.bind(r,19647))).default,GeoRSSLayer:async()=>(await r.e(2303).then(r.bind(r,32303))).default,ImageryLayer:async()=>(await Promise.all([r.e(4464),r.e(6399),r.e(2803),r.e(3194)]).then(r.bind(r,53194))).default,ImageryTileLayer:async()=>(await Promise.all([r.e(4464),r.e(6399),r.e(2803),r.e(8967)]).then(r.bind(r,28967))).default,IntegratedMeshLayer:async()=>(await Promise.all([r.e(7586),r.e(9880)]).then(r.bind(r,59880))).default,KMLLayer:async()=>(await r.e(6184).then(r.bind(r,66184))).default,MapImageLayer:async()=>(await r.e(2933).then(r.bind(r,62933))).default,MapNotesLayer:async()=>(await r.e(3204).then(r.bind(r,73204))).default,OpenStreetMapLayer:async()=>(await r.e(8742).then(r.bind(r,68742))).default,PointCloudLayer:async()=>(await r.e(8342).then(r.bind(r,78342))).default,RouteLayer:async()=>(await r.e(3504).then(r.bind(r,53504))).default,SceneLayer:async()=>(await Promise.all([r.e(7586),r.e(3687)]).then(r.bind(r,93687))).default,StreamLayer:async()=>(await r.e(5034).then(r.bind(r,65034))).default,TileLayer:async()=>(await Promise.resolve().then(r.bind(r,66416))).default,UnknownLayer:async()=>(await r.e(2095).then(r.bind(r,32095))).default,UnsupportedLayer:async()=>(await r.e(1983).then(r.bind(r,51983))).default,VectorTileLayer:async()=>(await Promise.resolve().then(r.bind(r,57680))).default,WebTileLayer:async()=>(await r.e(6601).then(r.bind(r,16601))).default,WMSLayer:async()=>(await r.e(6230).then(r.bind(r,96230))).default,WMTSLayer:async()=>(await r.e(5155).then(r.bind(r,65155))).default}}}]);