(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[1983],{51983:(e,r,s)=>{"use strict";s.r(r),s.d(r,{default:()=>c});var t=s(56140),o=(s(95830),s(36544),s(68055),s(79881)),i=s(87566),n=s(32656),p=(s(10923),s(57002),s(86035),s(74386)),u=s(56700),l=s(43072),a=s(33716);let d=class extends((0,a.I)((0,l.R)(u.Z))){constructor(e){super(e),this.resourceInfo=null,this.type="unsupported"}initialize(){this.addResolvingPromise(new Promise(((e,r)=>{(0,p.Os)((()=>{const e=this.resourceInfo&&(this.resourceInfo.layerType||this.resourceInfo.type);let s="Unsupported layer type";e&&(s+=" "+e),r(new n.Z("layer:unsupported-layer-type",s,{layerType:e}))}))})))}read(e,r){const s={resourceInfo:e};null!=e.id&&(s.id=e.id),null!=e.title&&(s.title=e.title),super.read(s,r)}write(e){return Object.assign(e||{},this.resourceInfo,{id:this.id})}};(0,t._)([(0,o.Cb)({readOnly:!0})],d.prototype,"resourceInfo",void 0),(0,t._)([(0,o.Cb)({type:["show","hide"]})],d.prototype,"listMode",void 0),(0,t._)([(0,o.Cb)({json:{read:!1},readOnly:!0,value:"unsupported"})],d.prototype,"type",void 0),d=(0,t._)([(0,i.j)("esri.layers.UnsupportedLayer")],d);const c=d}}]);